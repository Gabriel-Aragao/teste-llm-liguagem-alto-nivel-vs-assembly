0x00000000005788b8 <+0>:	push   %r15
0x00000000005788ba <+2>:	push   %r14
0x00000000005788bc <+4>:	push   %r13
0x00000000005788be <+6>:	push   %r12
0x00000000005788c0 <+8>:	push   %rbp
0x00000000005788c1 <+9>:	push   %rbx
0x00000000005788c2 <+10>:	sub    $0x108,%rsp
0x00000000005788c9 <+17>:	mov    %rdi,0x18(%rsp)
0x00000000005788ce <+22>:	test   %rdi,%rdi
0x00000000005788d1 <+25>:	je     0x578a1b <_PyEval_EvalFrameDefault+355>
0x00000000005788d7 <+31>:	mov    %rsi,%rbp
0x00000000005788da <+34>:	mov    %edx,%r14d
0x00000000005788dd <+37>:	mov    0x18(%rsp),%rdi
0x00000000005788e2 <+42>:	mov    0x10(%rdi),%rax
0x00000000005788e6 <+46>:	mov    %rax,0x28(%rsp)
0x00000000005788eb <+51>:	movq   $0x0,0x20(%rsp)
0x00000000005788f4 <+60>:	mov    0x38(%rdi),%rax
0x00000000005788f8 <+64>:	movzbl (%rax),%edx
0x00000000005788fb <+67>:	mov    %dl,0xc0(%rsp)
0x0000000000578902 <+74>:	mov    %rax,0xd0(%rsp)
0x000000000057890a <+82>:	lea    0xc0(%rsp),%rdx
0x0000000000578912 <+90>:	mov    %rdx,0x38(%rdi)
0x0000000000578916 <+94>:	movb   $0x1,0x44(%rsi)
0x000000000057891a <+98>:	mov    0x8(%rax),%rax
0x000000000057891e <+102>:	mov    %rax,0x30(%rsi)
0x0000000000578922 <+106>:	mov    %rsi,0xc8(%rsp)
0x000000000057892a <+114>:	test   %r14d,%r14d
0x000000000057892d <+117>:	je     0x57b1ae <_PyEval_EvalFrameDefault+10486>
0x0000000000578933 <+123>:	mov    $0x6e51db,%esi
0x0000000000578938 <+128>:	call   0x577d9b <_Py_EnterRecursiveCallTstate>
0x000000000057893d <+133>:	mov    %eax,0x14(%rsp)
0x0000000000578941 <+137>:	test   %eax,%eax
0x0000000000578943 <+139>:	jne    0x578a25 <_PyEval_EvalFrameDefault+365>
0x0000000000578949 <+145>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000578951 <+153>:	je     0x578972 <_PyEval_EvalFrameDefault+186>
0x0000000000578953 <+155>:	cmpl   $0x0,0x40(%rbp)
0x0000000000578957 <+159>:	js     0x578a41 <_PyEval_EvalFrameDefault+393>
0x000000000057895d <+165>:	mov    %rbp,%rsi
0x0000000000578960 <+168>:	mov    0x18(%rsp),%rdi
0x0000000000578965 <+173>:	call   0x577fd3 <trace_function_entry>
0x000000000057896a <+178>:	test   %eax,%eax
0x000000000057896c <+180>:	jne    0x578a7e <_PyEval_EvalFrameDefault+454>
0x0000000000578972 <+186>:	cmpw   $0x0,0x546ac6(%rip)        # 0xabf440 <python_function__entry_semaphore>
0x000000000057897a <+194>:	jne    0x578a5a <_PyEval_EvalFrameDefault+418>
0x0000000000578980 <+200>:	mov    0x20(%rbp),%rax
0x0000000000578984 <+204>:	mov    0x20(%rax),%rcx
0x0000000000578988 <+208>:	mov    %rcx,0x30(%rsp)
0x000000000057898d <+213>:	mov    0x18(%rax),%rcx
0x0000000000578991 <+217>:	mov    %rcx,0x40(%rsp)
0x0000000000578996 <+222>:	add    $0xb8,%rax
0x000000000057899c <+228>:	mov    %rax,%rcx
0x000000000057899f <+231>:	mov    %rax,0x38(%rsp)
0x00000000005789a4 <+236>:	mov    0x38(%rbp),%rdx
0x00000000005789a8 <+240>:	mov    %rdx,%rax
0x00000000005789ab <+243>:	sub    %rcx,%rax
0x00000000005789ae <+246>:	sar    %rax
0x00000000005789b1 <+249>:	cmp    $0xffffffff,%eax
0x00000000005789b4 <+252>:	jl     0x58a042 <_PyEval_EvalFrameDefault+71562>
0x00000000005789ba <+258>:	lea    0x2(%rdx),%r15
0x00000000005789be <+262>:	movslq 0x40(%rbp),%rax
0x00000000005789c2 <+266>:	lea    0x48(%rbp,%rax,8),%rbx
0x00000000005789c7 <+271>:	movl   $0xffffffff,0x40(%rbp)
0x00000000005789ce <+278>:	movq   $0x0,0x20(%rsp)
0x00000000005789d7 <+287>:	mov    0x18(%rsp),%rdi
0x00000000005789dc <+292>:	call   0x573630 <_PyErr_Occurred>
0x00000000005789e1 <+297>:	test   %rax,%rax
0x00000000005789e4 <+300>:	je     0x589bc7 <_PyEval_EvalFrameDefault+70415>
0x00000000005789ea <+306>:	cmpb   $0x1,0x45(%rbp)
0x00000000005789ee <+310>:	je     0x589be0 <_PyEval_EvalFrameDefault+70440>
0x00000000005789f4 <+316>:	mov    0x20(%rbp),%rax
0x00000000005789f8 <+320>:	movslq 0xa8(%rax),%rdx
0x00000000005789ff <+327>:	lea    0xb8(%rax,%rdx,2),%rax
0x0000000000578a07 <+335>:	cmp    %rax,0x38(%rbp)
0x0000000000578a0b <+339>:	jb     0x589c0d <_PyEval_EvalFrameDefault+70485>
0x0000000000578a11 <+345>:	mov    $0x0,%eax
0x0000000000578a16 <+350>:	jmp    0x589be5 <_PyEval_EvalFrameDefault+70445>
0x0000000000578a1b <+355>:	mov    $0x744500,%edi
0x0000000000578a20 <+360>:	call   0x5771bf <_Py_FatalError_TstateNULL>
0x0000000000578a25 <+365>:	mov    0x18(%rsp),%rcx
0x0000000000578a2a <+370>:	mov    0x20(%rcx),%eax
0x0000000000578a2d <+373>:	mov    %eax,0x8(%rsp)
0x0000000000578a31 <+377>:	sub    $0x1,%eax
0x0000000000578a34 <+380>:	mov    %eax,0x20(%rcx)
0x0000000000578a37 <+383>:	movl   $0x0,0x14(%rsp)
0x0000000000578a3f <+391>:	jmp    0x578a7e <_PyEval_EvalFrameDefault+454>
0x0000000000578a41 <+393>:	mov    $0x7444e0,%ecx
0x0000000000578a46 <+398>:	mov    $0x690,%edx
0x0000000000578a4b <+403>:	mov    $0x74045c,%esi
0x0000000000578a50 <+408>:	mov    $0x6e59a9,%edi
0x0000000000578a55 <+413>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578a5a <+418>:	mov    %rbp,%rdi
0x0000000000578a5d <+421>:	call   0x576cbf <dtrace_function_entry>
0x0000000000578a62 <+426>:	jmp    0x578980 <_PyEval_EvalFrameDefault+200>
0x0000000000578a67 <+431>:	mov    0x18(%rsp),%rcx
0x0000000000578a6c <+436>:	mov    0x20(%rcx),%eax
0x0000000000578a6f <+439>:	mov    %eax,0x8(%rsp)
0x0000000000578a73 <+443>:	sub    $0x1,%eax
0x0000000000578a76 <+446>:	mov    %eax,0x20(%rcx)
0x0000000000578a79 <+449>:	mov    %r14d,0x14(%rsp)
0x0000000000578a7e <+454>:	mov    0x18(%rsp),%rdi
0x0000000000578a83 <+459>:	call   0x573630 <_PyErr_Occurred>
0x0000000000578a88 <+464>:	test   %rax,%rax
0x0000000000578a8b <+467>:	je     0x589fef <_PyEval_EvalFrameDefault+71479>
0x0000000000578a91 <+473>:	mov    0x18(%rsp),%rcx
0x0000000000578a96 <+478>:	mov    0x20(%rcx),%eax
0x0000000000578a99 <+481>:	mov    %eax,0x8(%rsp)
0x0000000000578a9d <+485>:	add    $0x1,%eax
0x0000000000578aa0 <+488>:	mov    %eax,0x20(%rcx)
0x0000000000578aa3 <+491>:	cmpb   $0x0,0x44(%rbp)
0x0000000000578aa7 <+495>:	je     0x58a021 <_PyEval_EvalFrameDefault+71529>
0x0000000000578aad <+501>:	mov    0xd0(%rsp),%rax
0x0000000000578ab5 <+509>:	mov    %rax,0x38(%rcx)
0x0000000000578ab9 <+513>:	movzbl 0xc0(%rsp),%edx
0x0000000000578ac1 <+521>:	mov    %dl,(%rax)
0x0000000000578ac3 <+523>:	mov    0x38(%rcx),%rax
0x0000000000578ac7 <+527>:	mov    0x30(%rbp),%rcx
0x0000000000578acb <+531>:	cmp    %rcx,0x8(%rax)
0x0000000000578acf <+535>:	jne    0x58a008 <_PyEval_EvalFrameDefault+71504>
0x0000000000578ad5 <+541>:	mov    $0x0,%r12d
0x0000000000578adb <+547>:	mov    %r12,%rax
0x0000000000578ade <+550>:	add    $0x108,%rsp
0x0000000000578ae5 <+557>:	pop    %rbx
0x0000000000578ae6 <+558>:	pop    %rbp
0x0000000000578ae7 <+559>:	pop    %r12
0x0000000000578ae9 <+561>:	pop    %r13
0x0000000000578aeb <+563>:	pop    %r14
0x0000000000578aed <+565>:	pop    %r15
0x0000000000578aef <+567>:	ret
0x0000000000578af0 <+568>:	mov    $0x7444e0,%ecx
0x0000000000578af5 <+573>:	mov    $0x6ba,%edx
0x0000000000578afa <+578>:	mov    $0x74045c,%esi
0x0000000000578aff <+583>:	mov    $0x742a28,%edi
0x0000000000578b04 <+588>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578b09 <+593>:	mov    %rbp,%rdi
0x0000000000578b0c <+596>:	call   0x573d7e <lltrace_resume_frame>
0x0000000000578b11 <+601>:	jmp    0x57b234 <_PyEval_EvalFrameDefault+10620>
0x0000000000578b16 <+606>:	mov    $0x7444e0,%ecx
0x0000000000578b1b <+611>:	mov    $0x6cd,%edx
0x0000000000578b20 <+616>:	mov    $0x74045c,%esi
0x0000000000578b25 <+621>:	mov    $0x6dba3b,%edi
0x0000000000578b2a <+626>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578b2f <+631>:	mov    %r13,%rdx
0x0000000000578b32 <+634>:	mov    %rbx,%rsi
0x0000000000578b35 <+637>:	mov    %rbp,%rdi
0x0000000000578b38 <+640>:	call   0x573f7b <lltrace_instruction>
0x0000000000578b3d <+645>:	jmp    0x57b266 <_PyEval_EvalFrameDefault+10670>
0x0000000000578b42 <+650>:	mov    $0x7444e0,%ecx
0x0000000000578b47 <+655>:	mov    $0x6d0,%edx
0x0000000000578b4c <+660>:	mov    $0x74045c,%esi
0x0000000000578b51 <+665>:	mov    $0x742a50,%edi
0x0000000000578b56 <+670>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578b5b <+675>:	mov    $0xffffffff,%eax
0x0000000000578b60 <+680>:	jmp    0x57b28f <_PyEval_EvalFrameDefault+10711>
0x0000000000578b65 <+685>:	mov    %r15,%r13
0x0000000000578b68 <+688>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b6a <+690>:	mov    %r15,%r13
0x0000000000578b6d <+693>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b6f <+695>:	mov    %r15,%r13
0x0000000000578b72 <+698>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b74 <+700>:	mov    %r15,%r13
0x0000000000578b77 <+703>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b79 <+705>:	mov    %r15,%r13
0x0000000000578b7c <+708>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b7e <+710>:	mov    %r15,%r13
0x0000000000578b81 <+713>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b83 <+715>:	mov    %r15,%r13
0x0000000000578b86 <+718>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b88 <+720>:	mov    %r15,%r13
0x0000000000578b8b <+723>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b8d <+725>:	mov    %r15,%r13
0x0000000000578b90 <+728>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b92 <+730>:	mov    %r15,%r13
0x0000000000578b95 <+733>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578b97 <+735>:	mov    %r15,%r13
0x0000000000578b9a <+738>:	mov    0x18(%rsp),%rdi
0x0000000000578b9f <+743>:	call   0x5778cf <eval_frame_handle_pending>
0x0000000000578ba4 <+748>:	test   %eax,%eax
0x0000000000578ba6 <+750>:	jne    0x589b83 <_PyEval_EvalFrameDefault+70347>
0x0000000000578bac <+756>:	movzwl 0x0(%r13),%r12d
0x0000000000578bb1 <+761>:	mov    %r12d,%eax
0x0000000000578bb4 <+764>:	shr    $0x8,%ax
0x0000000000578bb8 <+768>:	movzwl %ax,%eax
0x0000000000578bbb <+771>:	mov    %eax,0x8(%rsp)
0x0000000000578bbf <+775>:	cmpl   $0x0,0x14(%rsp)
0x0000000000578bc4 <+780>:	jne    0x578bfb <_PyEval_EvalFrameDefault+835>
0x0000000000578bc6 <+782>:	movzbl 0xc0(%rsp),%eax
0x0000000000578bce <+790>:	lea    -0x1(%rax),%edx
0x0000000000578bd1 <+793>:	cmp    $0xfd,%dl
0x0000000000578bd4 <+796>:	jbe    0x578c0b <_PyEval_EvalFrameDefault+851>
0x0000000000578bd6 <+798>:	cmpw   $0x0,0x54686e(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000578bde <+806>:	jne    0x578c24 <_PyEval_EvalFrameDefault+876>
0x0000000000578be0 <+808>:	mov    $0x0,%edx
0x0000000000578be5 <+813>:	or     %edx,%eax
0x0000000000578be7 <+815>:	or     %eax,%r12d
0x0000000000578bea <+818>:	movzbl %r12b,%eax
0x0000000000578bee <+822>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000578bf6 <+830>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000578bfb <+835>:	mov    %r13,%rdx
0x0000000000578bfe <+838>:	mov    %rbx,%rsi
0x0000000000578c01 <+841>:	mov    %rbp,%rdi
0x0000000000578c04 <+844>:	call   0x573f7b <lltrace_instruction>
0x0000000000578c09 <+849>:	jmp    0x578bc6 <_PyEval_EvalFrameDefault+782>
0x0000000000578c0b <+851>:	mov    $0x7444e0,%ecx
0x0000000000578c10 <+856>:	mov    $0x6dc,%edx
0x0000000000578c15 <+861>:	mov    $0x74045c,%esi
0x0000000000578c1a <+866>:	mov    $0x742a50,%edi
0x0000000000578c1f <+871>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578c24 <+876>:	mov    $0xffffffff,%edx
0x0000000000578c29 <+881>:	jmp    0x578be5 <_PyEval_EvalFrameDefault+813>
0x0000000000578c2b <+883>:	lea    0x2(%r13),%r14
0x0000000000578c2f <+887>:	mov    %r13,0x38(%rbp)
0x0000000000578c33 <+891>:	movzwl 0x2(%r13),%r12d
0x0000000000578c38 <+896>:	mov    %r12d,%eax
0x0000000000578c3b <+899>:	shr    $0x8,%ax
0x0000000000578c3f <+903>:	movzwl %ax,%eax
0x0000000000578c42 <+906>:	mov    %eax,0x8(%rsp)
0x0000000000578c46 <+910>:	cmpl   $0x0,0x14(%rsp)
0x0000000000578c4b <+915>:	jne    0x578c85 <_PyEval_EvalFrameDefault+973>
0x0000000000578c4d <+917>:	movzbl 0xc0(%rsp),%eax
0x0000000000578c55 <+925>:	lea    -0x1(%rax),%edx
0x0000000000578c58 <+928>:	cmp    $0xfd,%dl
0x0000000000578c5b <+931>:	jbe    0x578c95 <_PyEval_EvalFrameDefault+989>
0x0000000000578c5d <+933>:	cmpw   $0x0,0x5467e7(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000578c65 <+941>:	jne    0x578cae <_PyEval_EvalFrameDefault+1014>
0x0000000000578c67 <+943>:	mov    $0x0,%edx
0x0000000000578c6c <+948>:	or     %edx,%eax
0x0000000000578c6e <+950>:	or     %eax,%r12d
0x0000000000578c71 <+953>:	movzbl %r12b,%eax
0x0000000000578c75 <+957>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000578c7d <+965>:	mov    %r14,%r13
0x0000000000578c80 <+968>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000578c85 <+973>:	mov    %r14,%rdx
0x0000000000578c88 <+976>:	mov    %rbx,%rsi
0x0000000000578c8b <+979>:	mov    %rbp,%rdi
0x0000000000578c8e <+982>:	call   0x573f7b <lltrace_instruction>
0x0000000000578c93 <+987>:	jmp    0x578c4d <_PyEval_EvalFrameDefault+917>
0x0000000000578c95 <+989>:	mov    $0x7444e0,%ecx
0x0000000000578c9a <+994>:	mov    $0x6ec,%edx
0x0000000000578c9f <+999>:	mov    $0x74045c,%esi
0x0000000000578ca4 <+1004>:	mov    $0x742a50,%edi
0x0000000000578ca9 <+1009>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578cae <+1014>:	mov    $0xffffffff,%edx
0x0000000000578cb3 <+1019>:	jmp    0x578c6c <_PyEval_EvalFrameDefault+948>
0x0000000000578cb5 <+1021>:	lea    0x2(%r13),%r12
0x0000000000578cb9 <+1025>:	mov    %r13,0x38(%rbp)
0x0000000000578cbd <+1029>:	mov    0x20(%rbp),%rdi
0x0000000000578cc1 <+1033>:	call   0x57509a <_PyCode_Warmup>
0x0000000000578cc6 <+1038>:	mov    %r12,%r13
0x0000000000578cc9 <+1041>:	lea    0xc0(%rsp),%rax
0x0000000000578cd1 <+1049>:	mov    0x18(%rsp),%rcx
0x0000000000578cd6 <+1054>:	cmp    %rax,0x38(%rcx)
0x0000000000578cda <+1058>:	jne    0x578d65 <_PyEval_EvalFrameDefault+1197>
0x0000000000578ce0 <+1064>:	cmp    %rbp,0xc8(%rsp)
0x0000000000578ce8 <+1072>:	jne    0x578d7e <_PyEval_EvalFrameDefault+1222>
0x0000000000578cee <+1078>:	mov    0x28(%rsp),%rax
0x0000000000578cf3 <+1083>:	mov    0x64(%rax),%eax
0x0000000000578cf6 <+1086>:	test   %eax,%eax
0x0000000000578cf8 <+1088>:	je     0x578d05 <_PyEval_EvalFrameDefault+1101>
0x0000000000578cfa <+1090>:	cmpl   $0x1,0x8(%rsp)
0x0000000000578cff <+1095>:	jle    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000578d05 <+1101>:	movzwl 0x0(%r13),%r12d
0x0000000000578d0a <+1106>:	mov    %r12d,%eax
0x0000000000578d0d <+1109>:	shr    $0x8,%ax
0x0000000000578d11 <+1113>:	movzwl %ax,%eax
0x0000000000578d14 <+1116>:	mov    %eax,0x8(%rsp)
0x0000000000578d18 <+1120>:	cmpl   $0x0,0x14(%rsp)
0x0000000000578d1d <+1125>:	jne    0x578d97 <_PyEval_EvalFrameDefault+1247>
0x0000000000578d1f <+1127>:	movzbl 0xc0(%rsp),%eax
0x0000000000578d27 <+1135>:	lea    -0x1(%rax),%edx
0x0000000000578d2a <+1138>:	cmp    $0xfd,%dl
0x0000000000578d2d <+1141>:	jbe    0x578daa <_PyEval_EvalFrameDefault+1266>
0x0000000000578d2f <+1143>:	cmpw   $0x0,0x546715(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000578d37 <+1151>:	jne    0x578dc3 <_PyEval_EvalFrameDefault+1291>
0x0000000000578d3d <+1157>:	mov    $0x0,%edx
0x0000000000578d42 <+1162>:	or     %edx,%eax
0x0000000000578d44 <+1164>:	or     %eax,%r12d
0x0000000000578d47 <+1167>:	movzbl %r12b,%eax
0x0000000000578d4b <+1171>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000578d53 <+1179>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000578d58 <+1184>:	mov    %r13,0x38(%rbp)
0x0000000000578d5c <+1188>:	lea    0x2(%r13),%r13
0x0000000000578d60 <+1192>:	jmp    0x578cc9 <_PyEval_EvalFrameDefault+1041>
0x0000000000578d65 <+1197>:	mov    $0x7444e0,%ecx
0x0000000000578d6a <+1202>:	mov    $0x6f6,%edx
0x0000000000578d6f <+1207>:	mov    $0x74045c,%esi
0x0000000000578d74 <+1212>:	mov    $0x740884,%edi
0x0000000000578d79 <+1217>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578d7e <+1222>:	mov    $0x7444e0,%ecx
0x0000000000578d83 <+1227>:	mov    $0x6f7,%edx
0x0000000000578d88 <+1232>:	mov    $0x74045c,%esi
0x0000000000578d8d <+1237>:	mov    $0x74089e,%edi
0x0000000000578d92 <+1242>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578d97 <+1247>:	mov    %r13,%rdx
0x0000000000578d9a <+1250>:	mov    %rbx,%rsi
0x0000000000578d9d <+1253>:	mov    %rbp,%rdi
0x0000000000578da0 <+1256>:	call   0x573f7b <lltrace_instruction>
0x0000000000578da5 <+1261>:	jmp    0x578d1f <_PyEval_EvalFrameDefault+1127>
0x0000000000578daa <+1266>:	mov    $0x7444e0,%ecx
0x0000000000578daf <+1271>:	mov    $0x6fb,%edx
0x0000000000578db4 <+1276>:	mov    $0x74045c,%esi
0x0000000000578db9 <+1281>:	mov    $0x742a50,%edi
0x0000000000578dbe <+1286>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578dc3 <+1291>:	mov    $0xffffffff,%edx
0x0000000000578dc8 <+1296>:	jmp    0x578d42 <_PyEval_EvalFrameDefault+1162>
0x0000000000578dcd <+1301>:	lea    0x2(%r13),%r15
0x0000000000578dd1 <+1305>:	mov    %r13,0x38(%rbp)
0x0000000000578dd5 <+1309>:	movslq 0x8(%rsp),%rax
0x0000000000578dda <+1314>:	mov    0x48(%rbp,%rax,8),%rax
0x0000000000578ddf <+1319>:	test   %rax,%rax
0x0000000000578de2 <+1322>:	je     0x589b4e <_PyEval_EvalFrameDefault+70294>
0x0000000000578de8 <+1328>:	addq   $0x1,0x54ac98(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000578df0 <+1336>:	mov    (%rax),%rcx
0x0000000000578df3 <+1339>:	lea    0x1(%rcx),%rdx
0x0000000000578df7 <+1343>:	mov    %rdx,(%rax)
0x0000000000578dfa <+1346>:	lea    0x8(%rbx),%r13
0x0000000000578dfe <+1350>:	mov    %rax,(%rbx)
0x0000000000578e01 <+1353>:	mov    0x20(%rbp),%rdx
0x0000000000578e05 <+1357>:	movslq 0x4c(%rdx),%rax
0x0000000000578e09 <+1361>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000578e0e <+1366>:	mov    %r13,%rax
0x0000000000578e11 <+1369>:	sub    %rcx,%rax
0x0000000000578e14 <+1372>:	sar    $0x3,%rax
0x0000000000578e18 <+1376>:	cmp    %eax,0x44(%rdx)
0x0000000000578e1b <+1379>:	jl     0x578e71 <_PyEval_EvalFrameDefault+1465>
0x0000000000578e1d <+1381>:	movzwl (%r15),%r12d
0x0000000000578e21 <+1385>:	mov    %r12d,%eax
0x0000000000578e24 <+1388>:	shr    $0x8,%ax
0x0000000000578e28 <+1392>:	movzwl %ax,%eax
0x0000000000578e2b <+1395>:	mov    %eax,0x8(%rsp)
0x0000000000578e2f <+1399>:	cmpl   $0x0,0x14(%rsp)
0x0000000000578e34 <+1404>:	jne    0x578e8a <_PyEval_EvalFrameDefault+1490>
0x0000000000578e36 <+1406>:	movzbl 0xc0(%rsp),%eax
0x0000000000578e3e <+1414>:	lea    -0x1(%rax),%edx
0x0000000000578e41 <+1417>:	cmp    $0xfd,%dl
0x0000000000578e44 <+1420>:	jbe    0x578e9a <_PyEval_EvalFrameDefault+1506>
0x0000000000578e46 <+1422>:	cmpw   $0x0,0x5465fe(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000578e4e <+1430>:	jne    0x578eb3 <_PyEval_EvalFrameDefault+1531>
0x0000000000578e50 <+1432>:	mov    $0x0,%edx
0x0000000000578e55 <+1437>:	or     %edx,%eax
0x0000000000578e57 <+1439>:	or     %eax,%r12d
0x0000000000578e5a <+1442>:	movzbl %r12b,%eax
0x0000000000578e5e <+1446>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000578e66 <+1454>:	mov    %r13,%rbx
0x0000000000578e69 <+1457>:	mov    %r15,%r13
0x0000000000578e6c <+1460>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000578e71 <+1465>:	mov    $0x7444e0,%ecx
0x0000000000578e76 <+1470>:	mov    $0x705,%edx
0x0000000000578e7b <+1475>:	mov    $0x74045c,%esi
0x0000000000578e80 <+1480>:	mov    $0x7408bc,%edi
0x0000000000578e85 <+1485>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578e8a <+1490>:	mov    %r15,%rdx
0x0000000000578e8d <+1493>:	mov    %r13,%rsi
0x0000000000578e90 <+1496>:	mov    %rbp,%rdi
0x0000000000578e93 <+1499>:	call   0x573f7b <lltrace_instruction>
0x0000000000578e98 <+1504>:	jmp    0x578e36 <_PyEval_EvalFrameDefault+1406>
0x0000000000578e9a <+1506>:	mov    $0x7444e0,%ecx
0x0000000000578e9f <+1511>:	mov    $0x706,%edx
0x0000000000578ea4 <+1516>:	mov    $0x74045c,%esi
0x0000000000578ea9 <+1521>:	mov    $0x742a50,%edi
0x0000000000578eae <+1526>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578eb3 <+1531>:	mov    $0xffffffff,%edx
0x0000000000578eb8 <+1536>:	jmp    0x578e55 <_PyEval_EvalFrameDefault+1437>
0x0000000000578eba <+1538>:	lea    0x2(%r13),%r15
0x0000000000578ebe <+1542>:	mov    %r13,0x38(%rbp)
0x0000000000578ec2 <+1546>:	movslq 0x8(%rsp),%rax
0x0000000000578ec7 <+1551>:	mov    0x48(%rbp,%rax,8),%rax
0x0000000000578ecc <+1556>:	test   %rax,%rax
0x0000000000578ecf <+1559>:	je     0x589b4e <_PyEval_EvalFrameDefault+70294>
0x0000000000578ed5 <+1565>:	addq   $0x1,0x54abab(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000578edd <+1573>:	mov    (%rax),%rcx
0x0000000000578ee0 <+1576>:	lea    0x1(%rcx),%rdx
0x0000000000578ee4 <+1580>:	mov    %rdx,(%rax)
0x0000000000578ee7 <+1583>:	lea    0x8(%rbx),%r13
0x0000000000578eeb <+1587>:	mov    %rax,(%rbx)
0x0000000000578eee <+1590>:	mov    0x20(%rbp),%rdx
0x0000000000578ef2 <+1594>:	movslq 0x4c(%rdx),%rax
0x0000000000578ef6 <+1598>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000578efb <+1603>:	mov    %r13,%rax
0x0000000000578efe <+1606>:	sub    %rcx,%rax
0x0000000000578f01 <+1609>:	sar    $0x3,%rax
0x0000000000578f05 <+1613>:	cmp    %eax,0x44(%rdx)
0x0000000000578f08 <+1616>:	jl     0x578f5e <_PyEval_EvalFrameDefault+1702>
0x0000000000578f0a <+1618>:	movzwl (%r15),%r12d
0x0000000000578f0e <+1622>:	mov    %r12d,%eax
0x0000000000578f11 <+1625>:	shr    $0x8,%ax
0x0000000000578f15 <+1629>:	movzwl %ax,%eax
0x0000000000578f18 <+1632>:	mov    %eax,0x8(%rsp)
0x0000000000578f1c <+1636>:	cmpl   $0x0,0x14(%rsp)
0x0000000000578f21 <+1641>:	jne    0x578f77 <_PyEval_EvalFrameDefault+1727>
0x0000000000578f23 <+1643>:	movzbl 0xc0(%rsp),%eax
0x0000000000578f2b <+1651>:	lea    -0x1(%rax),%edx
0x0000000000578f2e <+1654>:	cmp    $0xfd,%dl
0x0000000000578f31 <+1657>:	jbe    0x578f87 <_PyEval_EvalFrameDefault+1743>
0x0000000000578f33 <+1659>:	cmpw   $0x0,0x546511(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000578f3b <+1667>:	jne    0x578fa0 <_PyEval_EvalFrameDefault+1768>
0x0000000000578f3d <+1669>:	mov    $0x0,%edx
0x0000000000578f42 <+1674>:	or     %edx,%eax
0x0000000000578f44 <+1676>:	or     %eax,%r12d
0x0000000000578f47 <+1679>:	movzbl %r12b,%eax
0x0000000000578f4b <+1683>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000578f53 <+1691>:	mov    %r13,%rbx
0x0000000000578f56 <+1694>:	mov    %r15,%r13
0x0000000000578f59 <+1697>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000578f5e <+1702>:	mov    $0x7444e0,%ecx
0x0000000000578f63 <+1707>:	mov    $0x70f,%edx
0x0000000000578f68 <+1712>:	mov    $0x74045c,%esi
0x0000000000578f6d <+1717>:	mov    $0x7408bc,%edi
0x0000000000578f72 <+1722>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578f77 <+1727>:	mov    %r15,%rdx
0x0000000000578f7a <+1730>:	mov    %r13,%rsi
0x0000000000578f7d <+1733>:	mov    %rbp,%rdi
0x0000000000578f80 <+1736>:	call   0x573f7b <lltrace_instruction>
0x0000000000578f85 <+1741>:	jmp    0x578f23 <_PyEval_EvalFrameDefault+1643>
0x0000000000578f87 <+1743>:	mov    $0x7444e0,%ecx
0x0000000000578f8c <+1748>:	mov    $0x710,%edx
0x0000000000578f91 <+1753>:	mov    $0x74045c,%esi
0x0000000000578f96 <+1758>:	mov    $0x742a50,%edi
0x0000000000578f9b <+1763>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000578fa0 <+1768>:	mov    $0xffffffff,%edx
0x0000000000578fa5 <+1773>:	jmp    0x578f42 <_PyEval_EvalFrameDefault+1674>
0x0000000000578fa7 <+1775>:	lea    0x2(%r13),%r15
0x0000000000578fab <+1779>:	mov    %r13,0x38(%rbp)
0x0000000000578faf <+1783>:	movslq 0x8(%rsp),%rsi
0x0000000000578fb4 <+1788>:	mov    0x40(%rsp),%rdi
0x0000000000578fb9 <+1793>:	call   0x500470 <PyTuple_GetItem>
0x0000000000578fbe <+1798>:	addq   $0x1,0x54aac2(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000578fc6 <+1806>:	mov    (%rax),%rcx
0x0000000000578fc9 <+1809>:	lea    0x1(%rcx),%rdx
0x0000000000578fcd <+1813>:	mov    %rdx,(%rax)
0x0000000000578fd0 <+1816>:	lea    0x8(%rbx),%r14
0x0000000000578fd4 <+1820>:	mov    %rax,(%rbx)
0x0000000000578fd7 <+1823>:	mov    0x20(%rbp),%rdx
0x0000000000578fdb <+1827>:	movslq 0x4c(%rdx),%rax
0x0000000000578fdf <+1831>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000578fe4 <+1836>:	mov    %r14,%rax
0x0000000000578fe7 <+1839>:	sub    %rcx,%rax
0x0000000000578fea <+1842>:	sar    $0x3,%rax
0x0000000000578fee <+1846>:	cmp    %eax,0x44(%rdx)
0x0000000000578ff1 <+1849>:	jl     0x579048 <_PyEval_EvalFrameDefault+1936>
0x0000000000578ff3 <+1851>:	movzwl 0x2(%r13),%r12d
0x0000000000578ff8 <+1856>:	mov    %r12d,%eax
0x0000000000578ffb <+1859>:	shr    $0x8,%ax
0x0000000000578fff <+1863>:	movzwl %ax,%eax
0x0000000000579002 <+1866>:	mov    %eax,0x8(%rsp)
0x0000000000579006 <+1870>:	cmpl   $0x0,0x14(%rsp)
0x000000000057900b <+1875>:	jne    0x579061 <_PyEval_EvalFrameDefault+1961>
0x000000000057900d <+1877>:	movzbl 0xc0(%rsp),%eax
0x0000000000579015 <+1885>:	lea    -0x1(%rax),%edx
0x0000000000579018 <+1888>:	cmp    $0xfd,%dl
0x000000000057901b <+1891>:	jbe    0x579071 <_PyEval_EvalFrameDefault+1977>
0x000000000057901d <+1893>:	cmpw   $0x0,0x546427(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579025 <+1901>:	jne    0x57908a <_PyEval_EvalFrameDefault+2002>
0x0000000000579027 <+1903>:	mov    $0x0,%edx
0x000000000057902c <+1908>:	or     %edx,%eax
0x000000000057902e <+1910>:	or     %eax,%r12d
0x0000000000579031 <+1913>:	movzbl %r12b,%eax
0x0000000000579035 <+1917>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057903d <+1925>:	mov    %r14,%rbx
0x0000000000579040 <+1928>:	mov    %r15,%r13
0x0000000000579043 <+1931>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579048 <+1936>:	mov    $0x7444e0,%ecx
0x000000000057904d <+1941>:	mov    $0x717,%edx
0x0000000000579052 <+1946>:	mov    $0x74045c,%esi
0x0000000000579057 <+1951>:	mov    $0x7408bc,%edi
0x000000000057905c <+1956>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579061 <+1961>:	mov    %r15,%rdx
0x0000000000579064 <+1964>:	mov    %r14,%rsi
0x0000000000579067 <+1967>:	mov    %rbp,%rdi
0x000000000057906a <+1970>:	call   0x573f7b <lltrace_instruction>
0x000000000057906f <+1975>:	jmp    0x57900d <_PyEval_EvalFrameDefault+1877>
0x0000000000579071 <+1977>:	mov    $0x7444e0,%ecx
0x0000000000579076 <+1982>:	mov    $0x718,%edx
0x000000000057907b <+1987>:	mov    $0x74045c,%esi
0x0000000000579080 <+1992>:	mov    $0x742a50,%edi
0x0000000000579085 <+1997>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057908a <+2002>:	mov    $0xffffffff,%edx
0x000000000057908f <+2007>:	jmp    0x57902c <_PyEval_EvalFrameDefault+1908>
0x0000000000579091 <+2009>:	lea    0x2(%r13),%r14
0x0000000000579095 <+2013>:	mov    %r13,0x38(%rbp)
0x0000000000579099 <+2017>:	mov    0x20(%rbp),%rax
0x000000000057909d <+2021>:	movslq 0x4c(%rax),%rax
0x00000000005790a1 <+2025>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005790a6 <+2030>:	mov    %rbx,%rax
0x00000000005790a9 <+2033>:	sub    %rdx,%rax
0x00000000005790ac <+2036>:	sar    $0x3,%rax
0x00000000005790b0 <+2040>:	test   %eax,%eax
0x00000000005790b2 <+2042>:	jle    0x579125 <_PyEval_EvalFrameDefault+2157>
0x00000000005790b4 <+2044>:	sub    $0x8,%rbx
0x00000000005790b8 <+2048>:	mov    (%rbx),%rdx
0x00000000005790bb <+2051>:	movslq 0x8(%rsp),%rax
0x00000000005790c0 <+2056>:	add    $0x8,%rax
0x00000000005790c4 <+2060>:	mov    0x8(%rbp,%rax,8),%rdi
0x00000000005790c9 <+2065>:	mov    %rdx,0x8(%rbp,%rax,8)
0x00000000005790ce <+2070>:	call   0x573cb3 <Py_XDECREF>
0x00000000005790d3 <+2075>:	movzwl 0x2(%r13),%r12d
0x00000000005790d8 <+2080>:	mov    %r12d,%eax
0x00000000005790db <+2083>:	shr    $0x8,%ax
0x00000000005790df <+2087>:	movzwl %ax,%eax
0x00000000005790e2 <+2090>:	mov    %eax,0x8(%rsp)
0x00000000005790e6 <+2094>:	cmpl   $0x0,0x14(%rsp)
0x00000000005790eb <+2099>:	jne    0x57913e <_PyEval_EvalFrameDefault+2182>
0x00000000005790ed <+2101>:	movzbl 0xc0(%rsp),%eax
0x00000000005790f5 <+2109>:	lea    -0x1(%rax),%edx
0x00000000005790f8 <+2112>:	cmp    $0xfd,%dl
0x00000000005790fb <+2115>:	jbe    0x57914e <_PyEval_EvalFrameDefault+2198>
0x00000000005790fd <+2117>:	cmpw   $0x0,0x546347(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579105 <+2125>:	jne    0x579167 <_PyEval_EvalFrameDefault+2223>
0x0000000000579107 <+2127>:	mov    $0x0,%edx
0x000000000057910c <+2132>:	or     %edx,%eax
0x000000000057910e <+2134>:	or     %eax,%r12d
0x0000000000579111 <+2137>:	movzbl %r12b,%eax
0x0000000000579115 <+2141>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057911d <+2149>:	mov    %r14,%r13
0x0000000000579120 <+2152>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579125 <+2157>:	mov    $0x7444e0,%ecx
0x000000000057912a <+2162>:	mov    $0x71d,%edx
0x000000000057912f <+2167>:	mov    $0x74045c,%esi
0x0000000000579134 <+2172>:	mov    $0x7408da,%edi
0x0000000000579139 <+2177>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057913e <+2182>:	mov    %r14,%rdx
0x0000000000579141 <+2185>:	mov    %rbx,%rsi
0x0000000000579144 <+2188>:	mov    %rbp,%rdi
0x0000000000579147 <+2191>:	call   0x573f7b <lltrace_instruction>
0x000000000057914c <+2196>:	jmp    0x5790ed <_PyEval_EvalFrameDefault+2101>
0x000000000057914e <+2198>:	mov    $0x7444e0,%ecx
0x0000000000579153 <+2203>:	mov    $0x71f,%edx
0x0000000000579158 <+2208>:	mov    $0x74045c,%esi
0x000000000057915d <+2213>:	mov    $0x742a50,%edi
0x0000000000579162 <+2218>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579167 <+2223>:	mov    $0xffffffff,%edx
0x000000000057916c <+2228>:	jmp    0x57910c <_PyEval_EvalFrameDefault+2132>
0x000000000057916e <+2230>:	lea    0x2(%r13),%r15
0x0000000000579172 <+2234>:	mov    %r13,0x38(%rbp)
0x0000000000579176 <+2238>:	movslq 0x8(%rsp),%rax
0x000000000057917b <+2243>:	mov    0x48(%rbp,%rax,8),%rax
0x0000000000579180 <+2248>:	test   %rax,%rax
0x0000000000579183 <+2251>:	je     0x589b4e <_PyEval_EvalFrameDefault+70294>
0x0000000000579189 <+2257>:	movzbl 0x3(%r13),%ecx
0x000000000057918e <+2262>:	mov    %ecx,0x8(%rsp)
0x0000000000579192 <+2266>:	lea    0x4(%r13),%r15
0x0000000000579196 <+2270>:	addq   $0x1,0x54a8ea(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057919e <+2278>:	mov    (%rax),%rcx
0x00000000005791a1 <+2281>:	lea    0x1(%rcx),%rdx
0x00000000005791a5 <+2285>:	mov    %rdx,(%rax)
0x00000000005791a8 <+2288>:	lea    0x8(%rbx),%rdx
0x00000000005791ac <+2292>:	mov    %rax,(%rbx)
0x00000000005791af <+2295>:	lea    0x48(%rbp),%rcx
0x00000000005791b3 <+2299>:	mov    0x20(%rbp),%rsi
0x00000000005791b7 <+2303>:	movslq 0x4c(%rsi),%rax
0x00000000005791bb <+2307>:	lea    (%rcx,%rax,8),%rdi
0x00000000005791bf <+2311>:	mov    %rdx,%rax
0x00000000005791c2 <+2314>:	sub    %rdi,%rax
0x00000000005791c5 <+2317>:	sar    $0x3,%rax
0x00000000005791c9 <+2321>:	cmp    %eax,0x44(%rsi)
0x00000000005791cc <+2324>:	jl     0x57926f <_PyEval_EvalFrameDefault+2487>
0x00000000005791d2 <+2330>:	movslq 0x8(%rsp),%rax
0x00000000005791d7 <+2335>:	mov    0x48(%rbp,%rax,8),%rax
0x00000000005791dc <+2340>:	test   %rax,%rax
0x00000000005791df <+2343>:	je     0x589b46 <_PyEval_EvalFrameDefault+70286>
0x00000000005791e5 <+2349>:	addq   $0x1,0x54a89b(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005791ed <+2357>:	mov    (%rax),%rsi
0x00000000005791f0 <+2360>:	lea    0x1(%rsi),%rdx
0x00000000005791f4 <+2364>:	mov    %rdx,(%rax)
0x00000000005791f7 <+2367>:	lea    0x10(%rbx),%r14
0x00000000005791fb <+2371>:	mov    %rax,0x8(%rbx)
0x00000000005791ff <+2375>:	mov    0x20(%rbp),%rdx
0x0000000000579203 <+2379>:	movslq 0x4c(%rdx),%rax
0x0000000000579207 <+2383>:	lea    (%rcx,%rax,8),%rcx
0x000000000057920b <+2387>:	mov    %r14,%rax
0x000000000057920e <+2390>:	sub    %rcx,%rax
0x0000000000579211 <+2393>:	sar    $0x3,%rax
0x0000000000579215 <+2397>:	cmp    %eax,0x44(%rdx)
0x0000000000579218 <+2400>:	jl     0x579288 <_PyEval_EvalFrameDefault+2512>
0x000000000057921a <+2402>:	movzwl 0x4(%r13),%r12d
0x000000000057921f <+2407>:	mov    %r12d,%eax
0x0000000000579222 <+2410>:	shr    $0x8,%ax
0x0000000000579226 <+2414>:	movzwl %ax,%eax
0x0000000000579229 <+2417>:	mov    %eax,0x8(%rsp)
0x000000000057922d <+2421>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579232 <+2426>:	jne    0x5792a1 <_PyEval_EvalFrameDefault+2537>
0x0000000000579234 <+2428>:	movzbl 0xc0(%rsp),%eax
0x000000000057923c <+2436>:	lea    -0x1(%rax),%edx
0x000000000057923f <+2439>:	cmp    $0xfd,%dl
0x0000000000579242 <+2442>:	jbe    0x5792b1 <_PyEval_EvalFrameDefault+2553>
0x0000000000579244 <+2444>:	cmpw   $0x0,0x546200(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057924c <+2452>:	jne    0x5792ca <_PyEval_EvalFrameDefault+2578>
0x000000000057924e <+2454>:	mov    $0x0,%edx
0x0000000000579253 <+2459>:	or     %edx,%eax
0x0000000000579255 <+2461>:	or     %eax,%r12d
0x0000000000579258 <+2464>:	movzbl %r12b,%eax
0x000000000057925c <+2468>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579264 <+2476>:	mov    %r14,%rbx
0x0000000000579267 <+2479>:	mov    %r15,%r13
0x000000000057926a <+2482>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057926f <+2487>:	mov    $0x7444e0,%ecx
0x0000000000579274 <+2492>:	mov    $0x72a,%edx
0x0000000000579279 <+2497>:	mov    $0x74045c,%esi
0x000000000057927e <+2502>:	mov    $0x7408bc,%edi
0x0000000000579283 <+2507>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579288 <+2512>:	mov    $0x7444e0,%ecx
0x000000000057928d <+2517>:	mov    $0x730,%edx
0x0000000000579292 <+2522>:	mov    $0x74045c,%esi
0x0000000000579297 <+2527>:	mov    $0x7408bc,%edi
0x000000000057929c <+2532>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005792a1 <+2537>:	mov    %r15,%rdx
0x00000000005792a4 <+2540>:	mov    %r14,%rsi
0x00000000005792a7 <+2543>:	mov    %rbp,%rdi
0x00000000005792aa <+2546>:	call   0x573f7b <lltrace_instruction>
0x00000000005792af <+2551>:	jmp    0x579234 <_PyEval_EvalFrameDefault+2428>
0x00000000005792b1 <+2553>:	mov    $0x7444e0,%ecx
0x00000000005792b6 <+2558>:	mov    $0x731,%edx
0x00000000005792bb <+2563>:	mov    $0x74045c,%esi
0x00000000005792c0 <+2568>:	mov    $0x742a50,%edi
0x00000000005792c5 <+2573>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005792ca <+2578>:	mov    $0xffffffff,%edx
0x00000000005792cf <+2583>:	jmp    0x579253 <_PyEval_EvalFrameDefault+2459>
0x00000000005792d1 <+2585>:	lea    0x2(%r13),%r15
0x00000000005792d5 <+2589>:	mov    %r13,0x38(%rbp)
0x00000000005792d9 <+2593>:	movslq 0x8(%rsp),%rax
0x00000000005792de <+2598>:	mov    0x48(%rbp,%rax,8),%rdx
0x00000000005792e3 <+2603>:	test   %rdx,%rdx
0x00000000005792e6 <+2606>:	je     0x589b4e <_PyEval_EvalFrameDefault+70294>
0x00000000005792ec <+2612>:	movzbl 0x3(%r13),%esi
0x00000000005792f1 <+2617>:	lea    0x4(%r13),%r15
0x00000000005792f5 <+2621>:	addq   $0x1,0x54a78b(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005792fd <+2629>:	mov    (%rdx),%rax
0x0000000000579300 <+2632>:	add    $0x1,%rax
0x0000000000579304 <+2636>:	mov    %rax,(%rdx)
0x0000000000579307 <+2639>:	lea    0x8(%rbx),%rax
0x000000000057930b <+2643>:	mov    %rdx,(%rbx)
0x000000000057930e <+2646>:	lea    0x48(%rbp),%r12
0x0000000000579312 <+2650>:	mov    0x20(%rbp),%rdx
0x0000000000579316 <+2654>:	movslq 0x4c(%rdx),%rcx
0x000000000057931a <+2658>:	lea    (%r12,%rcx,8),%rcx
0x000000000057931e <+2662>:	sub    %rcx,%rax
0x0000000000579321 <+2665>:	sar    $0x3,%rax
0x0000000000579325 <+2669>:	cmp    %eax,0x44(%rdx)
0x0000000000579328 <+2672>:	jl     0x5793c5 <_PyEval_EvalFrameDefault+2829>
0x000000000057932e <+2678>:	movzwl %si,%esi
0x0000000000579331 <+2681>:	mov    0x40(%rsp),%rdi
0x0000000000579336 <+2686>:	call   0x500470 <PyTuple_GetItem>
0x000000000057933b <+2691>:	addq   $0x1,0x54a745(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000579343 <+2699>:	mov    (%rax),%rcx
0x0000000000579346 <+2702>:	lea    0x1(%rcx),%rdx
0x000000000057934a <+2706>:	mov    %rdx,(%rax)
0x000000000057934d <+2709>:	lea    0x10(%rbx),%r14
0x0000000000579351 <+2713>:	mov    %rax,0x8(%rbx)
0x0000000000579355 <+2717>:	mov    0x20(%rbp),%rdx
0x0000000000579359 <+2721>:	movslq 0x4c(%rdx),%rax
0x000000000057935d <+2725>:	lea    (%r12,%rax,8),%rcx
0x0000000000579361 <+2729>:	mov    %r14,%rax
0x0000000000579364 <+2732>:	sub    %rcx,%rax
0x0000000000579367 <+2735>:	sar    $0x3,%rax
0x000000000057936b <+2739>:	cmp    %eax,0x44(%rdx)
0x000000000057936e <+2742>:	jl     0x5793de <_PyEval_EvalFrameDefault+2854>
0x0000000000579370 <+2744>:	movzwl 0x4(%r13),%r12d
0x0000000000579375 <+2749>:	mov    %r12d,%eax
0x0000000000579378 <+2752>:	shr    $0x8,%ax
0x000000000057937c <+2756>:	movzwl %ax,%eax
0x000000000057937f <+2759>:	mov    %eax,0x8(%rsp)
0x0000000000579383 <+2763>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579388 <+2768>:	jne    0x5793f7 <_PyEval_EvalFrameDefault+2879>
0x000000000057938a <+2770>:	movzbl 0xc0(%rsp),%eax
0x0000000000579392 <+2778>:	lea    -0x1(%rax),%edx
0x0000000000579395 <+2781>:	cmp    $0xfd,%dl
0x0000000000579398 <+2784>:	jbe    0x579407 <_PyEval_EvalFrameDefault+2895>
0x000000000057939a <+2786>:	cmpw   $0x0,0x5460aa(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005793a2 <+2794>:	jne    0x579420 <_PyEval_EvalFrameDefault+2920>
0x00000000005793a4 <+2796>:	mov    $0x0,%edx
0x00000000005793a9 <+2801>:	or     %edx,%eax
0x00000000005793ab <+2803>:	or     %eax,%r12d
0x00000000005793ae <+2806>:	movzbl %r12b,%eax
0x00000000005793b2 <+2810>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005793ba <+2818>:	mov    %r14,%rbx
0x00000000005793bd <+2821>:	mov    %r15,%r13
0x00000000005793c0 <+2824>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005793c5 <+2829>:	mov    $0x7444e0,%ecx
0x00000000005793ca <+2834>:	mov    $0x73c,%edx
0x00000000005793cf <+2839>:	mov    $0x74045c,%esi
0x00000000005793d4 <+2844>:	mov    $0x7408bc,%edi
0x00000000005793d9 <+2849>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005793de <+2854>:	mov    $0x7444e0,%ecx
0x00000000005793e3 <+2859>:	mov    $0x73f,%edx
0x00000000005793e8 <+2864>:	mov    $0x74045c,%esi
0x00000000005793ed <+2869>:	mov    $0x7408bc,%edi
0x00000000005793f2 <+2874>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005793f7 <+2879>:	mov    %r15,%rdx
0x00000000005793fa <+2882>:	mov    %r14,%rsi
0x00000000005793fd <+2885>:	mov    %rbp,%rdi
0x0000000000579400 <+2888>:	call   0x573f7b <lltrace_instruction>
0x0000000000579405 <+2893>:	jmp    0x57938a <_PyEval_EvalFrameDefault+2770>
0x0000000000579407 <+2895>:	mov    $0x7444e0,%ecx
0x000000000057940c <+2900>:	mov    $0x740,%edx
0x0000000000579411 <+2905>:	mov    $0x74045c,%esi
0x0000000000579416 <+2910>:	mov    $0x742a50,%edi
0x000000000057941b <+2915>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579420 <+2920>:	mov    $0xffffffff,%edx
0x0000000000579425 <+2925>:	jmp    0x5793a9 <_PyEval_EvalFrameDefault+2801>
0x0000000000579427 <+2927>:	mov    %r13,0x38(%rbp)
0x000000000057942b <+2931>:	lea    0x48(%rbp),%r12
0x000000000057942f <+2935>:	mov    0x20(%rbp),%rax
0x0000000000579433 <+2939>:	movslq 0x4c(%rax),%rax
0x0000000000579437 <+2943>:	lea    (%r12,%rax,8),%rdx
0x000000000057943b <+2947>:	mov    %rbx,%rax
0x000000000057943e <+2950>:	sub    %rdx,%rax
0x0000000000579441 <+2953>:	sar    $0x3,%rax
0x0000000000579445 <+2957>:	test   %eax,%eax
0x0000000000579447 <+2959>:	jle    0x57950d <_PyEval_EvalFrameDefault+3157>
0x000000000057944d <+2965>:	lea    -0x8(%rbx),%r14
0x0000000000579451 <+2969>:	mov    -0x8(%rbx),%rdx
0x0000000000579455 <+2973>:	movslq 0x8(%rsp),%rax
0x000000000057945a <+2978>:	add    $0x8,%rax
0x000000000057945e <+2982>:	mov    0x8(%rbp,%rax,8),%rdi
0x0000000000579463 <+2987>:	mov    %rdx,0x8(%rbp,%rax,8)
0x0000000000579468 <+2992>:	call   0x573cb3 <Py_XDECREF>
0x000000000057946d <+2997>:	movzbl 0x3(%r13),%eax
0x0000000000579472 <+3002>:	mov    %eax,0x8(%rsp)
0x0000000000579476 <+3006>:	lea    0x4(%r13),%r15
0x000000000057947a <+3010>:	cltq
0x000000000057947c <+3012>:	mov    0x48(%rbp,%rax,8),%rax
0x0000000000579481 <+3017>:	test   %rax,%rax
0x0000000000579484 <+3020>:	je     0x589b4b <_PyEval_EvalFrameDefault+70291>
0x000000000057948a <+3026>:	addq   $0x1,0x54a5f6(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000579492 <+3034>:	mov    (%rax),%rcx
0x0000000000579495 <+3037>:	lea    0x1(%rcx),%rdx
0x0000000000579499 <+3041>:	mov    %rdx,(%rax)
0x000000000057949c <+3044>:	mov    %rax,-0x8(%rbx)
0x00000000005794a0 <+3048>:	mov    0x20(%rbp),%rdx
0x00000000005794a4 <+3052>:	movslq 0x4c(%rdx),%rax
0x00000000005794a8 <+3056>:	lea    (%r12,%rax,8),%rcx
0x00000000005794ac <+3060>:	mov    %rbx,%rax
0x00000000005794af <+3063>:	sub    %rcx,%rax
0x00000000005794b2 <+3066>:	sar    $0x3,%rax
0x00000000005794b6 <+3070>:	cmp    %eax,0x44(%rdx)
0x00000000005794b9 <+3073>:	jl     0x579526 <_PyEval_EvalFrameDefault+3182>
0x00000000005794bb <+3075>:	movzwl 0x4(%r13),%r12d
0x00000000005794c0 <+3080>:	mov    %r12d,%eax
0x00000000005794c3 <+3083>:	shr    $0x8,%ax
0x00000000005794c7 <+3087>:	movzwl %ax,%eax
0x00000000005794ca <+3090>:	mov    %eax,0x8(%rsp)
0x00000000005794ce <+3094>:	cmpl   $0x0,0x14(%rsp)
0x00000000005794d3 <+3099>:	jne    0x57953f <_PyEval_EvalFrameDefault+3207>
0x00000000005794d5 <+3101>:	movzbl 0xc0(%rsp),%eax
0x00000000005794dd <+3109>:	lea    -0x1(%rax),%edx
0x00000000005794e0 <+3112>:	cmp    $0xfd,%dl
0x00000000005794e3 <+3115>:	jbe    0x57954f <_PyEval_EvalFrameDefault+3223>
0x00000000005794e5 <+3117>:	cmpw   $0x0,0x545f5f(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005794ed <+3125>:	jne    0x579568 <_PyEval_EvalFrameDefault+3248>
0x00000000005794ef <+3127>:	mov    $0x0,%edx
0x00000000005794f4 <+3132>:	or     %edx,%eax
0x00000000005794f6 <+3134>:	or     %eax,%r12d
0x00000000005794f9 <+3137>:	movzbl %r12b,%eax
0x00000000005794fd <+3141>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579505 <+3149>:	mov    %r15,%r13
0x0000000000579508 <+3152>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057950d <+3157>:	mov    $0x7444e0,%ecx
0x0000000000579512 <+3162>:	mov    $0x744,%edx
0x0000000000579517 <+3167>:	mov    $0x74045c,%esi
0x000000000057951c <+3172>:	mov    $0x7408da,%edi
0x0000000000579521 <+3177>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579526 <+3182>:	mov    $0x7444e0,%ecx
0x000000000057952b <+3187>:	mov    $0x74d,%edx
0x0000000000579530 <+3192>:	mov    $0x74045c,%esi
0x0000000000579535 <+3197>:	mov    $0x7408bc,%edi
0x000000000057953a <+3202>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057953f <+3207>:	mov    %r15,%rdx
0x0000000000579542 <+3210>:	mov    %rbx,%rsi
0x0000000000579545 <+3213>:	mov    %rbp,%rdi
0x0000000000579548 <+3216>:	call   0x573f7b <lltrace_instruction>
0x000000000057954d <+3221>:	jmp    0x5794d5 <_PyEval_EvalFrameDefault+3101>
0x000000000057954f <+3223>:	mov    $0x7444e0,%ecx
0x0000000000579554 <+3228>:	mov    $0x74e,%edx
0x0000000000579559 <+3233>:	mov    $0x74045c,%esi
0x000000000057955e <+3238>:	mov    $0x742a50,%edi
0x0000000000579563 <+3243>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579568 <+3248>:	mov    $0xffffffff,%edx
0x000000000057956d <+3253>:	jmp    0x5794f4 <_PyEval_EvalFrameDefault+3132>
0x000000000057956f <+3255>:	mov    %r13,0x38(%rbp)
0x0000000000579573 <+3259>:	lea    0x48(%rbp),%r15
0x0000000000579577 <+3263>:	mov    0x20(%rbp),%rax
0x000000000057957b <+3267>:	movslq 0x4c(%rax),%rax
0x000000000057957f <+3271>:	lea    (%r15,%rax,8),%rdx
0x0000000000579583 <+3275>:	mov    %rbx,%rax
0x0000000000579586 <+3278>:	sub    %rdx,%rax
0x0000000000579589 <+3281>:	sar    $0x3,%rax
0x000000000057958d <+3285>:	test   %eax,%eax
0x000000000057958f <+3287>:	jle    0x57964e <_PyEval_EvalFrameDefault+3478>
0x0000000000579595 <+3293>:	lea    -0x8(%rbx),%r12
0x0000000000579599 <+3297>:	mov    -0x8(%rbx),%rdx
0x000000000057959d <+3301>:	movslq 0x8(%rsp),%rax
0x00000000005795a2 <+3306>:	add    $0x8,%rax
0x00000000005795a6 <+3310>:	mov    0x8(%rbp,%rax,8),%rdi
0x00000000005795ab <+3315>:	mov    %rdx,0x8(%rbp,%rax,8)
0x00000000005795b0 <+3320>:	call   0x573cb3 <Py_XDECREF>
0x00000000005795b5 <+3325>:	movzbl 0x3(%r13),%eax
0x00000000005795ba <+3330>:	lea    0x4(%r13),%r14
0x00000000005795be <+3334>:	mov    0x20(%rbp),%rdx
0x00000000005795c2 <+3338>:	movslq 0x4c(%rdx),%rdx
0x00000000005795c6 <+3342>:	lea    (%r15,%rdx,8),%rcx
0x00000000005795ca <+3346>:	mov    %r12,%rdx
0x00000000005795cd <+3349>:	sub    %rcx,%rdx
0x00000000005795d0 <+3352>:	sar    $0x3,%rdx
0x00000000005795d4 <+3356>:	test   %edx,%edx
0x00000000005795d6 <+3358>:	jle    0x579667 <_PyEval_EvalFrameDefault+3503>
0x00000000005795dc <+3364>:	lea    -0x10(%rbx),%r15
0x00000000005795e0 <+3368>:	mov    -0x10(%rbx),%rdx
0x00000000005795e4 <+3372>:	cltq
0x00000000005795e6 <+3374>:	add    $0x8,%rax
0x00000000005795ea <+3378>:	mov    0x8(%rbp,%rax,8),%rdi
0x00000000005795ef <+3383>:	mov    %rdx,0x8(%rbp,%rax,8)
0x00000000005795f4 <+3388>:	call   0x573cb3 <Py_XDECREF>
0x00000000005795f9 <+3393>:	movzwl 0x4(%r13),%r12d
0x00000000005795fe <+3398>:	mov    %r12d,%eax
0x0000000000579601 <+3401>:	shr    $0x8,%ax
0x0000000000579605 <+3405>:	movzwl %ax,%eax
0x0000000000579608 <+3408>:	mov    %eax,0x8(%rsp)
0x000000000057960c <+3412>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579611 <+3417>:	jne    0x579680 <_PyEval_EvalFrameDefault+3528>
0x0000000000579613 <+3419>:	movzbl 0xc0(%rsp),%eax
0x000000000057961b <+3427>:	lea    -0x1(%rax),%edx
0x000000000057961e <+3430>:	cmp    $0xfd,%dl
0x0000000000579621 <+3433>:	jbe    0x579690 <_PyEval_EvalFrameDefault+3544>
0x0000000000579623 <+3435>:	cmpw   $0x0,0x545e21(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057962b <+3443>:	jne    0x5796a9 <_PyEval_EvalFrameDefault+3569>
0x000000000057962d <+3445>:	mov    $0x0,%edx
0x0000000000579632 <+3450>:	or     %edx,%eax
0x0000000000579634 <+3452>:	or     %eax,%r12d
0x0000000000579637 <+3455>:	movzbl %r12b,%eax
0x000000000057963b <+3459>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579643 <+3467>:	mov    %r15,%rbx
0x0000000000579646 <+3470>:	mov    %r14,%r13
0x0000000000579649 <+3473>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057964e <+3478>:	mov    $0x7444e0,%ecx
0x0000000000579653 <+3483>:	mov    $0x752,%edx
0x0000000000579658 <+3488>:	mov    $0x74045c,%esi
0x000000000057965d <+3493>:	mov    $0x7408da,%edi
0x0000000000579662 <+3498>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579667 <+3503>:	mov    $0x7444e0,%ecx
0x000000000057966c <+3508>:	mov    $0x756,%edx
0x0000000000579671 <+3513>:	mov    $0x74045c,%esi
0x0000000000579676 <+3518>:	mov    $0x7408da,%edi
0x000000000057967b <+3523>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579680 <+3528>:	mov    %r14,%rdx
0x0000000000579683 <+3531>:	mov    %r15,%rsi
0x0000000000579686 <+3534>:	mov    %rbp,%rdi
0x0000000000579689 <+3537>:	call   0x573f7b <lltrace_instruction>
0x000000000057968e <+3542>:	jmp    0x579613 <_PyEval_EvalFrameDefault+3419>
0x0000000000579690 <+3544>:	mov    $0x7444e0,%ecx
0x0000000000579695 <+3549>:	mov    $0x758,%edx
0x000000000057969a <+3554>:	mov    $0x74045c,%esi
0x000000000057969f <+3559>:	mov    $0x742a50,%edi
0x00000000005796a4 <+3564>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005796a9 <+3569>:	mov    $0xffffffff,%edx
0x00000000005796ae <+3574>:	jmp    0x579632 <_PyEval_EvalFrameDefault+3450>
0x00000000005796b0 <+3576>:	mov    %r13,0x38(%rbp)
0x00000000005796b4 <+3580>:	movslq 0x8(%rsp),%rsi
0x00000000005796b9 <+3585>:	mov    0x40(%rsp),%rdi
0x00000000005796be <+3590>:	call   0x500470 <PyTuple_GetItem>
0x00000000005796c3 <+3595>:	movzbl 0x3(%r13),%ecx
0x00000000005796c8 <+3600>:	mov    %ecx,0x8(%rsp)
0x00000000005796cc <+3604>:	lea    0x4(%r13),%r15
0x00000000005796d0 <+3608>:	addq   $0x1,0x54a3b0(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005796d8 <+3616>:	mov    (%rax),%rcx
0x00000000005796db <+3619>:	lea    0x1(%rcx),%rdx
0x00000000005796df <+3623>:	mov    %rdx,(%rax)
0x00000000005796e2 <+3626>:	lea    0x8(%rbx),%rdx
0x00000000005796e6 <+3630>:	mov    %rax,(%rbx)
0x00000000005796e9 <+3633>:	lea    0x48(%rbp),%rcx
0x00000000005796ed <+3637>:	mov    0x20(%rbp),%rsi
0x00000000005796f1 <+3641>:	movslq 0x4c(%rsi),%rax
0x00000000005796f5 <+3645>:	lea    (%rcx,%rax,8),%rdi
0x00000000005796f9 <+3649>:	mov    %rdx,%rax
0x00000000005796fc <+3652>:	sub    %rdi,%rax
0x00000000005796ff <+3655>:	sar    $0x3,%rax
0x0000000000579703 <+3659>:	cmp    %eax,0x44(%rsi)
0x0000000000579706 <+3662>:	jl     0x5797a9 <_PyEval_EvalFrameDefault+3825>
0x000000000057970c <+3668>:	movslq 0x8(%rsp),%rax
0x0000000000579711 <+3673>:	mov    0x48(%rbp,%rax,8),%rax
0x0000000000579716 <+3678>:	test   %rax,%rax
0x0000000000579719 <+3681>:	je     0x589b7e <_PyEval_EvalFrameDefault+70342>
0x000000000057971f <+3687>:	addq   $0x1,0x54a361(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000579727 <+3695>:	mov    (%rax),%rsi
0x000000000057972a <+3698>:	lea    0x1(%rsi),%rdx
0x000000000057972e <+3702>:	mov    %rdx,(%rax)
0x0000000000579731 <+3705>:	lea    0x10(%rbx),%r14
0x0000000000579735 <+3709>:	mov    %rax,0x8(%rbx)
0x0000000000579739 <+3713>:	mov    0x20(%rbp),%rdx
0x000000000057973d <+3717>:	movslq 0x4c(%rdx),%rax
0x0000000000579741 <+3721>:	lea    (%rcx,%rax,8),%rcx
0x0000000000579745 <+3725>:	mov    %r14,%rax
0x0000000000579748 <+3728>:	sub    %rcx,%rax
0x000000000057974b <+3731>:	sar    $0x3,%rax
0x000000000057974f <+3735>:	cmp    %eax,0x44(%rdx)
0x0000000000579752 <+3738>:	jl     0x5797c2 <_PyEval_EvalFrameDefault+3850>
0x0000000000579754 <+3740>:	movzwl 0x4(%r13),%r12d
0x0000000000579759 <+3745>:	mov    %r12d,%eax
0x000000000057975c <+3748>:	shr    $0x8,%ax
0x0000000000579760 <+3752>:	movzwl %ax,%eax
0x0000000000579763 <+3755>:	mov    %eax,0x8(%rsp)
0x0000000000579767 <+3759>:	cmpl   $0x0,0x14(%rsp)
0x000000000057976c <+3764>:	jne    0x5797db <_PyEval_EvalFrameDefault+3875>
0x000000000057976e <+3766>:	movzbl 0xc0(%rsp),%eax
0x0000000000579776 <+3774>:	lea    -0x1(%rax),%edx
0x0000000000579779 <+3777>:	cmp    $0xfd,%dl
0x000000000057977c <+3780>:	jbe    0x5797eb <_PyEval_EvalFrameDefault+3891>
0x000000000057977e <+3782>:	cmpw   $0x0,0x545cc6(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579786 <+3790>:	jne    0x579804 <_PyEval_EvalFrameDefault+3916>
0x0000000000579788 <+3792>:	mov    $0x0,%edx
0x000000000057978d <+3797>:	or     %edx,%eax
0x000000000057978f <+3799>:	or     %eax,%r12d
0x0000000000579792 <+3802>:	movzbl %r12b,%eax
0x0000000000579796 <+3806>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057979e <+3814>:	mov    %r14,%rbx
0x00000000005797a1 <+3817>:	mov    %r15,%r13
0x00000000005797a4 <+3820>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005797a9 <+3825>:	mov    $0x7444e0,%ecx
0x00000000005797ae <+3830>:	mov    $0x760,%edx
0x00000000005797b3 <+3835>:	mov    $0x74045c,%esi
0x00000000005797b8 <+3840>:	mov    $0x7408bc,%edi
0x00000000005797bd <+3845>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005797c2 <+3850>:	mov    $0x7444e0,%ecx
0x00000000005797c7 <+3855>:	mov    $0x766,%edx
0x00000000005797cc <+3860>:	mov    $0x74045c,%esi
0x00000000005797d1 <+3865>:	mov    $0x7408bc,%edi
0x00000000005797d6 <+3870>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005797db <+3875>:	mov    %r15,%rdx
0x00000000005797de <+3878>:	mov    %r14,%rsi
0x00000000005797e1 <+3881>:	mov    %rbp,%rdi
0x00000000005797e4 <+3884>:	call   0x573f7b <lltrace_instruction>
0x00000000005797e9 <+3889>:	jmp    0x57976e <_PyEval_EvalFrameDefault+3766>
0x00000000005797eb <+3891>:	mov    $0x7444e0,%ecx
0x00000000005797f0 <+3896>:	mov    $0x767,%edx
0x00000000005797f5 <+3901>:	mov    $0x74045c,%esi
0x00000000005797fa <+3906>:	mov    $0x742a50,%edi
0x00000000005797ff <+3911>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579804 <+3916>:	mov    $0xffffffff,%edx
0x0000000000579809 <+3921>:	jmp    0x57978d <_PyEval_EvalFrameDefault+3797>
0x000000000057980b <+3923>:	lea    0x2(%r13),%r14
0x000000000057980f <+3927>:	mov    %r13,0x38(%rbp)
0x0000000000579813 <+3931>:	mov    0x20(%rbp),%rax
0x0000000000579817 <+3935>:	movslq 0x4c(%rax),%rax
0x000000000057981b <+3939>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000579820 <+3944>:	mov    %rbx,%rax
0x0000000000579823 <+3947>:	sub    %rdx,%rax
0x0000000000579826 <+3950>:	sar    $0x3,%rax
0x000000000057982a <+3954>:	test   %eax,%eax
0x000000000057982c <+3956>:	jle    0x579896 <_PyEval_EvalFrameDefault+4062>
0x000000000057982e <+3958>:	sub    $0x8,%rbx
0x0000000000579832 <+3962>:	mov    (%rbx),%rdx
0x0000000000579835 <+3965>:	mov    $0x76c,%esi
0x000000000057983a <+3970>:	mov    $0x74045c,%edi
0x000000000057983f <+3975>:	call   0x573c83 <Py_DECREF>
0x0000000000579844 <+3980>:	movzwl 0x2(%r13),%r12d
0x0000000000579849 <+3985>:	mov    %r12d,%eax
0x000000000057984c <+3988>:	shr    $0x8,%ax
0x0000000000579850 <+3992>:	movzwl %ax,%eax
0x0000000000579853 <+3995>:	mov    %eax,0x8(%rsp)
0x0000000000579857 <+3999>:	cmpl   $0x0,0x14(%rsp)
0x000000000057985c <+4004>:	jne    0x5798af <_PyEval_EvalFrameDefault+4087>
0x000000000057985e <+4006>:	movzbl 0xc0(%rsp),%eax
0x0000000000579866 <+4014>:	lea    -0x1(%rax),%edx
0x0000000000579869 <+4017>:	cmp    $0xfd,%dl
0x000000000057986c <+4020>:	jbe    0x5798bf <_PyEval_EvalFrameDefault+4103>
0x000000000057986e <+4022>:	cmpw   $0x0,0x545bd6(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579876 <+4030>:	jne    0x5798d8 <_PyEval_EvalFrameDefault+4128>
0x0000000000579878 <+4032>:	mov    $0x0,%edx
0x000000000057987d <+4037>:	or     %edx,%eax
0x000000000057987f <+4039>:	or     %eax,%r12d
0x0000000000579882 <+4042>:	movzbl %r12b,%eax
0x0000000000579886 <+4046>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057988e <+4054>:	mov    %r14,%r13
0x0000000000579891 <+4057>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579896 <+4062>:	mov    $0x7444e0,%ecx
0x000000000057989b <+4067>:	mov    $0x76b,%edx
0x00000000005798a0 <+4072>:	mov    $0x74045c,%esi
0x00000000005798a5 <+4077>:	mov    $0x7408da,%edi
0x00000000005798aa <+4082>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005798af <+4087>:	mov    %r14,%rdx
0x00000000005798b2 <+4090>:	mov    %rbx,%rsi
0x00000000005798b5 <+4093>:	mov    %rbp,%rdi
0x00000000005798b8 <+4096>:	call   0x573f7b <lltrace_instruction>
0x00000000005798bd <+4101>:	jmp    0x57985e <_PyEval_EvalFrameDefault+4006>
0x00000000005798bf <+4103>:	mov    $0x7444e0,%ecx
0x00000000005798c4 <+4108>:	mov    $0x76d,%edx
0x00000000005798c9 <+4113>:	mov    $0x74045c,%esi
0x00000000005798ce <+4118>:	mov    $0x742a50,%edi
0x00000000005798d3 <+4123>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005798d8 <+4128>:	mov    $0xffffffff,%edx
0x00000000005798dd <+4133>:	jmp    0x57987d <_PyEval_EvalFrameDefault+4037>
0x00000000005798df <+4135>:	lea    0x2(%r13),%r14
0x00000000005798e3 <+4139>:	mov    %r13,0x38(%rbp)
0x00000000005798e7 <+4143>:	lea    0x8(%rbx),%r15
0x00000000005798eb <+4147>:	movq   $0x0,(%rbx)
0x00000000005798f2 <+4154>:	movzwl 0x2(%r13),%r12d
0x00000000005798f7 <+4159>:	mov    %r12d,%eax
0x00000000005798fa <+4162>:	shr    $0x8,%ax
0x00000000005798fe <+4166>:	movzwl %ax,%eax
0x0000000000579901 <+4169>:	mov    %eax,0x8(%rsp)
0x0000000000579905 <+4173>:	cmpl   $0x0,0x14(%rsp)
0x000000000057990a <+4178>:	jne    0x579947 <_PyEval_EvalFrameDefault+4239>
0x000000000057990c <+4180>:	movzbl 0xc0(%rsp),%eax
0x0000000000579914 <+4188>:	lea    -0x1(%rax),%edx
0x0000000000579917 <+4191>:	cmp    $0xfd,%dl
0x000000000057991a <+4194>:	jbe    0x579957 <_PyEval_EvalFrameDefault+4255>
0x000000000057991c <+4196>:	cmpw   $0x0,0x545b28(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579924 <+4204>:	jne    0x579970 <_PyEval_EvalFrameDefault+4280>
0x0000000000579926 <+4206>:	mov    $0x0,%edx
0x000000000057992b <+4211>:	or     %edx,%eax
0x000000000057992d <+4213>:	or     %eax,%r12d
0x0000000000579930 <+4216>:	movzbl %r12b,%eax
0x0000000000579934 <+4220>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057993c <+4228>:	mov    %r15,%rbx
0x000000000057993f <+4231>:	mov    %r14,%r13
0x0000000000579942 <+4234>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579947 <+4239>:	mov    %r14,%rdx
0x000000000057994a <+4242>:	mov    %r15,%rsi
0x000000000057994d <+4245>:	mov    %rbp,%rdi
0x0000000000579950 <+4248>:	call   0x573f7b <lltrace_instruction>
0x0000000000579955 <+4253>:	jmp    0x57990c <_PyEval_EvalFrameDefault+4180>
0x0000000000579957 <+4255>:	mov    $0x7444e0,%ecx
0x000000000057995c <+4260>:	mov    $0x773,%edx
0x0000000000579961 <+4265>:	mov    $0x74045c,%esi
0x0000000000579966 <+4270>:	mov    $0x742a50,%edi
0x000000000057996b <+4275>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579970 <+4280>:	mov    $0xffffffff,%edx
0x0000000000579975 <+4285>:	jmp    0x57992b <_PyEval_EvalFrameDefault+4211>
0x0000000000579977 <+4287>:	lea    0x2(%r13),%r15
0x000000000057997b <+4291>:	mov    %r13,0x38(%rbp)
0x000000000057997f <+4295>:	mov    -0x8(%rbx),%r14
0x0000000000579983 <+4299>:	mov    %r14,%rdi
0x0000000000579986 <+4302>:	call   0x491bb2 <PyNumber_Positive>
0x000000000057998b <+4307>:	mov    %rax,%r12
0x000000000057998e <+4310>:	mov    %r14,%rdx
0x0000000000579991 <+4313>:	mov    $0x779,%esi
0x0000000000579996 <+4318>:	mov    $0x74045c,%edi
0x000000000057999b <+4323>:	call   0x573c83 <Py_DECREF>
0x00000000005799a0 <+4328>:	mov    %r12,-0x8(%rbx)
0x00000000005799a4 <+4332>:	test   %r12,%r12
0x00000000005799a7 <+4335>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005799ad <+4341>:	movzwl 0x2(%r13),%r12d
0x00000000005799b2 <+4346>:	mov    %r12d,%eax
0x00000000005799b5 <+4349>:	shr    $0x8,%ax
0x00000000005799b9 <+4353>:	movzwl %ax,%eax
0x00000000005799bc <+4356>:	mov    %eax,0x8(%rsp)
0x00000000005799c0 <+4360>:	cmpl   $0x0,0x14(%rsp)
0x00000000005799c5 <+4365>:	jne    0x5799ff <_PyEval_EvalFrameDefault+4423>
0x00000000005799c7 <+4367>:	movzbl 0xc0(%rsp),%eax
0x00000000005799cf <+4375>:	lea    -0x1(%rax),%edx
0x00000000005799d2 <+4378>:	cmp    $0xfd,%dl
0x00000000005799d5 <+4381>:	jbe    0x579a0f <_PyEval_EvalFrameDefault+4439>
0x00000000005799d7 <+4383>:	cmpw   $0x0,0x545a6d(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005799df <+4391>:	jne    0x579a28 <_PyEval_EvalFrameDefault+4464>
0x00000000005799e1 <+4393>:	mov    $0x0,%edx
0x00000000005799e6 <+4398>:	or     %edx,%eax
0x00000000005799e8 <+4400>:	or     %eax,%r12d
0x00000000005799eb <+4403>:	movzbl %r12b,%eax
0x00000000005799ef <+4407>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005799f7 <+4415>:	mov    %r15,%r13
0x00000000005799fa <+4418>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005799ff <+4423>:	mov    %r15,%rdx
0x0000000000579a02 <+4426>:	mov    %rbx,%rsi
0x0000000000579a05 <+4429>:	mov    %rbp,%rdi
0x0000000000579a08 <+4432>:	call   0x573f7b <lltrace_instruction>
0x0000000000579a0d <+4437>:	jmp    0x5799c7 <_PyEval_EvalFrameDefault+4367>
0x0000000000579a0f <+4439>:	mov    $0x7444e0,%ecx
0x0000000000579a14 <+4444>:	mov    $0x77d,%edx
0x0000000000579a19 <+4449>:	mov    $0x74045c,%esi
0x0000000000579a1e <+4454>:	mov    $0x742a50,%edi
0x0000000000579a23 <+4459>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579a28 <+4464>:	mov    $0xffffffff,%edx
0x0000000000579a2d <+4469>:	jmp    0x5799e6 <_PyEval_EvalFrameDefault+4398>
0x0000000000579a2f <+4471>:	lea    0x2(%r13),%r15
0x0000000000579a33 <+4475>:	mov    %r13,0x38(%rbp)
0x0000000000579a37 <+4479>:	mov    -0x8(%rbx),%r14
0x0000000000579a3b <+4483>:	mov    %r14,%rdi
0x0000000000579a3e <+4486>:	call   0x491b30 <PyNumber_Negative>
0x0000000000579a43 <+4491>:	mov    %rax,%r12
0x0000000000579a46 <+4494>:	mov    %r14,%rdx
0x0000000000579a49 <+4497>:	mov    $0x783,%esi
0x0000000000579a4e <+4502>:	mov    $0x74045c,%edi
0x0000000000579a53 <+4507>:	call   0x573c83 <Py_DECREF>
0x0000000000579a58 <+4512>:	mov    %r12,-0x8(%rbx)
0x0000000000579a5c <+4516>:	test   %r12,%r12
0x0000000000579a5f <+4519>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000579a65 <+4525>:	movzwl 0x2(%r13),%r12d
0x0000000000579a6a <+4530>:	mov    %r12d,%eax
0x0000000000579a6d <+4533>:	shr    $0x8,%ax
0x0000000000579a71 <+4537>:	movzwl %ax,%eax
0x0000000000579a74 <+4540>:	mov    %eax,0x8(%rsp)
0x0000000000579a78 <+4544>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579a7d <+4549>:	jne    0x579ab7 <_PyEval_EvalFrameDefault+4607>
0x0000000000579a7f <+4551>:	movzbl 0xc0(%rsp),%eax
0x0000000000579a87 <+4559>:	lea    -0x1(%rax),%edx
0x0000000000579a8a <+4562>:	cmp    $0xfd,%dl
0x0000000000579a8d <+4565>:	jbe    0x579ac7 <_PyEval_EvalFrameDefault+4623>
0x0000000000579a8f <+4567>:	cmpw   $0x0,0x5459b5(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579a97 <+4575>:	jne    0x579ae0 <_PyEval_EvalFrameDefault+4648>
0x0000000000579a99 <+4577>:	mov    $0x0,%edx
0x0000000000579a9e <+4582>:	or     %edx,%eax
0x0000000000579aa0 <+4584>:	or     %eax,%r12d
0x0000000000579aa3 <+4587>:	movzbl %r12b,%eax
0x0000000000579aa7 <+4591>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579aaf <+4599>:	mov    %r15,%r13
0x0000000000579ab2 <+4602>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579ab7 <+4607>:	mov    %r15,%rdx
0x0000000000579aba <+4610>:	mov    %rbx,%rsi
0x0000000000579abd <+4613>:	mov    %rbp,%rdi
0x0000000000579ac0 <+4616>:	call   0x573f7b <lltrace_instruction>
0x0000000000579ac5 <+4621>:	jmp    0x579a7f <_PyEval_EvalFrameDefault+4551>
0x0000000000579ac7 <+4623>:	mov    $0x7444e0,%ecx
0x0000000000579acc <+4628>:	mov    $0x787,%edx
0x0000000000579ad1 <+4633>:	mov    $0x74045c,%esi
0x0000000000579ad6 <+4638>:	mov    $0x742a50,%edi
0x0000000000579adb <+4643>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579ae0 <+4648>:	mov    $0xffffffff,%edx
0x0000000000579ae5 <+4653>:	jmp    0x579a9e <_PyEval_EvalFrameDefault+4582>
0x0000000000579ae7 <+4655>:	lea    0x2(%r13),%r15
0x0000000000579aeb <+4659>:	mov    %r13,0x38(%rbp)
0x0000000000579aef <+4663>:	mov    -0x8(%rbx),%r14
0x0000000000579af3 <+4667>:	mov    %r14,%rdi
0x0000000000579af6 <+4670>:	call   0x4efc71 <PyObject_IsTrue>
0x0000000000579afb <+4675>:	mov    %eax,%r12d
0x0000000000579afe <+4678>:	mov    %r14,%rdx
0x0000000000579b01 <+4681>:	mov    $0x78d,%esi
0x0000000000579b06 <+4686>:	mov    $0x74045c,%edi
0x0000000000579b0b <+4691>:	call   0x573c83 <Py_DECREF>
0x0000000000579b10 <+4696>:	test   %r12d,%r12d
0x0000000000579b13 <+4699>:	jne    0x579bbd <_PyEval_EvalFrameDefault+4869>
0x0000000000579b19 <+4705>:	addq   $0x1,0x549f67(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000579b21 <+4713>:	mov    0x4087d8(%rip),%rax        # 0x982300 <_Py_TrueStruct>
0x0000000000579b28 <+4720>:	add    $0x1,%rax
0x0000000000579b2c <+4724>:	mov    %rax,0x4087cd(%rip)        # 0x982300 <_Py_TrueStruct>
0x0000000000579b33 <+4731>:	movq   $0x982300,-0x8(%rbx)
0x0000000000579b3b <+4739>:	movzwl 0x2(%r13),%r12d
0x0000000000579b40 <+4744>:	mov    %r12d,%eax
0x0000000000579b43 <+4747>:	shr    $0x8,%ax
0x0000000000579b47 <+4751>:	movzwl %ax,%eax
0x0000000000579b4a <+4754>:	mov    %eax,0x8(%rsp)
0x0000000000579b4e <+4758>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579b53 <+4763>:	jne    0x579b8d <_PyEval_EvalFrameDefault+4821>
0x0000000000579b55 <+4765>:	movzbl 0xc0(%rsp),%eax
0x0000000000579b5d <+4773>:	lea    -0x1(%rax),%edx
0x0000000000579b60 <+4776>:	cmp    $0xfd,%dl
0x0000000000579b63 <+4779>:	jbe    0x579b9d <_PyEval_EvalFrameDefault+4837>
0x0000000000579b65 <+4781>:	cmpw   $0x0,0x5458df(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579b6d <+4789>:	jne    0x579bb6 <_PyEval_EvalFrameDefault+4862>
0x0000000000579b6f <+4791>:	mov    $0x0,%edx
0x0000000000579b74 <+4796>:	or     %edx,%eax
0x0000000000579b76 <+4798>:	or     %eax,%r12d
0x0000000000579b79 <+4801>:	movzbl %r12b,%eax
0x0000000000579b7d <+4805>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579b85 <+4813>:	mov    %r15,%r13
0x0000000000579b88 <+4816>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579b8d <+4821>:	mov    %r15,%rdx
0x0000000000579b90 <+4824>:	mov    %rbx,%rsi
0x0000000000579b93 <+4827>:	mov    %rbp,%rdi
0x0000000000579b96 <+4830>:	call   0x573f7b <lltrace_instruction>
0x0000000000579b9b <+4835>:	jmp    0x579b55 <_PyEval_EvalFrameDefault+4765>
0x0000000000579b9d <+4837>:	mov    $0x7444e0,%ecx
0x0000000000579ba2 <+4842>:	mov    $0x791,%edx
0x0000000000579ba7 <+4847>:	mov    $0x74045c,%esi
0x0000000000579bac <+4852>:	mov    $0x742a50,%edi
0x0000000000579bb1 <+4857>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579bb6 <+4862>:	mov    $0xffffffff,%edx
0x0000000000579bbb <+4867>:	jmp    0x579b74 <_PyEval_EvalFrameDefault+4796>
0x0000000000579bbd <+4869>:	jle    0x579c66 <_PyEval_EvalFrameDefault+5038>
0x0000000000579bc3 <+4875>:	addq   $0x1,0x549ebd(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000579bcb <+4883>:	mov    0x40874e(%rip),%rax        # 0x982320 <_Py_FalseStruct>
0x0000000000579bd2 <+4890>:	add    $0x1,%rax
0x0000000000579bd6 <+4894>:	mov    %rax,0x408743(%rip)        # 0x982320 <_Py_FalseStruct>
0x0000000000579bdd <+4901>:	movq   $0x982320,-0x8(%rbx)
0x0000000000579be5 <+4909>:	movzwl (%r15),%r12d
0x0000000000579be9 <+4913>:	mov    %r12d,%eax
0x0000000000579bec <+4916>:	shr    $0x8,%ax
0x0000000000579bf0 <+4920>:	movzwl %ax,%eax
0x0000000000579bf3 <+4923>:	mov    %eax,0x8(%rsp)
0x0000000000579bf7 <+4927>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579bfc <+4932>:	jne    0x579c36 <_PyEval_EvalFrameDefault+4990>
0x0000000000579bfe <+4934>:	movzbl 0xc0(%rsp),%eax
0x0000000000579c06 <+4942>:	lea    -0x1(%rax),%edx
0x0000000000579c09 <+4945>:	cmp    $0xfd,%dl
0x0000000000579c0c <+4948>:	jbe    0x579c46 <_PyEval_EvalFrameDefault+5006>
0x0000000000579c0e <+4950>:	cmpw   $0x0,0x545836(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579c16 <+4958>:	jne    0x579c5f <_PyEval_EvalFrameDefault+5031>
0x0000000000579c18 <+4960>:	mov    $0x0,%edx
0x0000000000579c1d <+4965>:	or     %edx,%eax
0x0000000000579c1f <+4967>:	or     %eax,%r12d
0x0000000000579c22 <+4970>:	movzbl %r12b,%eax
0x0000000000579c26 <+4974>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579c2e <+4982>:	mov    %r15,%r13
0x0000000000579c31 <+4985>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579c36 <+4990>:	mov    %r15,%rdx
0x0000000000579c39 <+4993>:	mov    %rbx,%rsi
0x0000000000579c3c <+4996>:	mov    %rbp,%rdi
0x0000000000579c3f <+4999>:	call   0x573f7b <lltrace_instruction>
0x0000000000579c44 <+5004>:	jmp    0x579bfe <_PyEval_EvalFrameDefault+4934>
0x0000000000579c46 <+5006>:	mov    $0x7444e0,%ecx
0x0000000000579c4b <+5011>:	mov    $0x796,%edx
0x0000000000579c50 <+5016>:	mov    $0x74045c,%esi
0x0000000000579c55 <+5021>:	mov    $0x742a50,%edi
0x0000000000579c5a <+5026>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579c5f <+5031>:	mov    $0xffffffff,%edx
0x0000000000579c64 <+5036>:	jmp    0x579c1d <_PyEval_EvalFrameDefault+4965>
0x0000000000579c66 <+5038>:	mov    0x20(%rbp),%rax
0x0000000000579c6a <+5042>:	movslq 0x4c(%rax),%rax
0x0000000000579c6e <+5046>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000579c73 <+5051>:	mov    %rbx,%rax
0x0000000000579c76 <+5054>:	sub    %rdx,%rax
0x0000000000579c79 <+5057>:	sar    $0x3,%rax
0x0000000000579c7d <+5061>:	test   %eax,%eax
0x0000000000579c7f <+5063>:	jle    0x579c8a <_PyEval_EvalFrameDefault+5074>
0x0000000000579c81 <+5065>:	sub    $0x8,%rbx
0x0000000000579c85 <+5069>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000579c8a <+5074>:	mov    $0x7444e0,%ecx
0x0000000000579c8f <+5079>:	mov    $0x798,%edx
0x0000000000579c94 <+5084>:	mov    $0x74045c,%esi
0x0000000000579c99 <+5089>:	mov    $0x7408ec,%edi
0x0000000000579c9e <+5094>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579ca3 <+5099>:	lea    0x2(%r13),%r15
0x0000000000579ca7 <+5103>:	mov    %r13,0x38(%rbp)
0x0000000000579cab <+5107>:	mov    -0x8(%rbx),%r14
0x0000000000579caf <+5111>:	mov    %r14,%rdi
0x0000000000579cb2 <+5114>:	call   0x491c34 <PyNumber_Invert>
0x0000000000579cb7 <+5119>:	mov    %rax,%r12
0x0000000000579cba <+5122>:	mov    %r14,%rdx
0x0000000000579cbd <+5125>:	mov    $0x79f,%esi
0x0000000000579cc2 <+5130>:	mov    $0x74045c,%edi
0x0000000000579cc7 <+5135>:	call   0x573c83 <Py_DECREF>
0x0000000000579ccc <+5140>:	mov    %r12,-0x8(%rbx)
0x0000000000579cd0 <+5144>:	test   %r12,%r12
0x0000000000579cd3 <+5147>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000579cd9 <+5153>:	movzwl 0x2(%r13),%r12d
0x0000000000579cde <+5158>:	mov    %r12d,%eax
0x0000000000579ce1 <+5161>:	shr    $0x8,%ax
0x0000000000579ce5 <+5165>:	movzwl %ax,%eax
0x0000000000579ce8 <+5168>:	mov    %eax,0x8(%rsp)
0x0000000000579cec <+5172>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579cf1 <+5177>:	jne    0x579d2b <_PyEval_EvalFrameDefault+5235>
0x0000000000579cf3 <+5179>:	movzbl 0xc0(%rsp),%eax
0x0000000000579cfb <+5187>:	lea    -0x1(%rax),%edx
0x0000000000579cfe <+5190>:	cmp    $0xfd,%dl
0x0000000000579d01 <+5193>:	jbe    0x579d3b <_PyEval_EvalFrameDefault+5251>
0x0000000000579d03 <+5195>:	cmpw   $0x0,0x545741(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579d0b <+5203>:	jne    0x579d54 <_PyEval_EvalFrameDefault+5276>
0x0000000000579d0d <+5205>:	mov    $0x0,%edx
0x0000000000579d12 <+5210>:	or     %edx,%eax
0x0000000000579d14 <+5212>:	or     %eax,%r12d
0x0000000000579d17 <+5215>:	movzbl %r12b,%eax
0x0000000000579d1b <+5219>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579d23 <+5227>:	mov    %r15,%r13
0x0000000000579d26 <+5230>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579d2b <+5235>:	mov    %r15,%rdx
0x0000000000579d2e <+5238>:	mov    %rbx,%rsi
0x0000000000579d31 <+5241>:	mov    %rbp,%rdi
0x0000000000579d34 <+5244>:	call   0x573f7b <lltrace_instruction>
0x0000000000579d39 <+5249>:	jmp    0x579cf3 <_PyEval_EvalFrameDefault+5179>
0x0000000000579d3b <+5251>:	mov    $0x7444e0,%ecx
0x0000000000579d40 <+5256>:	mov    $0x7a3,%edx
0x0000000000579d45 <+5261>:	mov    $0x74045c,%esi
0x0000000000579d4a <+5266>:	mov    $0x742a50,%edi
0x0000000000579d4f <+5271>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579d54 <+5276>:	mov    $0xffffffff,%edx
0x0000000000579d59 <+5281>:	jmp    0x579d12 <_PyEval_EvalFrameDefault+5210>
0x0000000000579d5b <+5283>:	lea    0x2(%r13),%r15
0x0000000000579d5f <+5287>:	mov    %r13,0x38(%rbp)
0x0000000000579d63 <+5291>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000579d6b <+5299>:	jne    0x579e46 <_PyEval_EvalFrameDefault+5518>
0x0000000000579d71 <+5305>:	mov    -0x10(%rbx),%r14
0x0000000000579d75 <+5309>:	mov    -0x8(%rbx),%rax
0x0000000000579d79 <+5313>:	mov    %rax,0x48(%rsp)
0x0000000000579d7e <+5318>:	cmpq   $0x992c20,0x8(%r14)
0x0000000000579d86 <+5326>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000579d8c <+5332>:	cmpq   $0x992c20,0x8(%rax)
0x0000000000579d94 <+5340>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000579d9a <+5346>:	mov    %rax,%rsi
0x0000000000579d9d <+5349>:	mov    %r14,%rdi
0x0000000000579da0 <+5352>:	call   0x4d938b <_PyLong_Multiply>
0x0000000000579da5 <+5357>:	mov    %rax,%r12
0x0000000000579da8 <+5360>:	mov    %rax,-0x10(%rbx)
0x0000000000579dac <+5364>:	mov    $0x4f477b,%esi
0x0000000000579db1 <+5369>:	mov    0x48(%rsp),%rdi
0x0000000000579db6 <+5374>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000579dbb <+5379>:	mov    $0x4f477b,%esi
0x0000000000579dc0 <+5384>:	mov    %r14,%rdi
0x0000000000579dc3 <+5387>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000579dc8 <+5392>:	mov    0x20(%rbp),%rax
0x0000000000579dcc <+5396>:	movslq 0x4c(%rax),%rax
0x0000000000579dd0 <+5400>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000579dd5 <+5405>:	mov    %rbx,%rax
0x0000000000579dd8 <+5408>:	sub    %rdx,%rax
0x0000000000579ddb <+5411>:	sar    $0x3,%rax
0x0000000000579ddf <+5415>:	test   %eax,%eax
0x0000000000579de1 <+5417>:	jle    0x579e5f <_PyEval_EvalFrameDefault+5543>
0x0000000000579de3 <+5419>:	sub    $0x8,%rbx
0x0000000000579de7 <+5423>:	test   %r12,%r12
0x0000000000579dea <+5426>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000579df0 <+5432>:	lea    0x4(%r13),%r14
0x0000000000579df4 <+5436>:	movzwl 0x4(%r13),%r12d
0x0000000000579df9 <+5441>:	mov    %r12d,%eax
0x0000000000579dfc <+5444>:	shr    $0x8,%ax
0x0000000000579e00 <+5448>:	movzwl %ax,%eax
0x0000000000579e03 <+5451>:	mov    %eax,0x8(%rsp)
0x0000000000579e07 <+5455>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579e0c <+5460>:	jne    0x579e78 <_PyEval_EvalFrameDefault+5568>
0x0000000000579e0e <+5462>:	movzbl 0xc0(%rsp),%eax
0x0000000000579e16 <+5470>:	lea    -0x1(%rax),%edx
0x0000000000579e19 <+5473>:	cmp    $0xfd,%dl
0x0000000000579e1c <+5476>:	jbe    0x579e88 <_PyEval_EvalFrameDefault+5584>
0x0000000000579e1e <+5478>:	cmpw   $0x0,0x545626(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579e26 <+5486>:	jne    0x579ea1 <_PyEval_EvalFrameDefault+5609>
0x0000000000579e28 <+5488>:	mov    $0x0,%edx
0x0000000000579e2d <+5493>:	or     %edx,%eax
0x0000000000579e2f <+5495>:	or     %eax,%r12d
0x0000000000579e32 <+5498>:	movzbl %r12b,%eax
0x0000000000579e36 <+5502>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579e3e <+5510>:	mov    %r14,%r13
0x0000000000579e41 <+5513>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579e46 <+5518>:	mov    $0x7444e0,%ecx
0x0000000000579e4b <+5523>:	mov    $0x7a7,%edx
0x0000000000579e50 <+5528>:	mov    $0x74045c,%esi
0x0000000000579e55 <+5533>:	mov    $0x7408ff,%edi
0x0000000000579e5a <+5538>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579e5f <+5543>:	mov    $0x7444e0,%ecx
0x0000000000579e64 <+5548>:	mov    $0x7b1,%edx
0x0000000000579e69 <+5553>:	mov    $0x74045c,%esi
0x0000000000579e6e <+5558>:	mov    $0x7408ec,%edi
0x0000000000579e73 <+5563>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579e78 <+5568>:	mov    %r14,%rdx
0x0000000000579e7b <+5571>:	mov    %rbx,%rsi
0x0000000000579e7e <+5574>:	mov    %rbp,%rdi
0x0000000000579e81 <+5577>:	call   0x573f7b <lltrace_instruction>
0x0000000000579e86 <+5582>:	jmp    0x579e0e <_PyEval_EvalFrameDefault+5462>
0x0000000000579e88 <+5584>:	mov    $0x7444e0,%ecx
0x0000000000579e8d <+5589>:	mov    $0x7b6,%edx
0x0000000000579e92 <+5594>:	mov    $0x74045c,%esi
0x0000000000579e97 <+5599>:	mov    $0x742a50,%edi
0x0000000000579e9c <+5604>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579ea1 <+5609>:	mov    $0xffffffff,%edx
0x0000000000579ea6 <+5614>:	jmp    0x579e2d <_PyEval_EvalFrameDefault+5493>
0x0000000000579ea8 <+5616>:	lea    0x2(%r13),%r15
0x0000000000579eac <+5620>:	mov    %r13,0x38(%rbp)
0x0000000000579eb0 <+5624>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000579eb8 <+5632>:	jne    0x579f98 <_PyEval_EvalFrameDefault+5856>
0x0000000000579ebe <+5638>:	mov    -0x10(%rbx),%rax
0x0000000000579ec2 <+5642>:	mov    %rax,0x48(%rsp)
0x0000000000579ec7 <+5647>:	mov    -0x8(%rbx),%r14
0x0000000000579ecb <+5651>:	cmpq   $0x990600,0x8(%rax)
0x0000000000579ed3 <+5659>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000579ed9 <+5665>:	cmpq   $0x990600,0x8(%r14)
0x0000000000579ee1 <+5673>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000579ee7 <+5679>:	movsd  0x10(%r14),%xmm0
0x0000000000579eed <+5685>:	mulsd  0x10(%rax),%xmm0
0x0000000000579ef2 <+5690>:	call   0x4c3404 <PyFloat_FromDouble>
0x0000000000579ef7 <+5695>:	mov    %rax,%r12
0x0000000000579efa <+5698>:	mov    %rax,-0x10(%rbx)
0x0000000000579efe <+5702>:	mov    $0x4c4c51,%esi
0x0000000000579f03 <+5707>:	mov    %r14,%rdi
0x0000000000579f06 <+5710>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000579f0b <+5715>:	mov    $0x4c4c51,%esi
0x0000000000579f10 <+5720>:	mov    0x48(%rsp),%rdi
0x0000000000579f15 <+5725>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000579f1a <+5730>:	mov    0x20(%rbp),%rax
0x0000000000579f1e <+5734>:	movslq 0x4c(%rax),%rax
0x0000000000579f22 <+5738>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000579f27 <+5743>:	mov    %rbx,%rax
0x0000000000579f2a <+5746>:	sub    %rdx,%rax
0x0000000000579f2d <+5749>:	sar    $0x3,%rax
0x0000000000579f31 <+5753>:	test   %eax,%eax
0x0000000000579f33 <+5755>:	jle    0x579fb1 <_PyEval_EvalFrameDefault+5881>
0x0000000000579f35 <+5757>:	sub    $0x8,%rbx
0x0000000000579f39 <+5761>:	test   %r12,%r12
0x0000000000579f3c <+5764>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000579f42 <+5770>:	lea    0x4(%r13),%r14
0x0000000000579f46 <+5774>:	movzwl 0x4(%r13),%r12d
0x0000000000579f4b <+5779>:	mov    %r12d,%eax
0x0000000000579f4e <+5782>:	shr    $0x8,%ax
0x0000000000579f52 <+5786>:	movzwl %ax,%eax
0x0000000000579f55 <+5789>:	mov    %eax,0x8(%rsp)
0x0000000000579f59 <+5793>:	cmpl   $0x0,0x14(%rsp)
0x0000000000579f5e <+5798>:	jne    0x579fca <_PyEval_EvalFrameDefault+5906>
0x0000000000579f60 <+5800>:	movzbl 0xc0(%rsp),%eax
0x0000000000579f68 <+5808>:	lea    -0x1(%rax),%edx
0x0000000000579f6b <+5811>:	cmp    $0xfd,%dl
0x0000000000579f6e <+5814>:	jbe    0x579fda <_PyEval_EvalFrameDefault+5922>
0x0000000000579f70 <+5816>:	cmpw   $0x0,0x5454d4(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000579f78 <+5824>:	jne    0x579ff3 <_PyEval_EvalFrameDefault+5947>
0x0000000000579f7a <+5826>:	mov    $0x0,%edx
0x0000000000579f7f <+5831>:	or     %edx,%eax
0x0000000000579f81 <+5833>:	or     %eax,%r12d
0x0000000000579f84 <+5836>:	movzbl %r12b,%eax
0x0000000000579f88 <+5840>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000579f90 <+5848>:	mov    %r14,%r13
0x0000000000579f93 <+5851>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000579f98 <+5856>:	mov    $0x7444e0,%ecx
0x0000000000579f9d <+5861>:	mov    $0x7ba,%edx
0x0000000000579fa2 <+5866>:	mov    $0x74045c,%esi
0x0000000000579fa7 <+5871>:	mov    $0x7408ff,%edi
0x0000000000579fac <+5876>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579fb1 <+5881>:	mov    $0x7444e0,%ecx
0x0000000000579fb6 <+5886>:	mov    $0x7c6,%edx
0x0000000000579fbb <+5891>:	mov    $0x74045c,%esi
0x0000000000579fc0 <+5896>:	mov    $0x7408ec,%edi
0x0000000000579fc5 <+5901>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579fca <+5906>:	mov    %r14,%rdx
0x0000000000579fcd <+5909>:	mov    %rbx,%rsi
0x0000000000579fd0 <+5912>:	mov    %rbp,%rdi
0x0000000000579fd3 <+5915>:	call   0x573f7b <lltrace_instruction>
0x0000000000579fd8 <+5920>:	jmp    0x579f60 <_PyEval_EvalFrameDefault+5800>
0x0000000000579fda <+5922>:	mov    $0x7444e0,%ecx
0x0000000000579fdf <+5927>:	mov    $0x7cb,%edx
0x0000000000579fe4 <+5932>:	mov    $0x74045c,%esi
0x0000000000579fe9 <+5937>:	mov    $0x742a50,%edi
0x0000000000579fee <+5942>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000579ff3 <+5947>:	mov    $0xffffffff,%edx
0x0000000000579ff8 <+5952>:	jmp    0x579f7f <_PyEval_EvalFrameDefault+5831>
0x0000000000579ffa <+5954>:	lea    0x2(%r13),%r15
0x0000000000579ffe <+5958>:	mov    %r13,0x38(%rbp)
0x000000000057a002 <+5962>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a00a <+5970>:	jne    0x57a0e5 <_PyEval_EvalFrameDefault+6189>
0x000000000057a010 <+5976>:	mov    -0x10(%rbx),%r14
0x000000000057a014 <+5980>:	mov    -0x8(%rbx),%rax
0x000000000057a018 <+5984>:	mov    %rax,0x48(%rsp)
0x000000000057a01d <+5989>:	cmpq   $0x992c20,0x8(%r14)
0x000000000057a025 <+5997>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a02b <+6003>:	cmpq   $0x992c20,0x8(%rax)
0x000000000057a033 <+6011>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a039 <+6017>:	mov    %rax,%rsi
0x000000000057a03c <+6020>:	mov    %r14,%rdi
0x000000000057a03f <+6023>:	call   0x4d8f12 <_PyLong_Subtract>
0x000000000057a044 <+6028>:	mov    %rax,%r12
0x000000000057a047 <+6031>:	mov    %rax,-0x10(%rbx)
0x000000000057a04b <+6035>:	mov    $0x4f477b,%esi
0x000000000057a050 <+6040>:	mov    0x48(%rsp),%rdi
0x000000000057a055 <+6045>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a05a <+6050>:	mov    $0x4f477b,%esi
0x000000000057a05f <+6055>:	mov    %r14,%rdi
0x000000000057a062 <+6058>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a067 <+6063>:	mov    0x20(%rbp),%rax
0x000000000057a06b <+6067>:	movslq 0x4c(%rax),%rax
0x000000000057a06f <+6071>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057a074 <+6076>:	mov    %rbx,%rax
0x000000000057a077 <+6079>:	sub    %rdx,%rax
0x000000000057a07a <+6082>:	sar    $0x3,%rax
0x000000000057a07e <+6086>:	test   %eax,%eax
0x000000000057a080 <+6088>:	jle    0x57a0fe <_PyEval_EvalFrameDefault+6214>
0x000000000057a082 <+6090>:	sub    $0x8,%rbx
0x000000000057a086 <+6094>:	test   %r12,%r12
0x000000000057a089 <+6097>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a08f <+6103>:	lea    0x4(%r13),%r14
0x000000000057a093 <+6107>:	movzwl 0x4(%r13),%r12d
0x000000000057a098 <+6112>:	mov    %r12d,%eax
0x000000000057a09b <+6115>:	shr    $0x8,%ax
0x000000000057a09f <+6119>:	movzwl %ax,%eax
0x000000000057a0a2 <+6122>:	mov    %eax,0x8(%rsp)
0x000000000057a0a6 <+6126>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a0ab <+6131>:	jne    0x57a117 <_PyEval_EvalFrameDefault+6239>
0x000000000057a0ad <+6133>:	movzbl 0xc0(%rsp),%eax
0x000000000057a0b5 <+6141>:	lea    -0x1(%rax),%edx
0x000000000057a0b8 <+6144>:	cmp    $0xfd,%dl
0x000000000057a0bb <+6147>:	jbe    0x57a127 <_PyEval_EvalFrameDefault+6255>
0x000000000057a0bd <+6149>:	cmpw   $0x0,0x545387(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a0c5 <+6157>:	jne    0x57a140 <_PyEval_EvalFrameDefault+6280>
0x000000000057a0c7 <+6159>:	mov    $0x0,%edx
0x000000000057a0cc <+6164>:	or     %edx,%eax
0x000000000057a0ce <+6166>:	or     %eax,%r12d
0x000000000057a0d1 <+6169>:	movzbl %r12b,%eax
0x000000000057a0d5 <+6173>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a0dd <+6181>:	mov    %r14,%r13
0x000000000057a0e0 <+6184>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a0e5 <+6189>:	mov    $0x7444e0,%ecx
0x000000000057a0ea <+6194>:	mov    $0x7cf,%edx
0x000000000057a0ef <+6199>:	mov    $0x74045c,%esi
0x000000000057a0f4 <+6204>:	mov    $0x7408ff,%edi
0x000000000057a0f9 <+6209>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a0fe <+6214>:	mov    $0x7444e0,%ecx
0x000000000057a103 <+6219>:	mov    $0x7d9,%edx
0x000000000057a108 <+6224>:	mov    $0x74045c,%esi
0x000000000057a10d <+6229>:	mov    $0x7408ec,%edi
0x000000000057a112 <+6234>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a117 <+6239>:	mov    %r14,%rdx
0x000000000057a11a <+6242>:	mov    %rbx,%rsi
0x000000000057a11d <+6245>:	mov    %rbp,%rdi
0x000000000057a120 <+6248>:	call   0x573f7b <lltrace_instruction>
0x000000000057a125 <+6253>:	jmp    0x57a0ad <_PyEval_EvalFrameDefault+6133>
0x000000000057a127 <+6255>:	mov    $0x7444e0,%ecx
0x000000000057a12c <+6260>:	mov    $0x7de,%edx
0x000000000057a131 <+6265>:	mov    $0x74045c,%esi
0x000000000057a136 <+6270>:	mov    $0x742a50,%edi
0x000000000057a13b <+6275>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a140 <+6280>:	mov    $0xffffffff,%edx
0x000000000057a145 <+6285>:	jmp    0x57a0cc <_PyEval_EvalFrameDefault+6164>
0x000000000057a147 <+6287>:	lea    0x2(%r13),%r15
0x000000000057a14b <+6291>:	mov    %r13,0x38(%rbp)
0x000000000057a14f <+6295>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a157 <+6303>:	jne    0x57a237 <_PyEval_EvalFrameDefault+6527>
0x000000000057a15d <+6309>:	mov    -0x10(%rbx),%r14
0x000000000057a161 <+6313>:	mov    -0x8(%rbx),%rax
0x000000000057a165 <+6317>:	mov    %rax,0x48(%rsp)
0x000000000057a16a <+6322>:	cmpq   $0x990600,0x8(%r14)
0x000000000057a172 <+6330>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a178 <+6336>:	cmpq   $0x990600,0x8(%rax)
0x000000000057a180 <+6344>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a186 <+6350>:	movsd  0x10(%r14),%xmm0
0x000000000057a18c <+6356>:	subsd  0x10(%rax),%xmm0
0x000000000057a191 <+6361>:	call   0x4c3404 <PyFloat_FromDouble>
0x000000000057a196 <+6366>:	mov    %rax,%r12
0x000000000057a199 <+6369>:	mov    %rax,-0x10(%rbx)
0x000000000057a19d <+6373>:	mov    $0x4c4c51,%esi
0x000000000057a1a2 <+6378>:	mov    0x48(%rsp),%rdi
0x000000000057a1a7 <+6383>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a1ac <+6388>:	mov    $0x4c4c51,%esi
0x000000000057a1b1 <+6393>:	mov    %r14,%rdi
0x000000000057a1b4 <+6396>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a1b9 <+6401>:	mov    0x20(%rbp),%rax
0x000000000057a1bd <+6405>:	movslq 0x4c(%rax),%rax
0x000000000057a1c1 <+6409>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057a1c6 <+6414>:	mov    %rbx,%rax
0x000000000057a1c9 <+6417>:	sub    %rdx,%rax
0x000000000057a1cc <+6420>:	sar    $0x3,%rax
0x000000000057a1d0 <+6424>:	test   %eax,%eax
0x000000000057a1d2 <+6426>:	jle    0x57a250 <_PyEval_EvalFrameDefault+6552>
0x000000000057a1d4 <+6428>:	sub    $0x8,%rbx
0x000000000057a1d8 <+6432>:	test   %r12,%r12
0x000000000057a1db <+6435>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a1e1 <+6441>:	lea    0x4(%r13),%r14
0x000000000057a1e5 <+6445>:	movzwl 0x4(%r13),%r12d
0x000000000057a1ea <+6450>:	mov    %r12d,%eax
0x000000000057a1ed <+6453>:	shr    $0x8,%ax
0x000000000057a1f1 <+6457>:	movzwl %ax,%eax
0x000000000057a1f4 <+6460>:	mov    %eax,0x8(%rsp)
0x000000000057a1f8 <+6464>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a1fd <+6469>:	jne    0x57a269 <_PyEval_EvalFrameDefault+6577>
0x000000000057a1ff <+6471>:	movzbl 0xc0(%rsp),%eax
0x000000000057a207 <+6479>:	lea    -0x1(%rax),%edx
0x000000000057a20a <+6482>:	cmp    $0xfd,%dl
0x000000000057a20d <+6485>:	jbe    0x57a279 <_PyEval_EvalFrameDefault+6593>
0x000000000057a20f <+6487>:	cmpw   $0x0,0x545235(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a217 <+6495>:	jne    0x57a292 <_PyEval_EvalFrameDefault+6618>
0x000000000057a219 <+6497>:	mov    $0x0,%edx
0x000000000057a21e <+6502>:	or     %edx,%eax
0x000000000057a220 <+6504>:	or     %eax,%r12d
0x000000000057a223 <+6507>:	movzbl %r12b,%eax
0x000000000057a227 <+6511>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a22f <+6519>:	mov    %r14,%r13
0x000000000057a232 <+6522>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a237 <+6527>:	mov    $0x7444e0,%ecx
0x000000000057a23c <+6532>:	mov    $0x7e2,%edx
0x000000000057a241 <+6537>:	mov    $0x74045c,%esi
0x000000000057a246 <+6542>:	mov    $0x7408ff,%edi
0x000000000057a24b <+6547>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a250 <+6552>:	mov    $0x7444e0,%ecx
0x000000000057a255 <+6557>:	mov    $0x7ed,%edx
0x000000000057a25a <+6562>:	mov    $0x74045c,%esi
0x000000000057a25f <+6567>:	mov    $0x7408ec,%edi
0x000000000057a264 <+6572>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a269 <+6577>:	mov    %r14,%rdx
0x000000000057a26c <+6580>:	mov    %rbx,%rsi
0x000000000057a26f <+6583>:	mov    %rbp,%rdi
0x000000000057a272 <+6586>:	call   0x573f7b <lltrace_instruction>
0x000000000057a277 <+6591>:	jmp    0x57a1ff <_PyEval_EvalFrameDefault+6471>
0x000000000057a279 <+6593>:	mov    $0x7444e0,%ecx
0x000000000057a27e <+6598>:	mov    $0x7f2,%edx
0x000000000057a283 <+6603>:	mov    $0x74045c,%esi
0x000000000057a288 <+6608>:	mov    $0x742a50,%edi
0x000000000057a28d <+6613>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a292 <+6618>:	mov    $0xffffffff,%edx
0x000000000057a297 <+6623>:	jmp    0x57a21e <_PyEval_EvalFrameDefault+6502>
0x000000000057a299 <+6625>:	lea    0x2(%r13),%r15
0x000000000057a29d <+6629>:	mov    %r13,0x38(%rbp)
0x000000000057a2a1 <+6633>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a2a9 <+6641>:	jne    0x57a387 <_PyEval_EvalFrameDefault+6863>
0x000000000057a2af <+6647>:	mov    -0x10(%rbx),%rax
0x000000000057a2b3 <+6651>:	mov    %rax,0x48(%rsp)
0x000000000057a2b8 <+6656>:	mov    -0x8(%rbx),%r14
0x000000000057a2bc <+6660>:	mov    0x8(%rax),%rax
0x000000000057a2c0 <+6664>:	cmp    $0x99c300,%rax
0x000000000057a2c6 <+6670>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a2cc <+6676>:	cmp    0x8(%r14),%rax
0x000000000057a2d0 <+6680>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a2d6 <+6686>:	mov    %r14,%rsi
0x000000000057a2d9 <+6689>:	mov    0x48(%rsp),%rdi
0x000000000057a2de <+6694>:	call   0x52d92c <PyUnicode_Concat>
0x000000000057a2e3 <+6699>:	mov    0x20(%rbp),%rdx
0x000000000057a2e7 <+6703>:	movslq 0x4c(%rdx),%rdx
0x000000000057a2eb <+6707>:	lea    0x48(%rbp,%rdx,8),%rcx
0x000000000057a2f0 <+6712>:	mov    %rbx,%rdx
0x000000000057a2f3 <+6715>:	sub    %rcx,%rdx
0x000000000057a2f6 <+6718>:	sar    $0x3,%rdx
0x000000000057a2fa <+6722>:	test   %edx,%edx
0x000000000057a2fc <+6724>:	jle    0x57a3a0 <_PyEval_EvalFrameDefault+6888>
0x000000000057a302 <+6730>:	sub    $0x8,%rbx
0x000000000057a306 <+6734>:	mov    %rax,-0x8(%rbx)
0x000000000057a30a <+6738>:	mov    $0x53c819,%esi
0x000000000057a30f <+6743>:	mov    0x48(%rsp),%rdi
0x000000000057a314 <+6748>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a319 <+6753>:	mov    $0x53c819,%esi
0x000000000057a31e <+6758>:	mov    %r14,%rdi
0x000000000057a321 <+6761>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a326 <+6766>:	cmpq   $0x0,-0x8(%rbx)
0x000000000057a32b <+6771>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a331 <+6777>:	lea    0x4(%r13),%r14
0x000000000057a335 <+6781>:	movzwl 0x4(%r13),%r12d
0x000000000057a33a <+6786>:	mov    %r12d,%eax
0x000000000057a33d <+6789>:	shr    $0x8,%ax
0x000000000057a341 <+6793>:	movzwl %ax,%eax
0x000000000057a344 <+6796>:	mov    %eax,0x8(%rsp)
0x000000000057a348 <+6800>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a34d <+6805>:	jne    0x57a3b9 <_PyEval_EvalFrameDefault+6913>
0x000000000057a34f <+6807>:	movzbl 0xc0(%rsp),%eax
0x000000000057a357 <+6815>:	lea    -0x1(%rax),%edx
0x000000000057a35a <+6818>:	cmp    $0xfd,%dl
0x000000000057a35d <+6821>:	jbe    0x57a3c9 <_PyEval_EvalFrameDefault+6929>
0x000000000057a35f <+6823>:	cmpw   $0x0,0x5450e5(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a367 <+6831>:	jne    0x57a3e2 <_PyEval_EvalFrameDefault+6954>
0x000000000057a369 <+6833>:	mov    $0x0,%edx
0x000000000057a36e <+6838>:	or     %edx,%eax
0x000000000057a370 <+6840>:	or     %eax,%r12d
0x000000000057a373 <+6843>:	movzbl %r12b,%eax
0x000000000057a377 <+6847>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a37f <+6855>:	mov    %r14,%r13
0x000000000057a382 <+6858>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a387 <+6863>:	mov    $0x7444e0,%ecx
0x000000000057a38c <+6868>:	mov    $0x7f6,%edx
0x000000000057a391 <+6873>:	mov    $0x74045c,%esi
0x000000000057a396 <+6878>:	mov    $0x7408ff,%edi
0x000000000057a39b <+6883>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a3a0 <+6888>:	mov    $0x7444e0,%ecx
0x000000000057a3a5 <+6893>:	mov    $0x7fd,%edx
0x000000000057a3aa <+6898>:	mov    $0x74045c,%esi
0x000000000057a3af <+6903>:	mov    $0x7408ec,%edi
0x000000000057a3b4 <+6908>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a3b9 <+6913>:	mov    %r14,%rdx
0x000000000057a3bc <+6916>:	mov    %rbx,%rsi
0x000000000057a3bf <+6919>:	mov    %rbp,%rdi
0x000000000057a3c2 <+6922>:	call   0x573f7b <lltrace_instruction>
0x000000000057a3c7 <+6927>:	jmp    0x57a34f <_PyEval_EvalFrameDefault+6807>
0x000000000057a3c9 <+6929>:	mov    $0x7444e0,%ecx
0x000000000057a3ce <+6934>:	mov    $0x805,%edx
0x000000000057a3d3 <+6939>:	mov    $0x74045c,%esi
0x000000000057a3d8 <+6944>:	mov    $0x742a50,%edi
0x000000000057a3dd <+6949>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a3e2 <+6954>:	mov    $0xffffffff,%edx
0x000000000057a3e7 <+6959>:	jmp    0x57a36e <_PyEval_EvalFrameDefault+6838>
0x000000000057a3e9 <+6961>:	lea    0x2(%r13),%r15
0x000000000057a3ed <+6965>:	mov    %r13,0x38(%rbp)
0x000000000057a3f1 <+6969>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a3f9 <+6977>:	jne    0x57a51b <_PyEval_EvalFrameDefault+7267>
0x000000000057a3ff <+6983>:	mov    -0x10(%rbx),%rdi
0x000000000057a403 <+6987>:	mov    -0x8(%rbx),%r14
0x000000000057a407 <+6991>:	mov    0x8(%rdi),%rax
0x000000000057a40b <+6995>:	cmp    $0x99c300,%rax
0x000000000057a411 <+7001>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a417 <+7007>:	cmp    0x8(%r14),%rax
0x000000000057a41b <+7011>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a421 <+7017>:	movzwl 0x4(%r13),%eax
0x000000000057a426 <+7022>:	cmp    $0x7d,%al
0x000000000057a428 <+7024>:	setne  %cl
0x000000000057a42b <+7027>:	cmp    $0xa1,%al
0x000000000057a42d <+7029>:	setne  %dl
0x000000000057a430 <+7032>:	test   %dl,%cl
0x000000000057a432 <+7034>:	jne    0x57a534 <_PyEval_EvalFrameDefault+7292>
0x000000000057a438 <+7040>:	shr    $0x8,%ax
0x000000000057a43c <+7044>:	movzwl %ax,%ecx
0x000000000057a43f <+7047>:	mov    %ecx,0x48(%rsp)
0x000000000057a443 <+7051>:	movzbl %al,%eax
0x000000000057a446 <+7054>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057a44b <+7059>:	mov    %rcx,0x50(%rsp)
0x000000000057a450 <+7064>:	cmp    %rdi,0x48(%rbp,%rax,8)
0x000000000057a455 <+7069>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a45b <+7075>:	cmpq   $0x1,(%rdi)
0x000000000057a45f <+7079>:	jle    0x57a54d <_PyEval_EvalFrameDefault+7317>
0x000000000057a465 <+7085>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x000000000057a46a <+7090>:	mov    0x20(%rbp),%rax
0x000000000057a46e <+7094>:	movslq 0x4c(%rax),%rax
0x000000000057a472 <+7098>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057a477 <+7103>:	mov    %rbx,%rax
0x000000000057a47a <+7106>:	sub    %rdx,%rax
0x000000000057a47d <+7109>:	sar    $0x3,%rax
0x000000000057a481 <+7113>:	cmp    $0x1,%eax
0x000000000057a484 <+7116>:	jle    0x57a566 <_PyEval_EvalFrameDefault+7342>
0x000000000057a48a <+7122>:	sub    $0x10,%rbx
0x000000000057a48e <+7126>:	mov    %r14,%rsi
0x000000000057a491 <+7129>:	mov    0x50(%rsp),%rdi
0x000000000057a496 <+7134>:	call   0x5330da <PyUnicode_Append>
0x000000000057a49b <+7139>:	mov    $0x53c819,%esi
0x000000000057a4a0 <+7144>:	mov    %r14,%rdi
0x000000000057a4a3 <+7147>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a4a8 <+7152>:	movslq 0x48(%rsp),%r14
0x000000000057a4ad <+7157>:	cmpq   $0x0,0x48(%rbp,%r14,8)
0x000000000057a4b3 <+7163>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a4b9 <+7169>:	lea    0x6(%r13),%r14
0x000000000057a4bd <+7173>:	movzwl 0x6(%r13),%r12d
0x000000000057a4c2 <+7178>:	mov    %r12d,%eax
0x000000000057a4c5 <+7181>:	shr    $0x8,%ax
0x000000000057a4c9 <+7185>:	movzwl %ax,%eax
0x000000000057a4cc <+7188>:	mov    %eax,0x8(%rsp)
0x000000000057a4d0 <+7192>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a4d5 <+7197>:	jne    0x57a57f <_PyEval_EvalFrameDefault+7367>
0x000000000057a4db <+7203>:	movzbl 0xc0(%rsp),%eax
0x000000000057a4e3 <+7211>:	lea    -0x1(%rax),%edx
0x000000000057a4e6 <+7214>:	cmp    $0xfd,%dl
0x000000000057a4e9 <+7217>:	jbe    0x57a592 <_PyEval_EvalFrameDefault+7386>
0x000000000057a4ef <+7223>:	cmpw   $0x0,0x544f55(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a4f7 <+7231>:	jne    0x57a5ab <_PyEval_EvalFrameDefault+7411>
0x000000000057a4fd <+7237>:	mov    $0x0,%edx
0x000000000057a502 <+7242>:	or     %edx,%eax
0x000000000057a504 <+7244>:	or     %eax,%r12d
0x000000000057a507 <+7247>:	movzbl %r12b,%eax
0x000000000057a50b <+7251>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a513 <+7259>:	mov    %r14,%r13
0x000000000057a516 <+7262>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a51b <+7267>:	mov    $0x7444e0,%ecx
0x000000000057a520 <+7272>:	mov    $0x809,%edx
0x000000000057a525 <+7277>:	mov    $0x74045c,%esi
0x000000000057a52a <+7282>:	mov    $0x7408ff,%edi
0x000000000057a52f <+7287>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a534 <+7292>:	mov    $0x7444e0,%ecx
0x000000000057a539 <+7297>:	mov    $0x80f,%edx
0x000000000057a53e <+7302>:	mov    $0x74045c,%esi
0x000000000057a543 <+7307>:	mov    $0x742a88,%edi
0x000000000057a548 <+7312>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a54d <+7317>:	mov    $0x7444e0,%ecx
0x000000000057a552 <+7322>:	mov    $0x81f,%edx
0x000000000057a557 <+7327>:	mov    $0x74045c,%esi
0x000000000057a55c <+7332>:	mov    $0x740917,%edi
0x000000000057a561 <+7337>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a566 <+7342>:	mov    $0x7444e0,%ecx
0x000000000057a56b <+7347>:	mov    $0x821,%edx
0x000000000057a570 <+7352>:	mov    $0x74045c,%esi
0x000000000057a575 <+7357>:	mov    $0x74092c,%edi
0x000000000057a57a <+7362>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a57f <+7367>:	mov    %r14,%rdx
0x000000000057a582 <+7370>:	mov    %rbx,%rsi
0x000000000057a585 <+7373>:	mov    %rbp,%rdi
0x000000000057a588 <+7376>:	call   0x573f7b <lltrace_instruction>
0x000000000057a58d <+7381>:	jmp    0x57a4db <_PyEval_EvalFrameDefault+7203>
0x000000000057a592 <+7386>:	mov    $0x7444e0,%ecx
0x000000000057a597 <+7391>:	mov    $0x829,%edx
0x000000000057a59c <+7396>:	mov    $0x74045c,%esi
0x000000000057a5a1 <+7401>:	mov    $0x742a50,%edi
0x000000000057a5a6 <+7406>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a5ab <+7411>:	mov    $0xffffffff,%edx
0x000000000057a5b0 <+7416>:	jmp    0x57a502 <_PyEval_EvalFrameDefault+7242>
0x000000000057a5b5 <+7421>:	lea    0x2(%r13),%r15
0x000000000057a5b9 <+7425>:	mov    %r13,0x38(%rbp)
0x000000000057a5bd <+7429>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a5c5 <+7437>:	jne    0x57a6a8 <_PyEval_EvalFrameDefault+7664>
0x000000000057a5cb <+7443>:	mov    -0x10(%rbx),%rax
0x000000000057a5cf <+7447>:	mov    %rax,0x48(%rsp)
0x000000000057a5d4 <+7452>:	mov    -0x8(%rbx),%r14
0x000000000057a5d8 <+7456>:	mov    0x8(%rax),%rax
0x000000000057a5dc <+7460>:	cmp    $0x990600,%rax
0x000000000057a5e2 <+7466>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a5e8 <+7472>:	cmp    0x8(%r14),%rax
0x000000000057a5ec <+7476>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a5f2 <+7482>:	movsd  0x10(%r14),%xmm0
0x000000000057a5f8 <+7488>:	mov    0x48(%rsp),%rax
0x000000000057a5fd <+7493>:	addsd  0x10(%rax),%xmm0
0x000000000057a602 <+7498>:	call   0x4c3404 <PyFloat_FromDouble>
0x000000000057a607 <+7503>:	mov    %rax,%r12
0x000000000057a60a <+7506>:	mov    %rax,-0x10(%rbx)
0x000000000057a60e <+7510>:	mov    $0x4c4c51,%esi
0x000000000057a613 <+7515>:	mov    %r14,%rdi
0x000000000057a616 <+7518>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a61b <+7523>:	mov    $0x4c4c51,%esi
0x000000000057a620 <+7528>:	mov    0x48(%rsp),%rdi
0x000000000057a625 <+7533>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a62a <+7538>:	mov    0x20(%rbp),%rax
0x000000000057a62e <+7542>:	movslq 0x4c(%rax),%rax
0x000000000057a632 <+7546>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057a637 <+7551>:	mov    %rbx,%rax
0x000000000057a63a <+7554>:	sub    %rdx,%rax
0x000000000057a63d <+7557>:	sar    $0x3,%rax
0x000000000057a641 <+7561>:	test   %eax,%eax
0x000000000057a643 <+7563>:	jle    0x57a6c1 <_PyEval_EvalFrameDefault+7689>
0x000000000057a645 <+7565>:	sub    $0x8,%rbx
0x000000000057a649 <+7569>:	test   %r12,%r12
0x000000000057a64c <+7572>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a652 <+7578>:	lea    0x4(%r13),%r14
0x000000000057a656 <+7582>:	movzwl 0x4(%r13),%r12d
0x000000000057a65b <+7587>:	mov    %r12d,%eax
0x000000000057a65e <+7590>:	shr    $0x8,%ax
0x000000000057a662 <+7594>:	movzwl %ax,%eax
0x000000000057a665 <+7597>:	mov    %eax,0x8(%rsp)
0x000000000057a669 <+7601>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a66e <+7606>:	jne    0x57a6da <_PyEval_EvalFrameDefault+7714>
0x000000000057a670 <+7608>:	movzbl 0xc0(%rsp),%eax
0x000000000057a678 <+7616>:	lea    -0x1(%rax),%edx
0x000000000057a67b <+7619>:	cmp    $0xfd,%dl
0x000000000057a67e <+7622>:	jbe    0x57a6ea <_PyEval_EvalFrameDefault+7730>
0x000000000057a680 <+7624>:	cmpw   $0x0,0x544dc4(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a688 <+7632>:	jne    0x57a703 <_PyEval_EvalFrameDefault+7755>
0x000000000057a68a <+7634>:	mov    $0x0,%edx
0x000000000057a68f <+7639>:	or     %edx,%eax
0x000000000057a691 <+7641>:	or     %eax,%r12d
0x000000000057a694 <+7644>:	movzbl %r12b,%eax
0x000000000057a698 <+7648>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a6a0 <+7656>:	mov    %r14,%r13
0x000000000057a6a3 <+7659>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a6a8 <+7664>:	mov    $0x7444e0,%ecx
0x000000000057a6ad <+7669>:	mov    $0x82d,%edx
0x000000000057a6b2 <+7674>:	mov    $0x74045c,%esi
0x000000000057a6b7 <+7679>:	mov    $0x7408ff,%edi
0x000000000057a6bc <+7684>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a6c1 <+7689>:	mov    $0x7444e0,%ecx
0x000000000057a6c6 <+7694>:	mov    $0x839,%edx
0x000000000057a6cb <+7699>:	mov    $0x74045c,%esi
0x000000000057a6d0 <+7704>:	mov    $0x7408ec,%edi
0x000000000057a6d5 <+7709>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a6da <+7714>:	mov    %r14,%rdx
0x000000000057a6dd <+7717>:	mov    %rbx,%rsi
0x000000000057a6e0 <+7720>:	mov    %rbp,%rdi
0x000000000057a6e3 <+7723>:	call   0x573f7b <lltrace_instruction>
0x000000000057a6e8 <+7728>:	jmp    0x57a670 <_PyEval_EvalFrameDefault+7608>
0x000000000057a6ea <+7730>:	mov    $0x7444e0,%ecx
0x000000000057a6ef <+7735>:	mov    $0x83e,%edx
0x000000000057a6f4 <+7740>:	mov    $0x74045c,%esi
0x000000000057a6f9 <+7745>:	mov    $0x742a50,%edi
0x000000000057a6fe <+7750>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a703 <+7755>:	mov    $0xffffffff,%edx
0x000000000057a708 <+7760>:	jmp    0x57a68f <_PyEval_EvalFrameDefault+7639>
0x000000000057a70a <+7762>:	lea    0x2(%r13),%r15
0x000000000057a70e <+7766>:	mov    %r13,0x38(%rbp)
0x000000000057a712 <+7770>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a71a <+7778>:	jne    0x57a7f6 <_PyEval_EvalFrameDefault+7998>
0x000000000057a720 <+7784>:	mov    -0x10(%rbx),%r14
0x000000000057a724 <+7788>:	mov    -0x8(%rbx),%rax
0x000000000057a728 <+7792>:	mov    %rax,%rcx
0x000000000057a72b <+7795>:	mov    %rax,0x48(%rsp)
0x000000000057a730 <+7800>:	mov    0x8(%r14),%rax
0x000000000057a734 <+7804>:	cmp    $0x992c20,%rax
0x000000000057a73a <+7810>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a740 <+7816>:	cmp    %rax,0x8(%rcx)
0x000000000057a744 <+7820>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057a74a <+7826>:	mov    %rcx,%rsi
0x000000000057a74d <+7829>:	mov    %r14,%rdi
0x000000000057a750 <+7832>:	call   0x4d8b29 <_PyLong_Add>
0x000000000057a755 <+7837>:	mov    %rax,%r12
0x000000000057a758 <+7840>:	mov    %rax,-0x10(%rbx)
0x000000000057a75c <+7844>:	mov    $0x4f477b,%esi
0x000000000057a761 <+7849>:	mov    0x48(%rsp),%rdi
0x000000000057a766 <+7854>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a76b <+7859>:	mov    $0x4f477b,%esi
0x000000000057a770 <+7864>:	mov    %r14,%rdi
0x000000000057a773 <+7867>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057a778 <+7872>:	mov    0x20(%rbp),%rax
0x000000000057a77c <+7876>:	movslq 0x4c(%rax),%rax
0x000000000057a780 <+7880>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057a785 <+7885>:	mov    %rbx,%rax
0x000000000057a788 <+7888>:	sub    %rdx,%rax
0x000000000057a78b <+7891>:	sar    $0x3,%rax
0x000000000057a78f <+7895>:	test   %eax,%eax
0x000000000057a791 <+7897>:	jle    0x57a80f <_PyEval_EvalFrameDefault+8023>
0x000000000057a793 <+7899>:	sub    $0x8,%rbx
0x000000000057a797 <+7903>:	test   %r12,%r12
0x000000000057a79a <+7906>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a7a0 <+7912>:	lea    0x4(%r13),%r14
0x000000000057a7a4 <+7916>:	movzwl 0x4(%r13),%r12d
0x000000000057a7a9 <+7921>:	mov    %r12d,%eax
0x000000000057a7ac <+7924>:	shr    $0x8,%ax
0x000000000057a7b0 <+7928>:	movzwl %ax,%eax
0x000000000057a7b3 <+7931>:	mov    %eax,0x8(%rsp)
0x000000000057a7b7 <+7935>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a7bc <+7940>:	jne    0x57a828 <_PyEval_EvalFrameDefault+8048>
0x000000000057a7be <+7942>:	movzbl 0xc0(%rsp),%eax
0x000000000057a7c6 <+7950>:	lea    -0x1(%rax),%edx
0x000000000057a7c9 <+7953>:	cmp    $0xfd,%dl
0x000000000057a7cc <+7956>:	jbe    0x57a838 <_PyEval_EvalFrameDefault+8064>
0x000000000057a7ce <+7958>:	cmpw   $0x0,0x544c76(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a7d6 <+7966>:	jne    0x57a851 <_PyEval_EvalFrameDefault+8089>
0x000000000057a7d8 <+7968>:	mov    $0x0,%edx
0x000000000057a7dd <+7973>:	or     %edx,%eax
0x000000000057a7df <+7975>:	or     %eax,%r12d
0x000000000057a7e2 <+7978>:	movzbl %r12b,%eax
0x000000000057a7e6 <+7982>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a7ee <+7990>:	mov    %r14,%r13
0x000000000057a7f1 <+7993>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a7f6 <+7998>:	mov    $0x7444e0,%ecx
0x000000000057a7fb <+8003>:	mov    $0x842,%edx
0x000000000057a800 <+8008>:	mov    $0x74045c,%esi
0x000000000057a805 <+8013>:	mov    $0x7408ff,%edi
0x000000000057a80a <+8018>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a80f <+8023>:	mov    $0x7444e0,%ecx
0x000000000057a814 <+8028>:	mov    $0x84c,%edx
0x000000000057a819 <+8033>:	mov    $0x74045c,%esi
0x000000000057a81e <+8038>:	mov    $0x7408ec,%edi
0x000000000057a823 <+8043>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a828 <+8048>:	mov    %r14,%rdx
0x000000000057a82b <+8051>:	mov    %rbx,%rsi
0x000000000057a82e <+8054>:	mov    %rbp,%rdi
0x000000000057a831 <+8057>:	call   0x573f7b <lltrace_instruction>
0x000000000057a836 <+8062>:	jmp    0x57a7be <_PyEval_EvalFrameDefault+7942>
0x000000000057a838 <+8064>:	mov    $0x7444e0,%ecx
0x000000000057a83d <+8069>:	mov    $0x851,%edx
0x000000000057a842 <+8074>:	mov    $0x74045c,%esi
0x000000000057a847 <+8079>:	mov    $0x742a50,%edi
0x000000000057a84c <+8084>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a851 <+8089>:	mov    $0xffffffff,%edx
0x000000000057a856 <+8094>:	jmp    0x57a7dd <_PyEval_EvalFrameDefault+7973>
0x000000000057a858 <+8096>:	lea    0x2(%r13),%r15
0x000000000057a85c <+8100>:	mov    %r13,0x38(%rbp)
0x000000000057a860 <+8104>:	mov    0x20(%rbp),%rax
0x000000000057a864 <+8108>:	movslq 0x4c(%rax),%rax
0x000000000057a868 <+8112>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057a86d <+8117>:	mov    %rbx,%rax
0x000000000057a870 <+8120>:	sub    %rdx,%rax
0x000000000057a873 <+8123>:	sar    $0x3,%rax
0x000000000057a877 <+8127>:	test   %eax,%eax
0x000000000057a879 <+8129>:	jle    0x57a91c <_PyEval_EvalFrameDefault+8292>
0x000000000057a87f <+8135>:	sub    $0x8,%rbx
0x000000000057a883 <+8139>:	mov    (%rbx),%r13
0x000000000057a886 <+8142>:	mov    -0x8(%rbx),%r14
0x000000000057a88a <+8146>:	mov    %r13,%rsi
0x000000000057a88d <+8149>:	mov    %r14,%rdi
0x000000000057a890 <+8152>:	call   0x492ead <PyObject_GetItem>
0x000000000057a895 <+8157>:	mov    %rax,%r12
0x000000000057a898 <+8160>:	mov    %r14,%rdx
0x000000000057a89b <+8163>:	mov    $0x859,%esi
0x000000000057a8a0 <+8168>:	mov    $0x74045c,%edi
0x000000000057a8a5 <+8173>:	call   0x573c83 <Py_DECREF>
0x000000000057a8aa <+8178>:	mov    %r13,%rdx
0x000000000057a8ad <+8181>:	mov    $0x85a,%esi
0x000000000057a8b2 <+8186>:	mov    $0x74045c,%edi
0x000000000057a8b7 <+8191>:	call   0x573c83 <Py_DECREF>
0x000000000057a8bc <+8196>:	mov    %r12,-0x8(%rbx)
0x000000000057a8c0 <+8200>:	test   %r12,%r12
0x000000000057a8c3 <+8203>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a8c9 <+8209>:	lea    0x8(%r15),%r13
0x000000000057a8cd <+8213>:	movzwl 0x8(%r15),%r12d
0x000000000057a8d2 <+8218>:	mov    %r12d,%eax
0x000000000057a8d5 <+8221>:	shr    $0x8,%ax
0x000000000057a8d9 <+8225>:	movzwl %ax,%eax
0x000000000057a8dc <+8228>:	mov    %eax,0x8(%rsp)
0x000000000057a8e0 <+8232>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a8e5 <+8237>:	jne    0x57a935 <_PyEval_EvalFrameDefault+8317>
0x000000000057a8e7 <+8239>:	movzbl 0xc0(%rsp),%eax
0x000000000057a8ef <+8247>:	lea    -0x1(%rax),%edx
0x000000000057a8f2 <+8250>:	cmp    $0xfd,%dl
0x000000000057a8f5 <+8253>:	jbe    0x57a945 <_PyEval_EvalFrameDefault+8333>
0x000000000057a8f7 <+8255>:	cmpw   $0x0,0x544b4d(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a8ff <+8263>:	jne    0x57a95e <_PyEval_EvalFrameDefault+8358>
0x000000000057a901 <+8265>:	mov    $0x0,%edx
0x000000000057a906 <+8270>:	or     %edx,%eax
0x000000000057a908 <+8272>:	or     %eax,%r12d
0x000000000057a90b <+8275>:	movzbl %r12b,%eax
0x000000000057a90f <+8279>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a917 <+8287>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a91c <+8292>:	mov    $0x7444e0,%ecx
0x000000000057a921 <+8297>:	mov    $0x856,%edx
0x000000000057a926 <+8302>:	mov    $0x74045c,%esi
0x000000000057a92b <+8307>:	mov    $0x7408da,%edi
0x000000000057a930 <+8312>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a935 <+8317>:	mov    %r13,%rdx
0x000000000057a938 <+8320>:	mov    %rbx,%rsi
0x000000000057a93b <+8323>:	mov    %rbp,%rdi
0x000000000057a93e <+8326>:	call   0x573f7b <lltrace_instruction>
0x000000000057a943 <+8331>:	jmp    0x57a8e7 <_PyEval_EvalFrameDefault+8239>
0x000000000057a945 <+8333>:	mov    $0x7444e0,%ecx
0x000000000057a94a <+8338>:	mov    $0x85f,%edx
0x000000000057a94f <+8343>:	mov    $0x74045c,%esi
0x000000000057a954 <+8348>:	mov    $0x742a50,%edi
0x000000000057a959 <+8353>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057a95e <+8358>:	mov    $0xffffffff,%edx
0x000000000057a963 <+8363>:	jmp    0x57a906 <_PyEval_EvalFrameDefault+8270>
0x000000000057a965 <+8365>:	lea    0x2(%r13),%r15
0x000000000057a969 <+8369>:	mov    %r13,0x38(%rbp)
0x000000000057a96d <+8373>:	movzwl 0x2(%r13),%eax
0x000000000057a972 <+8378>:	cmp    $0xf,%ax
0x000000000057a976 <+8382>:	jbe    0x57a985 <_PyEval_EvalFrameDefault+8397>
0x000000000057a978 <+8384>:	sub    $0x10,%eax
0x000000000057a97b <+8387>:	mov    %ax,0x2(%r13)
0x000000000057a980 <+8392>:	jmp    0x57a860 <_PyEval_EvalFrameDefault+8104>
0x000000000057a985 <+8397>:	mov    -0x8(%rbx),%rsi
0x000000000057a989 <+8401>:	mov    -0x10(%rbx),%rdi
0x000000000057a98d <+8405>:	mov    %r13,%rdx
0x000000000057a990 <+8408>:	call   0x5cff78 <_Py_Specialize_BinarySubscr>
0x000000000057a995 <+8413>:	test   %eax,%eax
0x000000000057a997 <+8415>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057a99d <+8421>:	movzwl 0x0(%r13),%r14d
0x000000000057a9a2 <+8426>:	cmpl   $0x0,0x14(%rsp)
0x000000000057a9a7 <+8431>:	jne    0x57a9d8 <_PyEval_EvalFrameDefault+8480>
0x000000000057a9a9 <+8433>:	movzbl 0xc0(%rsp),%r12d
0x000000000057a9b2 <+8442>:	cmpw   $0x0,0x544a92(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057a9ba <+8450>:	jne    0x57a9e8 <_PyEval_EvalFrameDefault+8496>
0x000000000057a9bc <+8452>:	mov    $0x0,%eax
0x000000000057a9c1 <+8457>:	or     %eax,%r12d
0x000000000057a9c4 <+8460>:	or     %r14d,%r12d
0x000000000057a9c7 <+8463>:	movzbl %r12b,%eax
0x000000000057a9cb <+8467>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057a9d3 <+8475>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057a9d8 <+8480>:	mov    %r13,%rdx
0x000000000057a9db <+8483>:	mov    %rbx,%rsi
0x000000000057a9de <+8486>:	mov    %rbp,%rdi
0x000000000057a9e1 <+8489>:	call   0x573f7b <lltrace_instruction>
0x000000000057a9e6 <+8494>:	jmp    0x57a9a9 <_PyEval_EvalFrameDefault+8433>
0x000000000057a9e8 <+8496>:	mov    $0xffffffff,%eax
0x000000000057a9ed <+8501>:	jmp    0x57a9c1 <_PyEval_EvalFrameDefault+8457>
0x000000000057a9ef <+8503>:	lea    0x2(%r13),%r15
0x000000000057a9f3 <+8507>:	mov    %r13,0x38(%rbp)
0x000000000057a9f7 <+8511>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057a9ff <+8519>:	jne    0x57ab61 <_PyEval_EvalFrameDefault+8873>
0x000000000057aa05 <+8525>:	mov    -0x8(%rbx),%r14
0x000000000057aa09 <+8529>:	mov    -0x10(%rbx),%rax
0x000000000057aa0d <+8533>:	mov    %rax,0x48(%rsp)
0x000000000057aa12 <+8538>:	cmpq   $0x992c20,0x8(%r14)
0x000000000057aa1a <+8546>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057aa20 <+8552>:	mov    0x8(%rax),%rax
0x000000000057aa24 <+8556>:	mov    %rax,0x58(%rsp)
0x000000000057aa29 <+8561>:	cmp    $0x9926c0,%rax
0x000000000057aa2f <+8567>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057aa35 <+8573>:	cmpq   $0x1,0x10(%r14)
0x000000000057aa3a <+8578>:	ja     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057aa40 <+8584>:	cmpl   $0x0,0x51c239(%rip)        # 0xa96c80 <_PyRuntime+864>
0x000000000057aa47 <+8591>:	jne    0x57ab7a <_PyEval_EvalFrameDefault+8898>
0x000000000057aa4d <+8597>:	mov    0x18(%r14),%eax
0x000000000057aa51 <+8601>:	mov    %eax,0x50(%rsp)
0x000000000057aa55 <+8605>:	mov    %eax,%eax
0x000000000057aa57 <+8607>:	mov    %rax,0x60(%rsp)
0x000000000057aa5c <+8612>:	mov    0x48(%rsp),%rdi
0x000000000057aa61 <+8617>:	call   0x572fd1 <PyList_GET_SIZE>
0x000000000057aa66 <+8622>:	mov    0x60(%rsp),%rcx
0x000000000057aa6b <+8627>:	cmp    %rcx,%rax
0x000000000057aa6e <+8630>:	jle    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057aa74 <+8636>:	mov    0x58(%rsp),%rax
0x000000000057aa79 <+8641>:	testb  $0x2,0xab(%rax)
0x000000000057aa80 <+8648>:	je     0x57ab93 <_PyEval_EvalFrameDefault+8923>
0x000000000057aa86 <+8654>:	mov    0x50(%rsp),%eax
0x000000000057aa8a <+8658>:	shl    $0x3,%rax
0x000000000057aa8e <+8662>:	mov    0x48(%rsp),%rcx
0x000000000057aa93 <+8667>:	add    0x18(%rcx),%rax
0x000000000057aa97 <+8671>:	mov    (%rax),%r12
0x000000000057aa9a <+8674>:	test   %r12,%r12
0x000000000057aa9d <+8677>:	je     0x57abac <_PyEval_EvalFrameDefault+8948>
0x000000000057aaa3 <+8683>:	addq   $0x1,0x548fdd(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057aaab <+8691>:	mov    (%r12),%rax
0x000000000057aaaf <+8695>:	add    $0x1,%rax
0x000000000057aab3 <+8699>:	mov    %rax,(%r12)
0x000000000057aab7 <+8703>:	mov    0x20(%rbp),%rax
0x000000000057aabb <+8707>:	movslq 0x4c(%rax),%rax
0x000000000057aabf <+8711>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057aac4 <+8716>:	mov    %rbx,%rax
0x000000000057aac7 <+8719>:	sub    %rdx,%rax
0x000000000057aaca <+8722>:	sar    $0x3,%rax
0x000000000057aace <+8726>:	test   %eax,%eax
0x000000000057aad0 <+8728>:	jle    0x57abc5 <_PyEval_EvalFrameDefault+8973>
0x000000000057aad6 <+8734>:	sub    $0x8,%rbx
0x000000000057aada <+8738>:	mov    $0x4f477b,%esi
0x000000000057aadf <+8743>:	mov    %r14,%rdi
0x000000000057aae2 <+8746>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057aae7 <+8751>:	mov    %r12,-0x8(%rbx)
0x000000000057aaeb <+8755>:	mov    0x48(%rsp),%rdx
0x000000000057aaf0 <+8760>:	mov    $0x889,%esi
0x000000000057aaf5 <+8765>:	mov    $0x74045c,%edi
0x000000000057aafa <+8770>:	call   0x573c83 <Py_DECREF>
0x000000000057aaff <+8775>:	lea    0xa(%r13),%r14
0x000000000057ab03 <+8779>:	movzwl 0xa(%r13),%r12d
0x000000000057ab08 <+8784>:	mov    %r12d,%eax
0x000000000057ab0b <+8787>:	shr    $0x8,%ax
0x000000000057ab0f <+8791>:	movzwl %ax,%eax
0x000000000057ab12 <+8794>:	mov    %eax,0x8(%rsp)
0x000000000057ab16 <+8798>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ab1b <+8803>:	jne    0x57abde <_PyEval_EvalFrameDefault+8998>
0x000000000057ab21 <+8809>:	movzbl 0xc0(%rsp),%eax
0x000000000057ab29 <+8817>:	lea    -0x1(%rax),%edx
0x000000000057ab2c <+8820>:	cmp    $0xfd,%dl
0x000000000057ab2f <+8823>:	jbe    0x57abf1 <_PyEval_EvalFrameDefault+9017>
0x000000000057ab35 <+8829>:	cmpw   $0x0,0x54490f(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ab3d <+8837>:	jne    0x57ac0a <_PyEval_EvalFrameDefault+9042>
0x000000000057ab43 <+8843>:	mov    $0x0,%edx
0x000000000057ab48 <+8848>:	or     %edx,%eax
0x000000000057ab4a <+8850>:	or     %eax,%r12d
0x000000000057ab4d <+8853>:	movzbl %r12b,%eax
0x000000000057ab51 <+8857>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ab59 <+8865>:	mov    %r14,%r13
0x000000000057ab5c <+8868>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057ab61 <+8873>:	mov    $0x7444e0,%ecx
0x000000000057ab66 <+8878>:	mov    $0x876,%edx
0x000000000057ab6b <+8883>:	mov    $0x74045c,%esi
0x000000000057ab70 <+8888>:	mov    $0x7408ff,%edi
0x000000000057ab75 <+8893>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ab7a <+8898>:	mov    $0x7444e0,%ecx
0x000000000057ab7f <+8903>:	mov    $0x87f,%edx
0x000000000057ab84 <+8908>:	mov    $0x74045c,%esi
0x000000000057ab89 <+8913>:	mov    $0x742ae0,%edi
0x000000000057ab8e <+8918>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ab93 <+8923>:	mov    $0x7444e0,%ecx
0x000000000057ab98 <+8928>:	mov    $0x883,%edx
0x000000000057ab9d <+8933>:	mov    $0x74045c,%esi
0x000000000057aba2 <+8938>:	mov    $0x6f20a8,%edi
0x000000000057aba7 <+8943>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057abac <+8948>:	mov    $0x7444e0,%ecx
0x000000000057abb1 <+8953>:	mov    $0x884,%edx
0x000000000057abb6 <+8958>:	mov    $0x74045c,%esi
0x000000000057abbb <+8963>:	mov    $0x74093f,%edi
0x000000000057abc0 <+8968>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057abc5 <+8973>:	mov    $0x7444e0,%ecx
0x000000000057abca <+8978>:	mov    $0x886,%edx
0x000000000057abcf <+8983>:	mov    $0x74045c,%esi
0x000000000057abd4 <+8988>:	mov    $0x7408ec,%edi
0x000000000057abd9 <+8993>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057abde <+8998>:	mov    %r14,%rdx
0x000000000057abe1 <+9001>:	mov    %rbx,%rsi
0x000000000057abe4 <+9004>:	mov    %rbp,%rdi
0x000000000057abe7 <+9007>:	call   0x573f7b <lltrace_instruction>
0x000000000057abec <+9012>:	jmp    0x57ab21 <_PyEval_EvalFrameDefault+8809>
0x000000000057abf1 <+9017>:	mov    $0x7444e0,%ecx
0x000000000057abf6 <+9022>:	mov    $0x88b,%edx
0x000000000057abfb <+9027>:	mov    $0x74045c,%esi
0x000000000057ac00 <+9032>:	mov    $0x742a50,%edi
0x000000000057ac05 <+9037>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ac0a <+9042>:	mov    $0xffffffff,%edx
0x000000000057ac0f <+9047>:	jmp    0x57ab48 <_PyEval_EvalFrameDefault+8848>
0x000000000057ac14 <+9052>:	lea    0x2(%r13),%r15
0x000000000057ac18 <+9056>:	mov    %r13,0x38(%rbp)
0x000000000057ac1c <+9060>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057ac24 <+9068>:	jne    0x57ad7b <_PyEval_EvalFrameDefault+9411>
0x000000000057ac2a <+9074>:	mov    -0x8(%rbx),%r14
0x000000000057ac2e <+9078>:	mov    -0x10(%rbx),%rax
0x000000000057ac32 <+9082>:	mov    %rax,0x48(%rsp)
0x000000000057ac37 <+9087>:	cmpq   $0x992c20,0x8(%r14)
0x000000000057ac3f <+9095>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057ac45 <+9101>:	mov    0x8(%rax),%rax
0x000000000057ac49 <+9105>:	mov    %rax,0x58(%rsp)
0x000000000057ac4e <+9110>:	cmp    $0x999820,%rax
0x000000000057ac54 <+9116>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057ac5a <+9122>:	cmpq   $0x1,0x10(%r14)
0x000000000057ac5f <+9127>:	ja     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057ac65 <+9133>:	cmpl   $0x0,0x51c014(%rip)        # 0xa96c80 <_PyRuntime+864>
0x000000000057ac6c <+9140>:	jne    0x57ad94 <_PyEval_EvalFrameDefault+9436>
0x000000000057ac72 <+9146>:	mov    0x18(%r14),%eax
0x000000000057ac76 <+9150>:	mov    %rax,0x50(%rsp)
0x000000000057ac7b <+9155>:	mov    0x48(%rsp),%rdi
0x000000000057ac80 <+9160>:	call   0x573476 <PyTuple_GET_SIZE>
0x000000000057ac85 <+9165>:	mov    0x50(%rsp),%rcx
0x000000000057ac8a <+9170>:	cmp    %rcx,%rax
0x000000000057ac8d <+9173>:	jle    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057ac93 <+9179>:	mov    0x58(%rsp),%rax
0x000000000057ac98 <+9184>:	testb  $0x4,0xab(%rax)
0x000000000057ac9f <+9191>:	je     0x57adad <_PyEval_EvalFrameDefault+9461>
0x000000000057aca5 <+9197>:	mov    0x48(%rsp),%rax
0x000000000057acaa <+9202>:	mov    0x50(%rsp),%rcx
0x000000000057acaf <+9207>:	mov    0x18(%rax,%rcx,8),%r12
0x000000000057acb4 <+9212>:	test   %r12,%r12
0x000000000057acb7 <+9215>:	je     0x57adc6 <_PyEval_EvalFrameDefault+9486>
0x000000000057acbd <+9221>:	addq   $0x1,0x548dc3(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057acc5 <+9229>:	mov    (%r12),%rax
0x000000000057acc9 <+9233>:	add    $0x1,%rax
0x000000000057accd <+9237>:	mov    %rax,(%r12)
0x000000000057acd1 <+9241>:	mov    0x20(%rbp),%rax
0x000000000057acd5 <+9245>:	movslq 0x4c(%rax),%rax
0x000000000057acd9 <+9249>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057acde <+9254>:	mov    %rbx,%rax
0x000000000057ace1 <+9257>:	sub    %rdx,%rax
0x000000000057ace4 <+9260>:	sar    $0x3,%rax
0x000000000057ace8 <+9264>:	test   %eax,%eax
0x000000000057acea <+9266>:	jle    0x57addf <_PyEval_EvalFrameDefault+9511>
0x000000000057acf0 <+9272>:	sub    $0x8,%rbx
0x000000000057acf4 <+9276>:	mov    $0x4f477b,%esi
0x000000000057acf9 <+9281>:	mov    %r14,%rdi
0x000000000057acfc <+9284>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057ad01 <+9289>:	mov    %r12,-0x8(%rbx)
0x000000000057ad05 <+9293>:	mov    0x48(%rsp),%rdx
0x000000000057ad0a <+9298>:	mov    $0x8a2,%esi
0x000000000057ad0f <+9303>:	mov    $0x74045c,%edi
0x000000000057ad14 <+9308>:	call   0x573c83 <Py_DECREF>
0x000000000057ad19 <+9313>:	lea    0xa(%r13),%r14
0x000000000057ad1d <+9317>:	movzwl 0xa(%r13),%r12d
0x000000000057ad22 <+9322>:	mov    %r12d,%eax
0x000000000057ad25 <+9325>:	shr    $0x8,%ax
0x000000000057ad29 <+9329>:	movzwl %ax,%eax
0x000000000057ad2c <+9332>:	mov    %eax,0x8(%rsp)
0x000000000057ad30 <+9336>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ad35 <+9341>:	jne    0x57adf8 <_PyEval_EvalFrameDefault+9536>
0x000000000057ad3b <+9347>:	movzbl 0xc0(%rsp),%eax
0x000000000057ad43 <+9355>:	lea    -0x1(%rax),%edx
0x000000000057ad46 <+9358>:	cmp    $0xfd,%dl
0x000000000057ad49 <+9361>:	jbe    0x57ae0b <_PyEval_EvalFrameDefault+9555>
0x000000000057ad4f <+9367>:	cmpw   $0x0,0x5446f5(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ad57 <+9375>:	jne    0x57ae24 <_PyEval_EvalFrameDefault+9580>
0x000000000057ad5d <+9381>:	mov    $0x0,%edx
0x000000000057ad62 <+9386>:	or     %edx,%eax
0x000000000057ad64 <+9388>:	or     %eax,%r12d
0x000000000057ad67 <+9391>:	movzbl %r12b,%eax
0x000000000057ad6b <+9395>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ad73 <+9403>:	mov    %r14,%r13
0x000000000057ad76 <+9406>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057ad7b <+9411>:	mov    $0x7444e0,%ecx
0x000000000057ad80 <+9416>:	mov    $0x88f,%edx
0x000000000057ad85 <+9421>:	mov    $0x74045c,%esi
0x000000000057ad8a <+9426>:	mov    $0x7408ff,%edi
0x000000000057ad8f <+9431>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ad94 <+9436>:	mov    $0x7444e0,%ecx
0x000000000057ad99 <+9441>:	mov    $0x898,%edx
0x000000000057ad9e <+9446>:	mov    $0x74045c,%esi
0x000000000057ada3 <+9451>:	mov    $0x742ae0,%edi
0x000000000057ada8 <+9456>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057adad <+9461>:	mov    $0x7444e0,%ecx
0x000000000057adb2 <+9466>:	mov    $0x89c,%edx
0x000000000057adb7 <+9471>:	mov    $0x74045c,%esi
0x000000000057adbc <+9476>:	mov    $0x6dba26,%edi
0x000000000057adc1 <+9481>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057adc6 <+9486>:	mov    $0x7444e0,%ecx
0x000000000057adcb <+9491>:	mov    $0x89d,%edx
0x000000000057add0 <+9496>:	mov    $0x74045c,%esi
0x000000000057add5 <+9501>:	mov    $0x74093f,%edi
0x000000000057adda <+9506>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057addf <+9511>:	mov    $0x7444e0,%ecx
0x000000000057ade4 <+9516>:	mov    $0x89f,%edx
0x000000000057ade9 <+9521>:	mov    $0x74045c,%esi
0x000000000057adee <+9526>:	mov    $0x7408ec,%edi
0x000000000057adf3 <+9531>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057adf8 <+9536>:	mov    %r14,%rdx
0x000000000057adfb <+9539>:	mov    %rbx,%rsi
0x000000000057adfe <+9542>:	mov    %rbp,%rdi
0x000000000057ae01 <+9545>:	call   0x573f7b <lltrace_instruction>
0x000000000057ae06 <+9550>:	jmp    0x57ad3b <_PyEval_EvalFrameDefault+9347>
0x000000000057ae0b <+9555>:	mov    $0x7444e0,%ecx
0x000000000057ae10 <+9560>:	mov    $0x8a4,%edx
0x000000000057ae15 <+9565>:	mov    $0x74045c,%esi
0x000000000057ae1a <+9570>:	mov    $0x742a50,%edi
0x000000000057ae1f <+9575>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ae24 <+9580>:	mov    $0xffffffff,%edx
0x000000000057ae29 <+9585>:	jmp    0x57ad62 <_PyEval_EvalFrameDefault+9386>
0x000000000057ae2e <+9590>:	lea    0x2(%r13),%r15
0x000000000057ae32 <+9594>:	mov    %r13,0x38(%rbp)
0x000000000057ae36 <+9598>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057ae3e <+9606>:	jne    0x57af38 <_PyEval_EvalFrameDefault+9856>
0x000000000057ae44 <+9612>:	mov    -0x10(%rbx),%r14
0x000000000057ae48 <+9616>:	cmpq   $0x994540,0x8(%r14)
0x000000000057ae50 <+9624>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057ae56 <+9630>:	mov    -0x8(%rbx),%rax
0x000000000057ae5a <+9634>:	mov    %rax,0x8(%rsp)
0x000000000057ae5f <+9639>:	mov    %rax,%rsi
0x000000000057ae62 <+9642>:	mov    %r14,%rdi
0x000000000057ae65 <+9645>:	call   0x4e0de6 <PyDict_GetItemWithError>
0x000000000057ae6a <+9650>:	mov    %rax,%r12
0x000000000057ae6d <+9653>:	test   %rax,%rax
0x000000000057ae70 <+9656>:	je     0x57af51 <_PyEval_EvalFrameDefault+9881>
0x000000000057ae76 <+9662>:	addq   $0x1,0x548c0a(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ae7e <+9670>:	mov    (%rax),%rax
0x000000000057ae81 <+9673>:	add    $0x1,%rax
0x000000000057ae85 <+9677>:	mov    %rax,(%r12)
0x000000000057ae89 <+9681>:	mov    0x20(%rbp),%rax
0x000000000057ae8d <+9685>:	movslq 0x4c(%rax),%rax
0x000000000057ae91 <+9689>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057ae96 <+9694>:	mov    %rbx,%rax
0x000000000057ae99 <+9697>:	sub    %rdx,%rax
0x000000000057ae9c <+9700>:	sar    $0x3,%rax
0x000000000057aea0 <+9704>:	test   %eax,%eax
0x000000000057aea2 <+9706>:	jle    0x57afa5 <_PyEval_EvalFrameDefault+9965>
0x000000000057aea8 <+9712>:	sub    $0x8,%rbx
0x000000000057aeac <+9716>:	mov    0x8(%rsp),%rdx
0x000000000057aeb1 <+9721>:	mov    $0x8b3,%esi
0x000000000057aeb6 <+9726>:	mov    $0x74045c,%edi
0x000000000057aebb <+9731>:	call   0x573c83 <Py_DECREF>
0x000000000057aec0 <+9736>:	mov    %r12,-0x8(%rbx)
0x000000000057aec4 <+9740>:	mov    %r14,%rdx
0x000000000057aec7 <+9743>:	mov    $0x8b5,%esi
0x000000000057aecc <+9748>:	mov    $0x74045c,%edi
0x000000000057aed1 <+9753>:	call   0x573c83 <Py_DECREF>
0x000000000057aed6 <+9758>:	lea    0xa(%r13),%r14
0x000000000057aeda <+9762>:	movzwl 0xa(%r13),%r12d
0x000000000057aedf <+9767>:	mov    %r12d,%eax
0x000000000057aee2 <+9770>:	shr    $0x8,%ax
0x000000000057aee6 <+9774>:	movzwl %ax,%eax
0x000000000057aee9 <+9777>:	mov    %eax,0x8(%rsp)
0x000000000057aeed <+9781>:	cmpl   $0x0,0x14(%rsp)
0x000000000057aef2 <+9786>:	jne    0x57afbe <_PyEval_EvalFrameDefault+9990>
0x000000000057aef8 <+9792>:	movzbl 0xc0(%rsp),%eax
0x000000000057af00 <+9800>:	lea    -0x1(%rax),%edx
0x000000000057af03 <+9803>:	cmp    $0xfd,%dl
0x000000000057af06 <+9806>:	jbe    0x57afd1 <_PyEval_EvalFrameDefault+10009>
0x000000000057af0c <+9812>:	cmpw   $0x0,0x544538(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057af14 <+9820>:	jne    0x57afea <_PyEval_EvalFrameDefault+10034>
0x000000000057af1a <+9826>:	mov    $0x0,%edx
0x000000000057af1f <+9831>:	or     %edx,%eax
0x000000000057af21 <+9833>:	or     %eax,%r12d
0x000000000057af24 <+9836>:	movzbl %r12b,%eax
0x000000000057af28 <+9840>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057af30 <+9848>:	mov    %r14,%r13
0x000000000057af33 <+9851>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057af38 <+9856>:	mov    $0x7444e0,%ecx
0x000000000057af3d <+9861>:	mov    $0x8a8,%edx
0x000000000057af42 <+9866>:	mov    $0x74045c,%esi
0x000000000057af47 <+9871>:	mov    $0x7408ff,%edi
0x000000000057af4c <+9876>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057af51 <+9881>:	mov    0x20(%rbp),%rax
0x000000000057af55 <+9885>:	movslq 0x4c(%rax),%rax
0x000000000057af59 <+9889>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057af5e <+9894>:	mov    %rbx,%rax
0x000000000057af61 <+9897>:	sub    %rdx,%rax
0x000000000057af64 <+9900>:	sar    $0x3,%rax
0x000000000057af68 <+9904>:	test   %eax,%eax
0x000000000057af6a <+9906>:	jle    0x589b20 <_PyEval_EvalFrameDefault+70248>
0x000000000057af70 <+9912>:	lea    -0x8(%rbx),%r12
0x000000000057af74 <+9916>:	mov    -0x8(%rbx),%rbx
0x000000000057af78 <+9920>:	mov    0x18(%rsp),%rdi
0x000000000057af7d <+9925>:	call   0x573630 <_PyErr_Occurred>
0x000000000057af82 <+9930>:	test   %rax,%rax
0x000000000057af85 <+9933>:	je     0x589b39 <_PyEval_EvalFrameDefault+70273>
0x000000000057af8b <+9939>:	mov    %rbx,%rdx
0x000000000057af8e <+9942>:	mov    $0x165e,%esi
0x000000000057af93 <+9947>:	mov    $0x74045c,%edi
0x000000000057af98 <+9952>:	call   0x573c83 <Py_DECREF>
0x000000000057af9d <+9957>:	mov    %r12,%rbx
0x000000000057afa0 <+9960>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057afa5 <+9965>:	mov    $0x7444e0,%ecx
0x000000000057afaa <+9970>:	mov    $0x8b2,%edx
0x000000000057afaf <+9975>:	mov    $0x74045c,%esi
0x000000000057afb4 <+9980>:	mov    $0x7408ec,%edi
0x000000000057afb9 <+9985>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057afbe <+9990>:	mov    %r14,%rdx
0x000000000057afc1 <+9993>:	mov    %rbx,%rsi
0x000000000057afc4 <+9996>:	mov    %rbp,%rdi
0x000000000057afc7 <+9999>:	call   0x573f7b <lltrace_instruction>
0x000000000057afcc <+10004>:	jmp    0x57aef8 <_PyEval_EvalFrameDefault+9792>
0x000000000057afd1 <+10009>:	mov    $0x7444e0,%ecx
0x000000000057afd6 <+10014>:	mov    $0x8b7,%edx
0x000000000057afdb <+10019>:	mov    $0x74045c,%esi
0x000000000057afe0 <+10024>:	mov    $0x742a50,%edi
0x000000000057afe5 <+10029>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057afea <+10034>:	mov    $0xffffffff,%edx
0x000000000057afef <+10039>:	jmp    0x57af1f <_PyEval_EvalFrameDefault+9831>
0x000000000057aff4 <+10044>:	lea    0x2(%r13),%r15
0x000000000057aff8 <+10048>:	mov    %r13,0x38(%rbp)
0x000000000057affc <+10052>:	mov    -0x8(%rbx),%rax
0x000000000057b000 <+10056>:	mov    %rax,0x50(%rsp)
0x000000000057b005 <+10061>:	mov    -0x10(%rbx),%rcx
0x000000000057b009 <+10065>:	mov    %rcx,0x58(%rsp)
0x000000000057b00e <+10070>:	movzwl 0x4(%r13),%edx
0x000000000057b013 <+10075>:	movzwl 0x6(%r13),%eax
0x000000000057b018 <+10080>:	shl    $0x10,%eax
0x000000000057b01b <+10083>:	or     %eax,%edx
0x000000000057b01d <+10085>:	mov    0x8(%rcx),%rax
0x000000000057b021 <+10089>:	cmp    %edx,0x180(%rax)
0x000000000057b027 <+10095>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b02d <+10101>:	testb  $0x2,0xa9(%rax)
0x000000000057b034 <+10108>:	je     0x57b10e <_PyEval_EvalFrameDefault+10326>
0x000000000057b03a <+10114>:	mov    0x380(%rax),%rax
0x000000000057b041 <+10121>:	mov    %rax,0x48(%rsp)
0x000000000057b046 <+10126>:	cmpq   $0x991540,0x8(%rax)
0x000000000057b04e <+10134>:	jne    0x57b127 <_PyEval_EvalFrameDefault+10351>
0x000000000057b054 <+10140>:	movzwl 0x8(%r13),%eax
0x000000000057b059 <+10145>:	mov    0x48(%rsp),%rcx
0x000000000057b05e <+10150>:	cmp    %eax,0x80(%rcx)
0x000000000057b064 <+10156>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b06a <+10162>:	mov    0x30(%rcx),%r14
0x000000000057b06e <+10166>:	mov    0x44(%r14),%esi
0x000000000057b072 <+10170>:	add    0x4c(%r14),%esi
0x000000000057b076 <+10174>:	movslq %esi,%rsi
0x000000000057b079 <+10177>:	add    $0x9,%rsi
0x000000000057b07d <+10181>:	mov    0x38(%r14),%eax
0x000000000057b081 <+10185>:	mov    %eax,0x8(%rsp)
0x000000000057b085 <+10189>:	cmp    $0x2,%eax
0x000000000057b088 <+10192>:	jne    0x57b140 <_PyEval_EvalFrameDefault+10376>
0x000000000057b08e <+10198>:	mov    0x18(%rsp),%rdi
0x000000000057b093 <+10203>:	call   0x57401a <_PyThreadState_BumpFramePointer>
0x000000000057b098 <+10208>:	mov    %rax,%r12
0x000000000057b09b <+10211>:	test   %rax,%rax
0x000000000057b09e <+10214>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b0a4 <+10220>:	addq   $0x1,0x5489dc(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057b0ac <+10228>:	mov    0x48(%rsp),%rsi
0x000000000057b0b1 <+10233>:	mov    (%rsi),%rax
0x000000000057b0b4 <+10236>:	mov    %rax,0x30(%rsp)
0x000000000057b0b9 <+10241>:	add    $0x1,%rax
0x000000000057b0bd <+10245>:	mov    %rax,(%rsi)
0x000000000057b0c0 <+10248>:	mov    0x4c(%r14),%ecx
0x000000000057b0c4 <+10252>:	mov    $0x0,%edx
0x000000000057b0c9 <+10257>:	mov    %r12,%rdi
0x000000000057b0cc <+10260>:	call   0x572dd3 <_PyFrame_InitializeSpecials>
0x000000000057b0d1 <+10265>:	lea    0x48(%rbp),%rdx
0x000000000057b0d5 <+10269>:	mov    0x20(%rbp),%rax
0x000000000057b0d9 <+10273>:	movslq 0x4c(%rax),%rax
0x000000000057b0dd <+10277>:	lea    (%rdx,%rax,8),%rcx
0x000000000057b0e1 <+10281>:	mov    %rbx,%rax
0x000000000057b0e4 <+10284>:	sub    %rcx,%rax
0x000000000057b0e7 <+10287>:	sar    $0x3,%rax
0x000000000057b0eb <+10291>:	cmp    $0x1,%eax
0x000000000057b0ee <+10294>:	jle    0x57b159 <_PyEval_EvalFrameDefault+10401>
0x000000000057b0f0 <+10296>:	lea    -0x10(%rbx),%rax
0x000000000057b0f4 <+10300>:	mov    0x58(%rsp),%rcx
0x000000000057b0f9 <+10305>:	mov    %rcx,0x48(%r12)
0x000000000057b0fe <+10310>:	mov    0x50(%rsp),%rcx
0x000000000057b103 <+10315>:	mov    %rcx,0x50(%r12)
0x000000000057b108 <+10320>:	mov    0x8(%rsp),%ecx
0x000000000057b10c <+10324>:	jmp    0x57b181 <_PyEval_EvalFrameDefault+10441>
0x000000000057b10e <+10326>:	mov    $0x7444e0,%ecx
0x000000000057b113 <+10331>:	mov    $0x8c1,%edx
0x000000000057b118 <+10336>:	mov    $0x74045c,%esi
0x000000000057b11d <+10341>:	mov    $0x6ebf70,%edi
0x000000000057b122 <+10346>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b127 <+10351>:	mov    $0x7444e0,%ecx
0x000000000057b12c <+10356>:	mov    $0x8c3,%edx
0x000000000057b131 <+10361>:	mov    $0x74045c,%esi
0x000000000057b136 <+10366>:	mov    $0x74094b,%edi
0x000000000057b13b <+10371>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b140 <+10376>:	mov    $0x7444e0,%ecx
0x000000000057b145 <+10381>:	mov    $0x8c8,%edx
0x000000000057b14a <+10386>:	mov    $0x74045c,%esi
0x000000000057b14f <+10391>:	mov    $0x740964,%edi
0x000000000057b154 <+10396>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b159 <+10401>:	mov    $0x7444e0,%ecx
0x000000000057b15e <+10406>:	mov    $0x8d1,%edx
0x000000000057b163 <+10411>:	mov    $0x74045c,%esi
0x000000000057b168 <+10416>:	mov    $0x74092c,%edi
0x000000000057b16d <+10421>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b172 <+10426>:	movslq %ecx,%rsi
0x000000000057b175 <+10429>:	movq   $0x0,0x48(%r12,%rsi,8)
0x000000000057b17e <+10438>:	add    $0x1,%ecx
0x000000000057b181 <+10441>:	cmp    %ecx,0x4c(%r14)
0x000000000057b185 <+10445>:	jg     0x57b172 <_PyEval_EvalFrameDefault+10426>
0x000000000057b187 <+10447>:	sub    %rdx,%rax
0x000000000057b18a <+10450>:	sar    $0x3,%rax
0x000000000057b18e <+10454>:	mov    %eax,0x40(%rbp)
0x000000000057b191 <+10457>:	add    $0x8,%r13
0x000000000057b195 <+10461>:	mov    %r13,0x38(%rbp)
0x000000000057b199 <+10465>:	mov    %rbp,0x30(%r12)
0x000000000057b19e <+10470>:	mov    %r12,0xc8(%rsp)
0x000000000057b1a6 <+10478>:	mov    0x14(%rsp),%r14d
0x000000000057b1ab <+10483>:	mov    %r12,%rbp
0x000000000057b1ae <+10486>:	mov    $0x6e51db,%esi
0x000000000057b1b3 <+10491>:	mov    0x18(%rsp),%rdi
0x000000000057b1b8 <+10496>:	call   0x577d9b <_Py_EnterRecursiveCallTstate>
0x000000000057b1bd <+10501>:	test   %eax,%eax
0x000000000057b1bf <+10503>:	jne    0x578a67 <_PyEval_EvalFrameDefault+431>
0x000000000057b1c5 <+10509>:	mov    0x20(%rbp),%rax
0x000000000057b1c9 <+10513>:	mov    0x20(%rax),%rcx
0x000000000057b1cd <+10517>:	mov    %rcx,0x30(%rsp)
0x000000000057b1d2 <+10522>:	mov    0x18(%rax),%rcx
0x000000000057b1d6 <+10526>:	mov    %rcx,0x40(%rsp)
0x000000000057b1db <+10531>:	add    $0xb8,%rax
0x000000000057b1e1 <+10537>:	mov    %rax,%rcx
0x000000000057b1e4 <+10540>:	mov    %rax,0x38(%rsp)
0x000000000057b1e9 <+10545>:	mov    0x38(%rbp),%r12
0x000000000057b1ed <+10549>:	mov    %r12,%rax
0x000000000057b1f0 <+10552>:	sub    %rcx,%rax
0x000000000057b1f3 <+10555>:	sar    %rax
0x000000000057b1f6 <+10558>:	cmp    $0xffffffff,%eax
0x000000000057b1f9 <+10561>:	jl     0x578af0 <_PyEval_EvalFrameDefault+568>
0x000000000057b1ff <+10567>:	lea    0x2(%r12),%r13
0x000000000057b204 <+10572>:	movslq 0x40(%rbp),%rax
0x000000000057b208 <+10576>:	lea    0x48(%rbp,%rax,8),%rbx
0x000000000057b20d <+10581>:	movl   $0xffffffff,0x40(%rbp)
0x000000000057b214 <+10588>:	mov    0x8(%rbp),%rdi
0x000000000057b218 <+10592>:	mov    $0xa9d680,%esi
0x000000000057b21d <+10597>:	call   0x4e03d1 <PyDict_Contains>
0x000000000057b222 <+10602>:	mov    %eax,0x14(%rsp)
0x000000000057b226 <+10606>:	test   %eax,%eax
0x000000000057b228 <+10608>:	js     0x589fe5 <_PyEval_EvalFrameDefault+71469>
0x000000000057b22e <+10614>:	jne    0x578b09 <_PyEval_EvalFrameDefault+593>
0x000000000057b234 <+10620>:	mov    0x18(%rsp),%rdi
0x000000000057b239 <+10625>:	call   0x573630 <_PyErr_Occurred>
0x000000000057b23e <+10630>:	test   %rax,%rax
0x000000000057b241 <+10633>:	jne    0x578b16 <_PyEval_EvalFrameDefault+606>
0x000000000057b247 <+10639>:	movzwl 0x2(%r12),%r14d
0x000000000057b24d <+10645>:	mov    %r14d,%eax
0x000000000057b250 <+10648>:	shr    $0x8,%ax
0x000000000057b254 <+10652>:	movzwl %ax,%eax
0x000000000057b257 <+10655>:	mov    %eax,0x8(%rsp)
0x000000000057b25b <+10659>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b260 <+10664>:	jne    0x578b2f <_PyEval_EvalFrameDefault+631>
0x000000000057b266 <+10670>:	movzbl 0xc0(%rsp),%r12d
0x000000000057b26f <+10679>:	lea    -0x1(%r12),%eax
0x000000000057b274 <+10684>:	cmp    $0xfd,%al
0x000000000057b276 <+10686>:	jbe    0x578b42 <_PyEval_EvalFrameDefault+650>
0x000000000057b27c <+10692>:	cmpw   $0x0,0x5441c8(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b284 <+10700>:	jne    0x578b5b <_PyEval_EvalFrameDefault+675>
0x000000000057b28a <+10706>:	mov    $0x0,%eax
0x000000000057b28f <+10711>:	or     %eax,%r12d
0x000000000057b292 <+10714>:	or     %r14d,%r12d
0x000000000057b295 <+10717>:	movzbl %r12b,%eax
0x000000000057b299 <+10721>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b2a1 <+10729>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b2a6 <+10734>:	lea    0x2(%r13),%r15
0x000000000057b2aa <+10738>:	mov    %r13,0x38(%rbp)
0x000000000057b2ae <+10742>:	mov    0x20(%rbp),%rax
0x000000000057b2b2 <+10746>:	movslq 0x4c(%rax),%rax
0x000000000057b2b6 <+10750>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057b2bb <+10755>:	mov    %rbx,%rax
0x000000000057b2be <+10758>:	sub    %rdx,%rax
0x000000000057b2c1 <+10761>:	sar    $0x3,%rax
0x000000000057b2c5 <+10765>:	test   %eax,%eax
0x000000000057b2c7 <+10767>:	jle    0x57b33a <_PyEval_EvalFrameDefault+10882>
0x000000000057b2c9 <+10769>:	sub    $0x8,%rbx
0x000000000057b2cd <+10773>:	mov    (%rbx),%rsi
0x000000000057b2d0 <+10776>:	mov    0x8(%rsp),%eax
0x000000000057b2d4 <+10780>:	neg    %eax
0x000000000057b2d6 <+10782>:	cltq
0x000000000057b2d8 <+10784>:	mov    (%rbx,%rax,8),%rdi
0x000000000057b2dc <+10788>:	call   0x5769f8 <_PyList_AppendTakeRef>
0x000000000057b2e1 <+10793>:	test   %eax,%eax
0x000000000057b2e3 <+10795>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b2e9 <+10801>:	movzwl (%r15),%r12d
0x000000000057b2ed <+10805>:	mov    %r12d,%eax
0x000000000057b2f0 <+10808>:	shr    $0x8,%ax
0x000000000057b2f4 <+10812>:	movzwl %ax,%eax
0x000000000057b2f7 <+10815>:	mov    %eax,0x8(%rsp)
0x000000000057b2fb <+10819>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b300 <+10824>:	jne    0x57b353 <_PyEval_EvalFrameDefault+10907>
0x000000000057b302 <+10826>:	movzbl 0xc0(%rsp),%eax
0x000000000057b30a <+10834>:	lea    -0x1(%rax),%edx
0x000000000057b30d <+10837>:	cmp    $0xfd,%dl
0x000000000057b310 <+10840>:	jbe    0x57b363 <_PyEval_EvalFrameDefault+10923>
0x000000000057b312 <+10842>:	cmpw   $0x0,0x544132(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b31a <+10850>:	jne    0x57b37c <_PyEval_EvalFrameDefault+10948>
0x000000000057b31c <+10852>:	mov    $0x0,%edx
0x000000000057b321 <+10857>:	or     %edx,%eax
0x000000000057b323 <+10859>:	or     %eax,%r12d
0x000000000057b326 <+10862>:	movzbl %r12b,%eax
0x000000000057b32a <+10866>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b332 <+10874>:	mov    %r15,%r13
0x000000000057b335 <+10877>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b33a <+10882>:	mov    $0x7444e0,%ecx
0x000000000057b33f <+10887>:	mov    $0x8e1,%edx
0x000000000057b344 <+10892>:	mov    $0x74045c,%esi
0x000000000057b349 <+10897>:	mov    $0x7408da,%edi
0x000000000057b34e <+10902>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b353 <+10907>:	mov    %r15,%rdx
0x000000000057b356 <+10910>:	mov    %rbx,%rsi
0x000000000057b359 <+10913>:	mov    %rbp,%rdi
0x000000000057b35c <+10916>:	call   0x573f7b <lltrace_instruction>
0x000000000057b361 <+10921>:	jmp    0x57b302 <_PyEval_EvalFrameDefault+10826>
0x000000000057b363 <+10923>:	mov    $0x7444e0,%ecx
0x000000000057b368 <+10928>:	mov    $0x8e6,%edx
0x000000000057b36d <+10933>:	mov    $0x74045c,%esi
0x000000000057b372 <+10938>:	mov    $0x742a50,%edi
0x000000000057b377 <+10943>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b37c <+10948>:	mov    $0xffffffff,%edx
0x000000000057b381 <+10953>:	jmp    0x57b321 <_PyEval_EvalFrameDefault+10857>
0x000000000057b383 <+10955>:	lea    0x2(%r13),%r15
0x000000000057b387 <+10959>:	mov    %r13,0x38(%rbp)
0x000000000057b38b <+10963>:	mov    0x20(%rbp),%rax
0x000000000057b38f <+10967>:	movslq 0x4c(%rax),%rax
0x000000000057b393 <+10971>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057b398 <+10976>:	mov    %rbx,%rax
0x000000000057b39b <+10979>:	sub    %rdx,%rax
0x000000000057b39e <+10982>:	sar    $0x3,%rax
0x000000000057b3a2 <+10986>:	test   %eax,%eax
0x000000000057b3a4 <+10988>:	jle    0x57b434 <_PyEval_EvalFrameDefault+11132>
0x000000000057b3aa <+10994>:	sub    $0x8,%rbx
0x000000000057b3ae <+10998>:	mov    (%rbx),%r12
0x000000000057b3b1 <+11001>:	mov    0x8(%rsp),%eax
0x000000000057b3b5 <+11005>:	neg    %eax
0x000000000057b3b7 <+11007>:	cltq
0x000000000057b3b9 <+11009>:	mov    (%rbx,%rax,8),%rdi
0x000000000057b3bd <+11013>:	mov    %r12,%rsi
0x000000000057b3c0 <+11016>:	call   0x4fba1d <PySet_Add>
0x000000000057b3c5 <+11021>:	mov    %eax,%r13d
0x000000000057b3c8 <+11024>:	mov    %r12,%rdx
0x000000000057b3cb <+11027>:	mov    $0x8ee,%esi
0x000000000057b3d0 <+11032>:	mov    $0x74045c,%edi
0x000000000057b3d5 <+11037>:	call   0x573c83 <Py_DECREF>
0x000000000057b3da <+11042>:	test   %r13d,%r13d
0x000000000057b3dd <+11045>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b3e3 <+11051>:	movzwl (%r15),%r12d
0x000000000057b3e7 <+11055>:	mov    %r12d,%eax
0x000000000057b3ea <+11058>:	shr    $0x8,%ax
0x000000000057b3ee <+11062>:	movzwl %ax,%eax
0x000000000057b3f1 <+11065>:	mov    %eax,0x8(%rsp)
0x000000000057b3f5 <+11069>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b3fa <+11074>:	jne    0x57b44d <_PyEval_EvalFrameDefault+11157>
0x000000000057b3fc <+11076>:	movzbl 0xc0(%rsp),%eax
0x000000000057b404 <+11084>:	lea    -0x1(%rax),%edx
0x000000000057b407 <+11087>:	cmp    $0xfd,%dl
0x000000000057b40a <+11090>:	jbe    0x57b45d <_PyEval_EvalFrameDefault+11173>
0x000000000057b40c <+11092>:	cmpw   $0x0,0x544038(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b414 <+11100>:	jne    0x57b476 <_PyEval_EvalFrameDefault+11198>
0x000000000057b416 <+11102>:	mov    $0x0,%edx
0x000000000057b41b <+11107>:	or     %edx,%eax
0x000000000057b41d <+11109>:	or     %eax,%r12d
0x000000000057b420 <+11112>:	movzbl %r12b,%eax
0x000000000057b424 <+11116>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b42c <+11124>:	mov    %r15,%r13
0x000000000057b42f <+11127>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b434 <+11132>:	mov    $0x7444e0,%ecx
0x000000000057b439 <+11137>:	mov    $0x8ea,%edx
0x000000000057b43e <+11142>:	mov    $0x74045c,%esi
0x000000000057b443 <+11147>:	mov    $0x7408da,%edi
0x000000000057b448 <+11152>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b44d <+11157>:	mov    %r15,%rdx
0x000000000057b450 <+11160>:	mov    %rbx,%rsi
0x000000000057b453 <+11163>:	mov    %rbp,%rdi
0x000000000057b456 <+11166>:	call   0x573f7b <lltrace_instruction>
0x000000000057b45b <+11171>:	jmp    0x57b3fc <_PyEval_EvalFrameDefault+11076>
0x000000000057b45d <+11173>:	mov    $0x7444e0,%ecx
0x000000000057b462 <+11178>:	mov    $0x8f2,%edx
0x000000000057b467 <+11183>:	mov    $0x74045c,%esi
0x000000000057b46c <+11188>:	mov    $0x742a50,%edi
0x000000000057b471 <+11193>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b476 <+11198>:	mov    $0xffffffff,%edx
0x000000000057b47b <+11203>:	jmp    0x57b41b <_PyEval_EvalFrameDefault+11107>
0x000000000057b47d <+11205>:	lea    0x2(%r13),%r15
0x000000000057b481 <+11209>:	mov    %r13,0x38(%rbp)
0x000000000057b485 <+11213>:	mov    -0x8(%rbx),%r13
0x000000000057b489 <+11217>:	mov    -0x10(%rbx),%r14
0x000000000057b48d <+11221>:	mov    -0x18(%rbx),%r12
0x000000000057b491 <+11225>:	mov    0x20(%rbp),%rax
0x000000000057b495 <+11229>:	movslq 0x4c(%rax),%rax
0x000000000057b499 <+11233>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057b49e <+11238>:	mov    %rbx,%rax
0x000000000057b4a1 <+11241>:	sub    %rdx,%rax
0x000000000057b4a4 <+11244>:	sar    $0x3,%rax
0x000000000057b4a8 <+11248>:	cmp    $0x2,%eax
0x000000000057b4ab <+11251>:	jle    0x57b55b <_PyEval_EvalFrameDefault+11427>
0x000000000057b4b1 <+11257>:	sub    $0x18,%rbx
0x000000000057b4b5 <+11261>:	mov    %r12,%rdx
0x000000000057b4b8 <+11264>:	mov    %r13,%rsi
0x000000000057b4bb <+11267>:	mov    %r14,%rdi
0x000000000057b4be <+11270>:	call   0x493232 <PyObject_SetItem>
0x000000000057b4c3 <+11275>:	mov    %eax,0x8(%rsp)
0x000000000057b4c7 <+11279>:	mov    %r12,%rdx
0x000000000057b4ca <+11282>:	mov    $0x8fe,%esi
0x000000000057b4cf <+11287>:	mov    $0x74045c,%edi
0x000000000057b4d4 <+11292>:	call   0x573c83 <Py_DECREF>
0x000000000057b4d9 <+11297>:	mov    %r14,%rdx
0x000000000057b4dc <+11300>:	mov    $0x8ff,%esi
0x000000000057b4e1 <+11305>:	mov    $0x74045c,%edi
0x000000000057b4e6 <+11310>:	call   0x573c83 <Py_DECREF>
0x000000000057b4eb <+11315>:	mov    %r13,%rdx
0x000000000057b4ee <+11318>:	mov    $0x900,%esi
0x000000000057b4f3 <+11323>:	mov    $0x74045c,%edi
0x000000000057b4f8 <+11328>:	call   0x573c83 <Py_DECREF>
0x000000000057b4fd <+11333>:	cmpl   $0x0,0x8(%rsp)
0x000000000057b502 <+11338>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b508 <+11344>:	lea    0x2(%r15),%r13
0x000000000057b50c <+11348>:	movzwl 0x2(%r15),%r12d
0x000000000057b511 <+11353>:	mov    %r12d,%eax
0x000000000057b514 <+11356>:	shr    $0x8,%ax
0x000000000057b518 <+11360>:	movzwl %ax,%eax
0x000000000057b51b <+11363>:	mov    %eax,0x8(%rsp)
0x000000000057b51f <+11367>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b524 <+11372>:	jne    0x57b574 <_PyEval_EvalFrameDefault+11452>
0x000000000057b526 <+11374>:	movzbl 0xc0(%rsp),%eax
0x000000000057b52e <+11382>:	lea    -0x1(%rax),%edx
0x000000000057b531 <+11385>:	cmp    $0xfd,%dl
0x000000000057b534 <+11388>:	jbe    0x57b584 <_PyEval_EvalFrameDefault+11468>
0x000000000057b536 <+11390>:	cmpw   $0x0,0x543f0e(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b53e <+11398>:	jne    0x57b59d <_PyEval_EvalFrameDefault+11493>
0x000000000057b540 <+11400>:	mov    $0x0,%edx
0x000000000057b545 <+11405>:	or     %edx,%eax
0x000000000057b547 <+11407>:	or     %eax,%r12d
0x000000000057b54a <+11410>:	movzbl %r12b,%eax
0x000000000057b54e <+11414>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b556 <+11422>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b55b <+11427>:	mov    $0x7444e0,%ecx
0x000000000057b560 <+11432>:	mov    $0x8fb,%edx
0x000000000057b565 <+11437>:	mov    $0x74045c,%esi
0x000000000057b56a <+11442>:	mov    $0x74097b,%edi
0x000000000057b56f <+11447>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b574 <+11452>:	mov    %r13,%rdx
0x000000000057b577 <+11455>:	mov    %rbx,%rsi
0x000000000057b57a <+11458>:	mov    %rbp,%rdi
0x000000000057b57d <+11461>:	call   0x573f7b <lltrace_instruction>
0x000000000057b582 <+11466>:	jmp    0x57b526 <_PyEval_EvalFrameDefault+11374>
0x000000000057b584 <+11468>:	mov    $0x7444e0,%ecx
0x000000000057b589 <+11473>:	mov    $0x905,%edx
0x000000000057b58e <+11478>:	mov    $0x74045c,%esi
0x000000000057b593 <+11483>:	mov    $0x742a50,%edi
0x000000000057b598 <+11488>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b59d <+11493>:	mov    $0xffffffff,%edx
0x000000000057b5a2 <+11498>:	jmp    0x57b545 <_PyEval_EvalFrameDefault+11405>
0x000000000057b5a4 <+11500>:	lea    0x2(%r13),%r15
0x000000000057b5a8 <+11504>:	mov    %r13,0x38(%rbp)
0x000000000057b5ac <+11508>:	movzwl 0x2(%r13),%eax
0x000000000057b5b1 <+11513>:	cmp    $0xf,%ax
0x000000000057b5b5 <+11517>:	jbe    0x57b5c4 <_PyEval_EvalFrameDefault+11532>
0x000000000057b5b7 <+11519>:	sub    $0x10,%eax
0x000000000057b5ba <+11522>:	mov    %ax,0x2(%r13)
0x000000000057b5bf <+11527>:	jmp    0x57b485 <_PyEval_EvalFrameDefault+11213>
0x000000000057b5c4 <+11532>:	mov    -0x8(%rbx),%rsi
0x000000000057b5c8 <+11536>:	mov    -0x10(%rbx),%rdi
0x000000000057b5cc <+11540>:	mov    %r13,%rdx
0x000000000057b5cf <+11543>:	call   0x5d0117 <_Py_Specialize_StoreSubscr>
0x000000000057b5d4 <+11548>:	test   %eax,%eax
0x000000000057b5d6 <+11550>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b5dc <+11556>:	movzwl 0x0(%r13),%r14d
0x000000000057b5e1 <+11561>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b5e6 <+11566>:	jne    0x57b617 <_PyEval_EvalFrameDefault+11615>
0x000000000057b5e8 <+11568>:	movzbl 0xc0(%rsp),%r12d
0x000000000057b5f1 <+11577>:	cmpw   $0x0,0x543e53(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b5f9 <+11585>:	jne    0x57b627 <_PyEval_EvalFrameDefault+11631>
0x000000000057b5fb <+11587>:	mov    $0x0,%eax
0x000000000057b600 <+11592>:	or     %eax,%r12d
0x000000000057b603 <+11595>:	or     %r14d,%r12d
0x000000000057b606 <+11598>:	movzbl %r12b,%eax
0x000000000057b60a <+11602>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b612 <+11610>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b617 <+11615>:	mov    %r13,%rdx
0x000000000057b61a <+11618>:	mov    %rbx,%rsi
0x000000000057b61d <+11621>:	mov    %rbp,%rdi
0x000000000057b620 <+11624>:	call   0x573f7b <lltrace_instruction>
0x000000000057b625 <+11629>:	jmp    0x57b5e8 <_PyEval_EvalFrameDefault+11568>
0x000000000057b627 <+11631>:	mov    $0xffffffff,%eax
0x000000000057b62c <+11636>:	jmp    0x57b600 <_PyEval_EvalFrameDefault+11592>
0x000000000057b62e <+11638>:	lea    0x2(%r13),%r15
0x000000000057b632 <+11642>:	mov    %r13,0x38(%rbp)
0x000000000057b636 <+11646>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057b63e <+11654>:	jne    0x57b7a2 <_PyEval_EvalFrameDefault+12010>
0x000000000057b644 <+11660>:	mov    -0x8(%rbx),%rax
0x000000000057b648 <+11664>:	mov    %rax,0x48(%rsp)
0x000000000057b64d <+11669>:	mov    -0x10(%rbx),%r14
0x000000000057b651 <+11673>:	mov    -0x18(%rbx),%rcx
0x000000000057b655 <+11677>:	mov    %rcx,0x68(%rsp)
0x000000000057b65a <+11682>:	cmpq   $0x992c20,0x8(%rax)
0x000000000057b662 <+11690>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b668 <+11696>:	mov    0x8(%r14),%rcx
0x000000000057b66c <+11700>:	mov    %rcx,0x60(%rsp)
0x000000000057b671 <+11705>:	cmp    $0x9926c0,%rcx
0x000000000057b678 <+11712>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b67e <+11718>:	cmpq   $0x1,0x10(%rax)
0x000000000057b683 <+11723>:	ja     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b689 <+11729>:	mov    0x18(%rax),%eax
0x000000000057b68c <+11732>:	mov    %eax,0x58(%rsp)
0x000000000057b690 <+11736>:	mov    %eax,%eax
0x000000000057b692 <+11738>:	mov    %rax,0x50(%rsp)
0x000000000057b697 <+11743>:	mov    %r14,%rdi
0x000000000057b69a <+11746>:	call   0x572fd1 <PyList_GET_SIZE>
0x000000000057b69f <+11751>:	mov    0x50(%rsp),%rcx
0x000000000057b6a4 <+11756>:	cmp    %rcx,%rax
0x000000000057b6a7 <+11759>:	jle    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b6ad <+11765>:	mov    0x60(%rsp),%rax
0x000000000057b6b2 <+11770>:	testb  $0x2,0xab(%rax)
0x000000000057b6b9 <+11777>:	je     0x57b7bb <_PyEval_EvalFrameDefault+12035>
0x000000000057b6bf <+11783>:	mov    0x58(%rsp),%eax
0x000000000057b6c3 <+11787>:	shl    $0x3,%rax
0x000000000057b6c7 <+11791>:	add    0x18(%r14),%rax
0x000000000057b6cb <+11795>:	mov    (%rax),%r12
0x000000000057b6ce <+11798>:	mov    0x68(%rsp),%rdx
0x000000000057b6d3 <+11803>:	mov    0x50(%rsp),%rsi
0x000000000057b6d8 <+11808>:	mov    %r14,%rdi
0x000000000057b6db <+11811>:	call   0x573030 <PyList_SET_ITEM>
0x000000000057b6e0 <+11816>:	mov    0x20(%rbp),%rax
0x000000000057b6e4 <+11820>:	movslq 0x4c(%rax),%rax
0x000000000057b6e8 <+11824>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057b6ed <+11829>:	mov    %rbx,%rax
0x000000000057b6f0 <+11832>:	sub    %rdx,%rax
0x000000000057b6f3 <+11835>:	sar    $0x3,%rax
0x000000000057b6f7 <+11839>:	cmp    $0x2,%eax
0x000000000057b6fa <+11842>:	jle    0x57b7d4 <_PyEval_EvalFrameDefault+12060>
0x000000000057b700 <+11848>:	sub    $0x18,%rbx
0x000000000057b704 <+11852>:	test   %r12,%r12
0x000000000057b707 <+11855>:	je     0x57b7ed <_PyEval_EvalFrameDefault+12085>
0x000000000057b70d <+11861>:	mov    %r12,%rdx
0x000000000057b710 <+11864>:	mov    $0x92e,%esi
0x000000000057b715 <+11869>:	mov    $0x74045c,%edi
0x000000000057b71a <+11874>:	call   0x573c83 <Py_DECREF>
0x000000000057b71f <+11879>:	mov    $0x4f477b,%esi
0x000000000057b724 <+11884>:	mov    0x48(%rsp),%rdi
0x000000000057b729 <+11889>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x000000000057b72e <+11894>:	mov    %r14,%rdx
0x000000000057b731 <+11897>:	mov    $0x930,%esi
0x000000000057b736 <+11902>:	mov    $0x74045c,%edi
0x000000000057b73b <+11907>:	call   0x573c83 <Py_DECREF>
0x000000000057b740 <+11912>:	lea    0x4(%r13),%r14
0x000000000057b744 <+11916>:	movzwl 0x4(%r13),%r12d
0x000000000057b749 <+11921>:	mov    %r12d,%eax
0x000000000057b74c <+11924>:	shr    $0x8,%ax
0x000000000057b750 <+11928>:	movzwl %ax,%eax
0x000000000057b753 <+11931>:	mov    %eax,0x8(%rsp)
0x000000000057b757 <+11935>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b75c <+11940>:	jne    0x57b806 <_PyEval_EvalFrameDefault+12110>
0x000000000057b762 <+11946>:	movzbl 0xc0(%rsp),%eax
0x000000000057b76a <+11954>:	lea    -0x1(%rax),%edx
0x000000000057b76d <+11957>:	cmp    $0xfd,%dl
0x000000000057b770 <+11960>:	jbe    0x57b819 <_PyEval_EvalFrameDefault+12129>
0x000000000057b776 <+11966>:	cmpw   $0x0,0x543cce(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b77e <+11974>:	jne    0x57b832 <_PyEval_EvalFrameDefault+12154>
0x000000000057b784 <+11980>:	mov    $0x0,%edx
0x000000000057b789 <+11985>:	or     %edx,%eax
0x000000000057b78b <+11987>:	or     %eax,%r12d
0x000000000057b78e <+11990>:	movzbl %r12b,%eax
0x000000000057b792 <+11994>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b79a <+12002>:	mov    %r14,%r13
0x000000000057b79d <+12005>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b7a2 <+12010>:	mov    $0x7444e0,%ecx
0x000000000057b7a7 <+12015>:	mov    $0x91c,%edx
0x000000000057b7ac <+12020>:	mov    $0x74045c,%esi
0x000000000057b7b1 <+12025>:	mov    $0x7408ff,%edi
0x000000000057b7b6 <+12030>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b7bb <+12035>:	mov    $0x7444e0,%ecx
0x000000000057b7c0 <+12040>:	mov    $0x92a,%edx
0x000000000057b7c5 <+12045>:	mov    $0x74045c,%esi
0x000000000057b7ca <+12050>:	mov    $0x6f20a8,%edi
0x000000000057b7cf <+12055>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b7d4 <+12060>:	mov    $0x7444e0,%ecx
0x000000000057b7d9 <+12065>:	mov    $0x92c,%edx
0x000000000057b7de <+12070>:	mov    $0x74045c,%esi
0x000000000057b7e3 <+12075>:	mov    $0x74097b,%edi
0x000000000057b7e8 <+12080>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b7ed <+12085>:	mov    $0x7444e0,%ecx
0x000000000057b7f2 <+12090>:	mov    $0x92d,%edx
0x000000000057b7f7 <+12095>:	mov    $0x74045c,%esi
0x000000000057b7fc <+12100>:	mov    $0x6eba00,%edi
0x000000000057b801 <+12105>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b806 <+12110>:	mov    %r14,%rdx
0x000000000057b809 <+12113>:	mov    %rbx,%rsi
0x000000000057b80c <+12116>:	mov    %rbp,%rdi
0x000000000057b80f <+12119>:	call   0x573f7b <lltrace_instruction>
0x000000000057b814 <+12124>:	jmp    0x57b762 <_PyEval_EvalFrameDefault+11946>
0x000000000057b819 <+12129>:	mov    $0x7444e0,%ecx
0x000000000057b81e <+12134>:	mov    $0x932,%edx
0x000000000057b823 <+12139>:	mov    $0x74045c,%esi
0x000000000057b828 <+12144>:	mov    $0x742a50,%edi
0x000000000057b82d <+12149>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b832 <+12154>:	mov    $0xffffffff,%edx
0x000000000057b837 <+12159>:	jmp    0x57b789 <_PyEval_EvalFrameDefault+11985>
0x000000000057b83c <+12164>:	lea    0x2(%r13),%r15
0x000000000057b840 <+12168>:	mov    %r13,0x38(%rbp)
0x000000000057b844 <+12172>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057b84c <+12180>:	jne    0x57b90c <_PyEval_EvalFrameDefault+12372>
0x000000000057b852 <+12186>:	mov    -0x8(%rbx),%rsi
0x000000000057b856 <+12190>:	mov    -0x10(%rbx),%r14
0x000000000057b85a <+12194>:	mov    -0x18(%rbx),%rdx
0x000000000057b85e <+12198>:	cmpq   $0x994540,0x8(%r14)
0x000000000057b866 <+12206>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057b86c <+12212>:	mov    0x20(%rbp),%rax
0x000000000057b870 <+12216>:	movslq 0x4c(%rax),%rax
0x000000000057b874 <+12220>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057b879 <+12225>:	mov    %rbx,%rax
0x000000000057b87c <+12228>:	sub    %rcx,%rax
0x000000000057b87f <+12231>:	sar    $0x3,%rax
0x000000000057b883 <+12235>:	cmp    $0x2,%eax
0x000000000057b886 <+12238>:	jle    0x57b925 <_PyEval_EvalFrameDefault+12397>
0x000000000057b88c <+12244>:	sub    $0x18,%rbx
0x000000000057b890 <+12248>:	mov    %r14,%rdi
0x000000000057b893 <+12251>:	call   0x4e1109 <_PyDict_SetItem_Take2>
0x000000000057b898 <+12256>:	mov    %eax,%r12d
0x000000000057b89b <+12259>:	mov    %r14,%rdx
0x000000000057b89e <+12262>:	mov    $0x93e,%esi
0x000000000057b8a3 <+12267>:	mov    $0x74045c,%edi
0x000000000057b8a8 <+12272>:	call   0x573c83 <Py_DECREF>
0x000000000057b8ad <+12277>:	test   %r12d,%r12d
0x000000000057b8b0 <+12280>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b8b6 <+12286>:	lea    0x4(%r13),%r14
0x000000000057b8ba <+12290>:	movzwl 0x4(%r13),%r12d
0x000000000057b8bf <+12295>:	mov    %r12d,%eax
0x000000000057b8c2 <+12298>:	shr    $0x8,%ax
0x000000000057b8c6 <+12302>:	movzwl %ax,%eax
0x000000000057b8c9 <+12305>:	mov    %eax,0x8(%rsp)
0x000000000057b8cd <+12309>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b8d2 <+12314>:	jne    0x57b93e <_PyEval_EvalFrameDefault+12422>
0x000000000057b8d4 <+12316>:	movzbl 0xc0(%rsp),%eax
0x000000000057b8dc <+12324>:	lea    -0x1(%rax),%edx
0x000000000057b8df <+12327>:	cmp    $0xfd,%dl
0x000000000057b8e2 <+12330>:	jbe    0x57b94e <_PyEval_EvalFrameDefault+12438>
0x000000000057b8e4 <+12332>:	cmpw   $0x0,0x543b60(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057b8ec <+12340>:	jne    0x57b967 <_PyEval_EvalFrameDefault+12463>
0x000000000057b8ee <+12342>:	mov    $0x0,%edx
0x000000000057b8f3 <+12347>:	or     %edx,%eax
0x000000000057b8f5 <+12349>:	or     %eax,%r12d
0x000000000057b8f8 <+12352>:	movzbl %r12b,%eax
0x000000000057b8fc <+12356>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057b904 <+12364>:	mov    %r14,%r13
0x000000000057b907 <+12367>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057b90c <+12372>:	mov    $0x7444e0,%ecx
0x000000000057b911 <+12377>:	mov    $0x936,%edx
0x000000000057b916 <+12382>:	mov    $0x74045c,%esi
0x000000000057b91b <+12387>:	mov    $0x7408ff,%edi
0x000000000057b920 <+12392>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b925 <+12397>:	mov    $0x7444e0,%ecx
0x000000000057b92a <+12402>:	mov    $0x93b,%edx
0x000000000057b92f <+12407>:	mov    $0x74045c,%esi
0x000000000057b934 <+12412>:	mov    $0x74097b,%edi
0x000000000057b939 <+12417>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b93e <+12422>:	mov    %r14,%rdx
0x000000000057b941 <+12425>:	mov    %rbx,%rsi
0x000000000057b944 <+12428>:	mov    %rbp,%rdi
0x000000000057b947 <+12431>:	call   0x573f7b <lltrace_instruction>
0x000000000057b94c <+12436>:	jmp    0x57b8d4 <_PyEval_EvalFrameDefault+12316>
0x000000000057b94e <+12438>:	mov    $0x7444e0,%ecx
0x000000000057b953 <+12443>:	mov    $0x943,%edx
0x000000000057b958 <+12448>:	mov    $0x74045c,%esi
0x000000000057b95d <+12453>:	mov    $0x742a50,%edi
0x000000000057b962 <+12458>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057b967 <+12463>:	mov    $0xffffffff,%edx
0x000000000057b96c <+12468>:	jmp    0x57b8f3 <_PyEval_EvalFrameDefault+12347>
0x000000000057b96e <+12470>:	lea    0x2(%r13),%r15
0x000000000057b972 <+12474>:	mov    %r13,0x38(%rbp)
0x000000000057b976 <+12478>:	mov    -0x8(%rbx),%r13
0x000000000057b97a <+12482>:	mov    -0x10(%rbx),%r14
0x000000000057b97e <+12486>:	mov    0x20(%rbp),%rax
0x000000000057b982 <+12490>:	movslq 0x4c(%rax),%rax
0x000000000057b986 <+12494>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057b98b <+12499>:	mov    %rbx,%rax
0x000000000057b98e <+12502>:	sub    %rdx,%rax
0x000000000057b991 <+12505>:	sar    $0x3,%rax
0x000000000057b995 <+12509>:	cmp    $0x1,%eax
0x000000000057b998 <+12512>:	jle    0x57ba2e <_PyEval_EvalFrameDefault+12662>
0x000000000057b99e <+12518>:	sub    $0x10,%rbx
0x000000000057b9a2 <+12522>:	mov    %r13,%rsi
0x000000000057b9a5 <+12525>:	mov    %r14,%rdi
0x000000000057b9a8 <+12528>:	call   0x49346f <PyObject_DelItem>
0x000000000057b9ad <+12533>:	mov    %eax,%r12d
0x000000000057b9b0 <+12536>:	mov    %r14,%rdx
0x000000000057b9b3 <+12539>:	mov    $0x94d,%esi
0x000000000057b9b8 <+12544>:	mov    $0x74045c,%edi
0x000000000057b9bd <+12549>:	call   0x573c83 <Py_DECREF>
0x000000000057b9c2 <+12554>:	mov    %r13,%rdx
0x000000000057b9c5 <+12557>:	mov    $0x94e,%esi
0x000000000057b9ca <+12562>:	mov    $0x74045c,%edi
0x000000000057b9cf <+12567>:	call   0x573c83 <Py_DECREF>
0x000000000057b9d4 <+12572>:	test   %r12d,%r12d
0x000000000057b9d7 <+12575>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057b9dd <+12581>:	movzwl (%r15),%r12d
0x000000000057b9e1 <+12585>:	mov    %r12d,%eax
0x000000000057b9e4 <+12588>:	shr    $0x8,%ax
0x000000000057b9e8 <+12592>:	movzwl %ax,%eax
0x000000000057b9eb <+12595>:	mov    %eax,0x8(%rsp)
0x000000000057b9ef <+12599>:	cmpl   $0x0,0x14(%rsp)
0x000000000057b9f4 <+12604>:	jne    0x57ba47 <_PyEval_EvalFrameDefault+12687>
0x000000000057b9f6 <+12606>:	movzbl 0xc0(%rsp),%eax
0x000000000057b9fe <+12614>:	lea    -0x1(%rax),%edx
0x000000000057ba01 <+12617>:	cmp    $0xfd,%dl
0x000000000057ba04 <+12620>:	jbe    0x57ba57 <_PyEval_EvalFrameDefault+12703>
0x000000000057ba06 <+12622>:	cmpw   $0x0,0x543a3e(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ba0e <+12630>:	jne    0x57ba70 <_PyEval_EvalFrameDefault+12728>
0x000000000057ba10 <+12632>:	mov    $0x0,%edx
0x000000000057ba15 <+12637>:	or     %edx,%eax
0x000000000057ba17 <+12639>:	or     %eax,%r12d
0x000000000057ba1a <+12642>:	movzbl %r12b,%eax
0x000000000057ba1e <+12646>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ba26 <+12654>:	mov    %r15,%r13
0x000000000057ba29 <+12657>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057ba2e <+12662>:	mov    $0x7444e0,%ecx
0x000000000057ba33 <+12667>:	mov    $0x94a,%edx
0x000000000057ba38 <+12672>:	mov    $0x74045c,%esi
0x000000000057ba3d <+12677>:	mov    $0x74092c,%edi
0x000000000057ba42 <+12682>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ba47 <+12687>:	mov    %r15,%rdx
0x000000000057ba4a <+12690>:	mov    %rbx,%rsi
0x000000000057ba4d <+12693>:	mov    %rbp,%rdi
0x000000000057ba50 <+12696>:	call   0x573f7b <lltrace_instruction>
0x000000000057ba55 <+12701>:	jmp    0x57b9f6 <_PyEval_EvalFrameDefault+12606>
0x000000000057ba57 <+12703>:	mov    $0x7444e0,%ecx
0x000000000057ba5c <+12708>:	mov    $0x951,%edx
0x000000000057ba61 <+12713>:	mov    $0x74045c,%esi
0x000000000057ba66 <+12718>:	mov    $0x742a50,%edi
0x000000000057ba6b <+12723>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ba70 <+12728>:	mov    $0xffffffff,%edx
0x000000000057ba75 <+12733>:	jmp    0x57ba15 <_PyEval_EvalFrameDefault+12637>
0x000000000057ba77 <+12735>:	lea    0x2(%r13),%r15
0x000000000057ba7b <+12739>:	mov    %r13,0x38(%rbp)
0x000000000057ba7f <+12743>:	mov    0x20(%rbp),%rax
0x000000000057ba83 <+12747>:	movslq 0x4c(%rax),%rax
0x000000000057ba87 <+12751>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057ba8c <+12756>:	mov    %rbx,%rax
0x000000000057ba8f <+12759>:	sub    %rdx,%rax
0x000000000057ba92 <+12762>:	sar    $0x3,%rax
0x000000000057ba96 <+12766>:	test   %eax,%eax
0x000000000057ba98 <+12768>:	jle    0x57bb55 <_PyEval_EvalFrameDefault+12957>
0x000000000057ba9e <+12774>:	sub    $0x8,%rbx
0x000000000057baa2 <+12778>:	mov    (%rbx),%r13
0x000000000057baa5 <+12781>:	mov    $0xa9f238,%esi
0x000000000057baaa <+12786>:	mov    0x18(%rsp),%rdi
0x000000000057baaf <+12791>:	call   0x5d91fc <_PySys_GetAttr>
0x000000000057bab4 <+12796>:	mov    %rax,%rdi
0x000000000057bab7 <+12799>:	test   %rax,%rax
0x000000000057baba <+12802>:	je     0x57bb6e <_PyEval_EvalFrameDefault+12982>
0x000000000057bac0 <+12808>:	mov    %r13,%rsi
0x000000000057bac3 <+12811>:	call   0x4a9ffd <PyObject_CallOneArg>
0x000000000057bac8 <+12816>:	mov    %rax,%r12
0x000000000057bacb <+12819>:	mov    %r13,%rdx
0x000000000057bace <+12822>:	mov    $0x95f,%esi
0x000000000057bad3 <+12827>:	mov    $0x74045c,%edi
0x000000000057bad8 <+12832>:	call   0x573c83 <Py_DECREF>
0x000000000057badd <+12837>:	test   %r12,%r12
0x000000000057bae0 <+12840>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bae6 <+12846>:	mov    %r12,%rdx
0x000000000057bae9 <+12849>:	mov    $0x962,%esi
0x000000000057baee <+12854>:	mov    $0x74045c,%edi
0x000000000057baf3 <+12859>:	call   0x573c83 <Py_DECREF>
0x000000000057baf8 <+12864>:	movzwl (%r15),%r12d
0x000000000057bafc <+12868>:	mov    %r12d,%eax
0x000000000057baff <+12871>:	shr    $0x8,%ax
0x000000000057bb03 <+12875>:	movzwl %ax,%eax
0x000000000057bb06 <+12878>:	mov    %eax,0x8(%rsp)
0x000000000057bb0a <+12882>:	cmpl   $0x0,0x14(%rsp)
0x000000000057bb0f <+12887>:	jne    0x57bb9b <_PyEval_EvalFrameDefault+13027>
0x000000000057bb15 <+12893>:	movzbl 0xc0(%rsp),%eax
0x000000000057bb1d <+12901>:	lea    -0x1(%rax),%edx
0x000000000057bb20 <+12904>:	cmp    $0xfd,%dl
0x000000000057bb23 <+12907>:	jbe    0x57bbae <_PyEval_EvalFrameDefault+13046>
0x000000000057bb29 <+12913>:	cmpw   $0x0,0x54391b(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057bb31 <+12921>:	jne    0x57bbc7 <_PyEval_EvalFrameDefault+13071>
0x000000000057bb37 <+12927>:	mov    $0x0,%edx
0x000000000057bb3c <+12932>:	or     %edx,%eax
0x000000000057bb3e <+12934>:	or     %eax,%r12d
0x000000000057bb41 <+12937>:	movzbl %r12b,%eax
0x000000000057bb45 <+12941>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057bb4d <+12949>:	mov    %r15,%r13
0x000000000057bb50 <+12952>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057bb55 <+12957>:	mov    $0x7444e0,%ecx
0x000000000057bb5a <+12962>:	mov    $0x955,%edx
0x000000000057bb5f <+12967>:	mov    $0x74045c,%esi
0x000000000057bb64 <+12972>:	mov    $0x7408da,%edi
0x000000000057bb69 <+12977>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bb6e <+12982>:	mov    $0x74098e,%edx
0x000000000057bb73 <+12987>:	mov    0x40f75e(%rip),%rsi        # 0x98b2d8 <PyExc_RuntimeError>
0x000000000057bb7a <+12994>:	mov    0x18(%rsp),%rdi
0x000000000057bb7f <+12999>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000057bb84 <+13004>:	mov    %r13,%rdx
0x000000000057bb87 <+13007>:	mov    $0x95b,%esi
0x000000000057bb8c <+13012>:	mov    $0x74045c,%edi
0x000000000057bb91 <+13017>:	call   0x573c83 <Py_DECREF>
0x000000000057bb96 <+13022>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bb9b <+13027>:	mov    %r15,%rdx
0x000000000057bb9e <+13030>:	mov    %rbx,%rsi
0x000000000057bba1 <+13033>:	mov    %rbp,%rdi
0x000000000057bba4 <+13036>:	call   0x573f7b <lltrace_instruction>
0x000000000057bba9 <+13041>:	jmp    0x57bb15 <_PyEval_EvalFrameDefault+12893>
0x000000000057bbae <+13046>:	mov    $0x7444e0,%ecx
0x000000000057bbb3 <+13051>:	mov    $0x963,%edx
0x000000000057bbb8 <+13056>:	mov    $0x74045c,%esi
0x000000000057bbbd <+13061>:	mov    $0x742a50,%edi
0x000000000057bbc2 <+13066>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bbc7 <+13071>:	mov    $0xffffffff,%edx
0x000000000057bbcc <+13076>:	jmp    0x57bb3c <_PyEval_EvalFrameDefault+12932>
0x000000000057bbd1 <+13081>:	lea    0x2(%r13),%r15
0x000000000057bbd5 <+13085>:	mov    %r13,0x38(%rbp)
0x000000000057bbd9 <+13089>:	mov    0x8(%rsp),%eax
0x000000000057bbdd <+13093>:	cmp    $0x1,%eax
0x000000000057bbe0 <+13096>:	je     0x57bc48 <_PyEval_EvalFrameDefault+13200>
0x000000000057bbe2 <+13098>:	cmp    $0x2,%eax
0x000000000057bbe5 <+13101>:	je     0x57bc0a <_PyEval_EvalFrameDefault+13138>
0x000000000057bbe7 <+13103>:	test   %eax,%eax
0x000000000057bbe9 <+13105>:	je     0x57bca5 <_PyEval_EvalFrameDefault+13293>
0x000000000057bbef <+13111>:	mov    $0x7409a3,%edx
0x000000000057bbf4 <+13116>:	mov    0x40cfbd(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x000000000057bbfb <+13123>:	mov    0x18(%rsp),%rdi
0x000000000057bc00 <+13128>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000057bc05 <+13133>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bc0a <+13138>:	mov    0x20(%rbp),%rax
0x000000000057bc0e <+13142>:	movslq 0x4c(%rax),%rax
0x000000000057bc12 <+13146>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057bc17 <+13151>:	mov    %rbx,%rax
0x000000000057bc1a <+13154>:	sub    %rdx,%rax
0x000000000057bc1d <+13157>:	sar    $0x3,%rax
0x000000000057bc21 <+13161>:	test   %eax,%eax
0x000000000057bc23 <+13163>:	jle    0x57bc2f <_PyEval_EvalFrameDefault+13175>
0x000000000057bc25 <+13165>:	mov    -0x8(%rbx),%rdx
0x000000000057bc29 <+13169>:	lea    -0x8(%rbx),%rbx
0x000000000057bc2d <+13173>:	jmp    0x57bc4d <_PyEval_EvalFrameDefault+13205>
0x000000000057bc2f <+13175>:	mov    $0x7444e0,%ecx
0x000000000057bc34 <+13180>:	mov    $0x96a,%edx
0x000000000057bc39 <+13185>:	mov    $0x74045c,%esi
0x000000000057bc3e <+13190>:	mov    $0x7408da,%edi
0x000000000057bc43 <+13195>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bc48 <+13200>:	mov    $0x0,%edx
0x000000000057bc4d <+13205>:	mov    0x20(%rbp),%rax
0x000000000057bc51 <+13209>:	movslq 0x4c(%rax),%rax
0x000000000057bc55 <+13213>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057bc5a <+13218>:	mov    %rbx,%rax
0x000000000057bc5d <+13221>:	sub    %rcx,%rax
0x000000000057bc60 <+13224>:	sar    $0x3,%rax
0x000000000057bc64 <+13228>:	test   %eax,%eax
0x000000000057bc66 <+13230>:	jle    0x57bc8c <_PyEval_EvalFrameDefault+13268>
0x000000000057bc68 <+13232>:	mov    -0x8(%rbx),%rsi
0x000000000057bc6c <+13236>:	lea    -0x8(%rbx),%rbx
0x000000000057bc70 <+13240>:	mov    0x18(%rsp),%rdi
0x000000000057bc75 <+13245>:	call   0x575777 <do_raise>
0x000000000057bc7a <+13250>:	test   %eax,%eax
0x000000000057bc7c <+13252>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bc82 <+13258>:	mov    0x38(%rsp),%r14
0x000000000057bc87 <+13263>:	jmp    0x589dbb <_PyEval_EvalFrameDefault+70915>
0x000000000057bc8c <+13268>:	mov    $0x7444e0,%ecx
0x000000000057bc91 <+13273>:	mov    $0x96d,%edx
0x000000000057bc96 <+13278>:	mov    $0x74045c,%esi
0x000000000057bc9b <+13283>:	mov    $0x7408da,%edi
0x000000000057bca0 <+13288>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bca5 <+13293>:	mov    $0x0,%esi
0x000000000057bcaa <+13298>:	mov    $0x0,%edx
0x000000000057bcaf <+13303>:	jmp    0x57bc70 <_PyEval_EvalFrameDefault+13240>
0x000000000057bcb1 <+13305>:	mov    %r13,0x38(%rbp)
0x000000000057bcb5 <+13309>:	lea    0x48(%rbp),%rcx
0x000000000057bcb9 <+13313>:	mov    0x20(%rbp),%rax
0x000000000057bcbd <+13317>:	movslq 0x4c(%rax),%rax
0x000000000057bcc1 <+13321>:	lea    (%rcx,%rax,8),%rsi
0x000000000057bcc5 <+13325>:	mov    %rbx,%rax
0x000000000057bcc8 <+13328>:	sub    %rsi,%rax
0x000000000057bccb <+13331>:	sar    $0x3,%rax
0x000000000057bccf <+13335>:	test   %eax,%eax
0x000000000057bcd1 <+13337>:	jle    0x57bd8c <_PyEval_EvalFrameDefault+13524>
0x000000000057bcd7 <+13343>:	lea    -0x8(%rbx),%rax
0x000000000057bcdb <+13347>:	mov    -0x8(%rbx),%r12
0x000000000057bcdf <+13351>:	mov    %rax,%rdx
0x000000000057bce2 <+13354>:	sub    %rsi,%rdx
0x000000000057bce5 <+13357>:	sar    $0x3,%rdx
0x000000000057bce9 <+13361>:	test   %edx,%edx
0x000000000057bceb <+13363>:	jne    0x57bda5 <_PyEval_EvalFrameDefault+13549>
0x000000000057bcf1 <+13369>:	sub    %rcx,%rax
0x000000000057bcf4 <+13372>:	sar    $0x3,%rax
0x000000000057bcf8 <+13376>:	mov    %eax,0x40(%rbp)
0x000000000057bcfb <+13379>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057bd03 <+13387>:	jne    0x57bdbe <_PyEval_EvalFrameDefault+13574>
0x000000000057bd09 <+13393>:	cmpw   $0x0,0x543731(%rip)        # 0xabf442 <python_function__return_semaphore>
0x000000000057bd11 <+13401>:	jne    0x57bded <_PyEval_EvalFrameDefault+13621>
0x000000000057bd17 <+13407>:	mov    0x18(%rsp),%rcx
0x000000000057bd1c <+13412>:	mov    0x20(%rcx),%eax
0x000000000057bd1f <+13415>:	mov    %eax,0x8(%rsp)
0x000000000057bd23 <+13419>:	add    $0x1,%eax
0x000000000057bd26 <+13422>:	mov    %eax,0x20(%rcx)
0x000000000057bd29 <+13425>:	cmpb   $0x0,0x44(%rbp)
0x000000000057bd2d <+13429>:	je     0x57bdfa <_PyEval_EvalFrameDefault+13634>
0x000000000057bd33 <+13435>:	mov    0xd0(%rsp),%rax
0x000000000057bd3b <+13443>:	mov    0x18(%rsp),%rcx
0x000000000057bd40 <+13448>:	mov    %rax,0x38(%rcx)
0x000000000057bd44 <+13452>:	movzbl 0xc0(%rsp),%edx
0x000000000057bd4c <+13460>:	mov    %dl,(%rax)
0x000000000057bd4e <+13462>:	mov    0x38(%rcx),%rax
0x000000000057bd52 <+13466>:	mov    0x30(%rbp),%rcx
0x000000000057bd56 <+13470>:	cmp    %rcx,0x8(%rax)
0x000000000057bd5a <+13474>:	jne    0x57be2f <_PyEval_EvalFrameDefault+13687>
0x000000000057bd60 <+13480>:	mov    0x18(%rsp),%rdi
0x000000000057bd65 <+13485>:	call   0x573630 <_PyErr_Occurred>
0x000000000057bd6a <+13490>:	test   %rax,%rax
0x000000000057bd6d <+13493>:	je     0x578adb <_PyEval_EvalFrameDefault+547>
0x000000000057bd73 <+13499>:	mov    $0x7444e0,%ecx
0x000000000057bd78 <+13504>:	mov    $0x98f,%edx
0x000000000057bd7d <+13509>:	mov    $0x74045c,%esi
0x000000000057bd82 <+13514>:	mov    $0x6dba3b,%edi
0x000000000057bd87 <+13519>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bd8c <+13524>:	mov    $0x7444e0,%ecx
0x000000000057bd91 <+13529>:	mov    $0x97d,%edx
0x000000000057bd96 <+13534>:	mov    $0x74045c,%esi
0x000000000057bd9b <+13539>:	mov    $0x7408da,%edi
0x000000000057bda0 <+13544>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bda5 <+13549>:	mov    $0x7444e0,%ecx
0x000000000057bdaa <+13554>:	mov    $0x97e,%edx
0x000000000057bdaf <+13559>:	mov    $0x74045c,%esi
0x000000000057bdb4 <+13564>:	mov    $0x7409bb,%edi
0x000000000057bdb9 <+13569>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bdbe <+13574>:	mov    %r12,%rdx
0x000000000057bdc1 <+13577>:	mov    %rbp,%rsi
0x000000000057bdc4 <+13580>:	mov    0x18(%rsp),%rdi
0x000000000057bdc9 <+13585>:	call   0x57804b <trace_function_exit>
0x000000000057bdce <+13590>:	test   %eax,%eax
0x000000000057bdd0 <+13592>:	je     0x57bd09 <_PyEval_EvalFrameDefault+13393>
0x000000000057bdd6 <+13598>:	mov    %r12,%rdx
0x000000000057bdd9 <+13601>:	mov    $0x980,%esi
0x000000000057bdde <+13606>:	mov    $0x74045c,%edi
0x000000000057bde3 <+13611>:	call   0x573c83 <Py_DECREF>
0x000000000057bde8 <+13616>:	jmp    0x578a7e <_PyEval_EvalFrameDefault+454>
0x000000000057bded <+13621>:	mov    %rbp,%rdi
0x000000000057bdf0 <+13624>:	call   0x576cf2 <dtrace_function_return>
0x000000000057bdf5 <+13629>:	jmp    0x57bd17 <_PyEval_EvalFrameDefault+13407>
0x000000000057bdfa <+13634>:	mov    0x30(%rbp),%rbx
0x000000000057bdfe <+13638>:	mov    %rbx,0xc8(%rsp)
0x000000000057be06 <+13646>:	mov    %rbp,%rsi
0x000000000057be09 <+13649>:	mov    %rcx,%rdi
0x000000000057be0c <+13652>:	call   0x576fbf <_PyEvalFrameClearAndPop>
0x000000000057be11 <+13657>:	mov    0x40(%rbx),%eax
0x000000000057be14 <+13660>:	movslq %eax,%rdx
0x000000000057be17 <+13663>:	mov    %r12,0x48(%rbx,%rdx,8)
0x000000000057be1c <+13668>:	add    $0x1,%eax
0x000000000057be1f <+13671>:	mov    %eax,0x40(%rbx)
0x000000000057be22 <+13674>:	mov    0x14(%rsp),%r14d
0x000000000057be27 <+13679>:	mov    %rbx,%rbp
0x000000000057be2a <+13682>:	jmp    0x57b1c5 <_PyEval_EvalFrameDefault+10509>
0x000000000057be2f <+13687>:	mov    $0x7444e0,%ecx
0x000000000057be34 <+13692>:	mov    $0x98e,%edx
0x000000000057be39 <+13697>:	mov    $0x74045c,%esi
0x000000000057be3e <+13702>:	mov    $0x6e2990,%edi
0x000000000057be43 <+13707>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057be48 <+13712>:	lea    0x2(%r13),%r15
0x000000000057be4c <+13716>:	mov    %r13,0x38(%rbp)
0x000000000057be50 <+13720>:	mov    -0x8(%rbx),%r13
0x000000000057be54 <+13724>:	mov    0x8(%r13),%rax
0x000000000057be58 <+13728>:	mov    0x50(%rax),%rdx
0x000000000057be5c <+13732>:	test   %rdx,%rdx
0x000000000057be5f <+13735>:	je     0x57bf1c <_PyEval_EvalFrameDefault+13924>
0x000000000057be65 <+13741>:	mov    0x8(%rdx),%rdx
0x000000000057be69 <+13745>:	test   %rdx,%rdx
0x000000000057be6c <+13748>:	je     0x57bf1c <_PyEval_EvalFrameDefault+13924>
0x000000000057be72 <+13754>:	mov    %r13,%rdi
0x000000000057be75 <+13757>:	call   *%rdx
0x000000000057be77 <+13759>:	mov    %rax,%r12
0x000000000057be7a <+13762>:	mov    %r13,%rdx
0x000000000057be7d <+13765>:	mov    $0x99f,%esi
0x000000000057be82 <+13770>:	mov    $0x74045c,%edi
0x000000000057be87 <+13775>:	call   0x573c83 <Py_DECREF>
0x000000000057be8c <+13780>:	test   %r12,%r12
0x000000000057be8f <+13783>:	je     0x57bf0f <_PyEval_EvalFrameDefault+13911>
0x000000000057be91 <+13785>:	mov    0x8(%r12),%rax
0x000000000057be96 <+13790>:	mov    0x50(%rax),%rax
0x000000000057be9a <+13794>:	test   %rax,%rax
0x000000000057be9d <+13797>:	je     0x57bf5a <_PyEval_EvalFrameDefault+13986>
0x000000000057bea3 <+13803>:	cmpq   $0x0,0x10(%rax)
0x000000000057bea8 <+13808>:	je     0x57bf5a <_PyEval_EvalFrameDefault+13986>
0x000000000057beae <+13814>:	mov    %r12,-0x8(%rbx)
0x000000000057beb2 <+13818>:	movzwl (%r15),%r12d
0x000000000057beb6 <+13822>:	mov    %r12d,%eax
0x000000000057beb9 <+13825>:	shr    $0x8,%ax
0x000000000057bebd <+13829>:	movzwl %ax,%eax
0x000000000057bec0 <+13832>:	mov    %eax,0x8(%rsp)
0x000000000057bec4 <+13836>:	cmpl   $0x0,0x14(%rsp)
0x000000000057bec9 <+13841>:	jne    0x57bf9d <_PyEval_EvalFrameDefault+14053>
0x000000000057becf <+13847>:	movzbl 0xc0(%rsp),%eax
0x000000000057bed7 <+13855>:	lea    -0x1(%rax),%edx
0x000000000057beda <+13858>:	cmp    $0xfd,%dl
0x000000000057bedd <+13861>:	jbe    0x57bfb0 <_PyEval_EvalFrameDefault+14072>
0x000000000057bee3 <+13867>:	cmpw   $0x0,0x543561(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057beeb <+13875>:	jne    0x57bfc9 <_PyEval_EvalFrameDefault+14097>
0x000000000057bef1 <+13881>:	mov    $0x0,%edx
0x000000000057bef6 <+13886>:	or     %edx,%eax
0x000000000057bef8 <+13888>:	or     %eax,%r12d
0x000000000057befb <+13891>:	movzbl %r12b,%eax
0x000000000057beff <+13895>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057bf07 <+13903>:	mov    %r15,%r13
0x000000000057bf0a <+13906>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057bf0f <+13911>:	movq   $0x0,-0x8(%rbx)
0x000000000057bf17 <+13919>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bf1c <+13924>:	movq   $0x0,-0x8(%rbx)
0x000000000057bf24 <+13932>:	mov    0x18(%rax),%rcx
0x000000000057bf28 <+13936>:	mov    $0x742b18,%edx
0x000000000057bf2d <+13941>:	mov    0x412244(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x000000000057bf34 <+13948>:	mov    0x18(%rsp),%rdi
0x000000000057bf39 <+13953>:	mov    $0x0,%eax
0x000000000057bf3e <+13958>:	call   0x5a3574 <_PyErr_Format>
0x000000000057bf43 <+13963>:	mov    %r13,%rdx
0x000000000057bf46 <+13966>:	mov    $0x9ab,%esi
0x000000000057bf4b <+13971>:	mov    $0x74045c,%edi
0x000000000057bf50 <+13976>:	call   0x573c83 <Py_DECREF>
0x000000000057bf55 <+13981>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bf5a <+13986>:	movq   $0x0,-0x8(%rbx)
0x000000000057bf62 <+13994>:	mov    0x8(%r12),%rax
0x000000000057bf67 <+13999>:	mov    0x18(%rax),%rcx
0x000000000057bf6b <+14003>:	mov    $0x742b60,%edx
0x000000000057bf70 <+14008>:	mov    0x412201(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x000000000057bf77 <+14015>:	mov    0x18(%rsp),%rdi
0x000000000057bf7c <+14020>:	mov    $0x0,%eax
0x000000000057bf81 <+14025>:	call   0x5a3574 <_PyErr_Format>
0x000000000057bf86 <+14030>:	mov    %r12,%rdx
0x000000000057bf89 <+14033>:	mov    $0x9b7,%esi
0x000000000057bf8e <+14038>:	mov    $0x74045c,%edi
0x000000000057bf93 <+14043>:	call   0x573c83 <Py_DECREF>
0x000000000057bf98 <+14048>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057bf9d <+14053>:	mov    %r15,%rdx
0x000000000057bfa0 <+14056>:	mov    %rbx,%rsi
0x000000000057bfa3 <+14059>:	mov    %rbp,%rdi
0x000000000057bfa6 <+14062>:	call   0x573f7b <lltrace_instruction>
0x000000000057bfab <+14067>:	jmp    0x57becf <_PyEval_EvalFrameDefault+13847>
0x000000000057bfb0 <+14072>:	mov    $0x7444e0,%ecx
0x000000000057bfb5 <+14077>:	mov    $0x9bc,%edx
0x000000000057bfba <+14082>:	mov    $0x74045c,%esi
0x000000000057bfbf <+14087>:	mov    $0x742a50,%edi
0x000000000057bfc4 <+14092>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057bfc9 <+14097>:	mov    $0xffffffff,%edx
0x000000000057bfce <+14102>:	jmp    0x57bef6 <_PyEval_EvalFrameDefault+13886>
0x000000000057bfd3 <+14107>:	lea    0x2(%r13),%r15
0x000000000057bfd7 <+14111>:	mov    %r13,0x38(%rbp)
0x000000000057bfdb <+14115>:	mov    -0x8(%rbx),%rdi
0x000000000057bfdf <+14119>:	mov    0x8(%rdi),%rax
0x000000000057bfe3 <+14123>:	cmp    $0x98f520,%rax
0x000000000057bfe9 <+14129>:	je     0x57c0c4 <_PyEval_EvalFrameDefault+14348>
0x000000000057bfef <+14135>:	mov    0x50(%rax),%rdx
0x000000000057bff3 <+14139>:	test   %rdx,%rdx
0x000000000057bff6 <+14142>:	je     0x57c0dc <_PyEval_EvalFrameDefault+14372>
0x000000000057bffc <+14148>:	mov    0x10(%rdx),%rdx
0x000000000057c000 <+14152>:	test   %rdx,%rdx
0x000000000057c003 <+14155>:	je     0x57c0dc <_PyEval_EvalFrameDefault+14372>
0x000000000057c009 <+14161>:	call   *%rdx
0x000000000057c00b <+14163>:	mov    %rax,%r13
0x000000000057c00e <+14166>:	test   %rax,%rax
0x000000000057c011 <+14169>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c017 <+14175>:	mov    %rax,%rdi
0x000000000057c01a <+14178>:	call   0x4c0d91 <_PyCoro_GetAwaitableIter>
0x000000000057c01f <+14183>:	mov    %rax,%r12
0x000000000057c022 <+14186>:	test   %rax,%rax
0x000000000057c025 <+14189>:	je     0x57c100 <_PyEval_EvalFrameDefault+14408>
0x000000000057c02b <+14195>:	mov    %r13,%rdx
0x000000000057c02e <+14198>:	mov    $0x9e9,%esi
0x000000000057c033 <+14203>:	mov    $0x74045c,%edi
0x000000000057c038 <+14208>:	call   0x573c83 <Py_DECREF>
0x000000000057c03d <+14213>:	lea    0x8(%rbx),%r13
0x000000000057c041 <+14217>:	mov    %r12,(%rbx)
0x000000000057c044 <+14220>:	mov    0x20(%rbp),%rdx
0x000000000057c048 <+14224>:	movslq 0x4c(%rdx),%rax
0x000000000057c04c <+14228>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057c051 <+14233>:	mov    %r13,%rax
0x000000000057c054 <+14236>:	sub    %rcx,%rax
0x000000000057c057 <+14239>:	sar    $0x3,%rax
0x000000000057c05b <+14243>:	cmp    %eax,0x44(%rdx)
0x000000000057c05e <+14246>:	jl     0x57c135 <_PyEval_EvalFrameDefault+14461>
0x000000000057c064 <+14252>:	movzwl (%r15),%r12d
0x000000000057c068 <+14256>:	mov    %r12d,%eax
0x000000000057c06b <+14259>:	shr    $0x8,%ax
0x000000000057c06f <+14263>:	movzwl %ax,%eax
0x000000000057c072 <+14266>:	mov    %eax,0x8(%rsp)
0x000000000057c076 <+14270>:	cmpl   $0x0,0x14(%rsp)
0x000000000057c07b <+14275>:	jne    0x57c14e <_PyEval_EvalFrameDefault+14486>
0x000000000057c081 <+14281>:	movzbl 0xc0(%rsp),%eax
0x000000000057c089 <+14289>:	lea    -0x1(%rax),%edx
0x000000000057c08c <+14292>:	cmp    $0xfd,%dl
0x000000000057c08f <+14295>:	jbe    0x57c161 <_PyEval_EvalFrameDefault+14505>
0x000000000057c095 <+14301>:	cmpw   $0x0,0x5433af(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057c09d <+14309>:	jne    0x57c17a <_PyEval_EvalFrameDefault+14530>
0x000000000057c0a3 <+14315>:	mov    $0x0,%edx
0x000000000057c0a8 <+14320>:	or     %edx,%eax
0x000000000057c0aa <+14322>:	or     %eax,%r12d
0x000000000057c0ad <+14325>:	movzbl %r12b,%eax
0x000000000057c0b1 <+14329>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057c0b9 <+14337>:	mov    %r13,%rbx
0x000000000057c0bc <+14340>:	mov    %r15,%r13
0x000000000057c0bf <+14343>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057c0c4 <+14348>:	mov    0x50(%rax),%rax
0x000000000057c0c8 <+14352>:	call   *0x10(%rax)
0x000000000057c0cb <+14355>:	mov    %rax,%r12
0x000000000057c0ce <+14358>:	test   %rax,%rax
0x000000000057c0d1 <+14361>:	jne    0x57c03d <_PyEval_EvalFrameDefault+14213>
0x000000000057c0d7 <+14367>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c0dc <+14372>:	mov    0x18(%rax),%rcx
0x000000000057c0e0 <+14376>:	mov    $0x742bb8,%edx
0x000000000057c0e5 <+14381>:	mov    0x41208c(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x000000000057c0ec <+14388>:	mov    0x18(%rsp),%rdi
0x000000000057c0f1 <+14393>:	mov    $0x0,%eax
0x000000000057c0f6 <+14398>:	call   0x5a3574 <_PyErr_Format>
0x000000000057c0fb <+14403>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c100 <+14408>:	mov    0x8(%r13),%rax
0x000000000057c104 <+14412>:	mov    0x18(%rax),%rdx
0x000000000057c108 <+14416>:	mov    $0x742c00,%esi
0x000000000057c10d <+14421>:	mov    0x412064(%rip),%rdi        # 0x98e178 <PyExc_TypeError>
0x000000000057c114 <+14428>:	mov    $0x0,%eax
0x000000000057c119 <+14433>:	call   0x5a3ef7 <_PyErr_FormatFromCause>
0x000000000057c11e <+14438>:	mov    %r13,%rdx
0x000000000057c121 <+14441>:	mov    $0x9e6,%esi
0x000000000057c126 <+14446>:	mov    $0x74045c,%edi
0x000000000057c12b <+14451>:	call   0x573c83 <Py_DECREF>
0x000000000057c130 <+14456>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c135 <+14461>:	mov    $0x7444e0,%ecx
0x000000000057c13a <+14466>:	mov    $0x9ed,%edx
0x000000000057c13f <+14471>:	mov    $0x74045c,%esi
0x000000000057c144 <+14476>:	mov    $0x7408bc,%edi
0x000000000057c149 <+14481>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c14e <+14486>:	mov    %r15,%rdx
0x000000000057c151 <+14489>:	mov    %r13,%rsi
0x000000000057c154 <+14492>:	mov    %rbp,%rdi
0x000000000057c157 <+14495>:	call   0x573f7b <lltrace_instruction>
0x000000000057c15c <+14500>:	jmp    0x57c081 <_PyEval_EvalFrameDefault+14281>
0x000000000057c161 <+14505>:	mov    $0x7444e0,%ecx
0x000000000057c166 <+14510>:	mov    $0x9ef,%edx
0x000000000057c16b <+14515>:	mov    $0x74045c,%esi
0x000000000057c170 <+14520>:	mov    $0x742a50,%edi
0x000000000057c175 <+14525>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c17a <+14530>:	mov    $0xffffffff,%edx
0x000000000057c17f <+14535>:	jmp    0x57c0a8 <_PyEval_EvalFrameDefault+14320>
0x000000000057c184 <+14540>:	lea    0x2(%r13),%r15
0x000000000057c188 <+14544>:	mov    %r13,0x38(%rbp)
0x000000000057c18c <+14548>:	mov    -0x8(%rbx),%r13
0x000000000057c190 <+14552>:	mov    %r13,%rdi
0x000000000057c193 <+14555>:	call   0x4c0d91 <_PyCoro_GetAwaitableIter>
0x000000000057c198 <+14560>:	mov    %rax,%r12
0x000000000057c19b <+14563>:	test   %rax,%rax
0x000000000057c19e <+14566>:	je     0x57c22f <_PyEval_EvalFrameDefault+14711>
0x000000000057c1a4 <+14572>:	mov    %r13,%rdx
0x000000000057c1a7 <+14575>:	mov    $0x9fb,%esi
0x000000000057c1ac <+14580>:	mov    $0x74045c,%edi
0x000000000057c1b1 <+14585>:	call   0x573c83 <Py_DECREF>
0x000000000057c1b6 <+14590>:	test   %r12,%r12
0x000000000057c1b9 <+14593>:	je     0x57c246 <_PyEval_EvalFrameDefault+14734>
0x000000000057c1bf <+14599>:	cmpq   $0x98fb20,0x8(%r12)
0x000000000057c1c8 <+14608>:	je     0x57c24f <_PyEval_EvalFrameDefault+14743>
0x000000000057c1ce <+14614>:	mov    %r12,-0x8(%rbx)
0x000000000057c1d2 <+14618>:	movzwl (%r15),%r12d
0x000000000057c1d6 <+14622>:	mov    %r12d,%eax
0x000000000057c1d9 <+14625>:	shr    $0x8,%ax
0x000000000057c1dd <+14629>:	movzwl %ax,%eax
0x000000000057c1e0 <+14632>:	mov    %eax,0x8(%rsp)
0x000000000057c1e4 <+14636>:	cmpl   $0x0,0x14(%rsp)
0x000000000057c1e9 <+14641>:	jne    0x57c2ae <_PyEval_EvalFrameDefault+14838>
0x000000000057c1ef <+14647>:	movzbl 0xc0(%rsp),%eax
0x000000000057c1f7 <+14655>:	lea    -0x1(%rax),%edx
0x000000000057c1fa <+14658>:	cmp    $0xfd,%dl
0x000000000057c1fd <+14661>:	jbe    0x57c2c1 <_PyEval_EvalFrameDefault+14857>
0x000000000057c203 <+14667>:	cmpw   $0x0,0x543241(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057c20b <+14675>:	jne    0x57c2da <_PyEval_EvalFrameDefault+14882>
0x000000000057c211 <+14681>:	mov    $0x0,%edx
0x000000000057c216 <+14686>:	or     %edx,%eax
0x000000000057c218 <+14688>:	or     %eax,%r12d
0x000000000057c21b <+14691>:	movzbl %r12b,%eax
0x000000000057c21f <+14695>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057c227 <+14703>:	mov    %r15,%r13
0x000000000057c22a <+14706>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057c22f <+14711>:	mov    0x8(%r13),%rsi
0x000000000057c233 <+14715>:	mov    0x8(%rsp),%edx
0x000000000057c237 <+14719>:	mov    0x18(%rsp),%rdi
0x000000000057c23c <+14724>:	call   0x573c28 <format_awaitable_error>
0x000000000057c241 <+14729>:	jmp    0x57c1a4 <_PyEval_EvalFrameDefault+14572>
0x000000000057c246 <+14734>:	mov    %r12,-0x8(%rbx)
0x000000000057c24a <+14738>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c24f <+14743>:	mov    %r12,%rdi
0x000000000057c252 <+14746>:	call   0x4bfa29 <_PyGen_yf>
0x000000000057c257 <+14751>:	mov    %rax,%rdx
0x000000000057c25a <+14754>:	test   %rax,%rax
0x000000000057c25d <+14757>:	je     0x57c29c <_PyEval_EvalFrameDefault+14820>
0x000000000057c25f <+14759>:	mov    $0xa03,%esi
0x000000000057c264 <+14764>:	mov    $0x74045c,%edi
0x000000000057c269 <+14769>:	call   0x573c83 <Py_DECREF>
0x000000000057c26e <+14774>:	mov    %r12,%rdx
0x000000000057c271 <+14777>:	mov    $0xa04,%esi
0x000000000057c276 <+14782>:	mov    $0x74045c,%edi
0x000000000057c27b <+14787>:	call   0x573c83 <Py_DECREF>
0x000000000057c280 <+14792>:	mov    $0x742c40,%edx
0x000000000057c285 <+14797>:	mov    0x40f04c(%rip),%rsi        # 0x98b2d8 <PyExc_RuntimeError>
0x000000000057c28c <+14804>:	mov    0x18(%rsp),%rdi
0x000000000057c291 <+14809>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000057c296 <+14814>:	mov    $0x0,%r12d
0x000000000057c29c <+14820>:	mov    %r12,-0x8(%rbx)
0x000000000057c2a0 <+14824>:	test   %r12,%r12
0x000000000057c2a3 <+14827>:	jne    0x57c1d2 <_PyEval_EvalFrameDefault+14618>
0x000000000057c2a9 <+14833>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c2ae <+14838>:	mov    %r15,%rdx
0x000000000057c2b1 <+14841>:	mov    %rbx,%rsi
0x000000000057c2b4 <+14844>:	mov    %rbp,%rdi
0x000000000057c2b7 <+14847>:	call   0x573f7b <lltrace_instruction>
0x000000000057c2bc <+14852>:	jmp    0x57c1ef <_PyEval_EvalFrameDefault+14647>
0x000000000057c2c1 <+14857>:	mov    $0x7444e0,%ecx
0x000000000057c2c6 <+14862>:	mov    $0xa12,%edx
0x000000000057c2cb <+14867>:	mov    $0x74045c,%esi
0x000000000057c2d0 <+14872>:	mov    $0x742a50,%edi
0x000000000057c2d5 <+14877>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c2da <+14882>:	mov    $0xffffffff,%edx
0x000000000057c2df <+14887>:	jmp    0x57c216 <_PyEval_EvalFrameDefault+14686>
0x000000000057c2e4 <+14892>:	lea    0x2(%r13),%r15
0x000000000057c2e8 <+14896>:	mov    %r13,0x38(%rbp)
0x000000000057c2ec <+14900>:	cmpb   $0x0,0x44(%rbp)
0x000000000057c2f0 <+14904>:	je     0x57c440 <_PyEval_EvalFrameDefault+15240>
0x000000000057c2f6 <+14910>:	lea    0x48(%rbp),%rcx
0x000000000057c2fa <+14914>:	mov    %rcx,0x50(%rsp)
0x000000000057c2ff <+14919>:	mov    0x20(%rbp),%rax
0x000000000057c303 <+14923>:	movslq 0x4c(%rax),%rax
0x000000000057c307 <+14927>:	lea    (%rcx,%rax,8),%rdx
0x000000000057c30b <+14931>:	mov    %rbx,%rax
0x000000000057c30e <+14934>:	sub    %rdx,%rax
0x000000000057c311 <+14937>:	sar    $0x3,%rax
0x000000000057c315 <+14941>:	cmp    $0x1,%eax
0x000000000057c318 <+14944>:	jle    0x57c459 <_PyEval_EvalFrameDefault+15265>
0x000000000057c31e <+14950>:	test   %eax,%eax
0x000000000057c320 <+14952>:	jle    0x57c472 <_PyEval_EvalFrameDefault+15290>
0x000000000057c326 <+14958>:	lea    -0x8(%rbx),%r14
0x000000000057c32a <+14962>:	mov    -0x8(%rbx),%rax
0x000000000057c32e <+14966>:	mov    %rax,0x48(%rsp)
0x000000000057c333 <+14971>:	mov    -0x8(%r14),%r13
0x000000000057c337 <+14975>:	mov    0x18(%rsp),%rax
0x000000000057c33c <+14980>:	cmpq   $0x0,0x48(%rax)
0x000000000057c341 <+14985>:	je     0x57c48b <_PyEval_EvalFrameDefault+15315>
0x000000000057c347 <+14991>:	cmpq   $0x997120,0x48(%rsp)
0x000000000057c350 <+15000>:	je     0x57c4a8 <_PyEval_EvalFrameDefault+15344>
0x000000000057c356 <+15006>:	mov    0x48(%rsp),%rdx
0x000000000057c35b <+15011>:	mov    $0xaa05c8,%esi
0x000000000057c360 <+15016>:	mov    %r13,%rdi
0x000000000057c363 <+15019>:	call   0x574055 <PyObject_CallMethodOneArg>
0x000000000057c368 <+15024>:	mov    %rax,0x88(%rsp)
0x000000000057c370 <+15032>:	cmpq   $0x0,0x88(%rsp)
0x000000000057c379 <+15041>:	je     0x57c4d2 <_PyEval_EvalFrameDefault+15386>
0x000000000057c37f <+15047>:	mov    $0x1,%r12d
0x000000000057c385 <+15053>:	mov    0x48(%rsp),%rdx
0x000000000057c38a <+15058>:	mov    $0xa34,%esi
0x000000000057c38f <+15063>:	mov    $0x74045c,%edi
0x000000000057c394 <+15068>:	call   0x573c83 <Py_DECREF>
0x000000000057c399 <+15073>:	cmp    $0xffffffff,%r12d
0x000000000057c39d <+15077>:	je     0x57c52b <_PyEval_EvalFrameDefault+15475>
0x000000000057c3a3 <+15083>:	test   %r12d,%r12d
0x000000000057c3a6 <+15086>:	jne    0x57c5a6 <_PyEval_EvalFrameDefault+15598>
0x000000000057c3ac <+15092>:	cmpq   $0x0,0x88(%rsp)
0x000000000057c3b5 <+15101>:	je     0x57c557 <_PyEval_EvalFrameDefault+15519>
0x000000000057c3bb <+15107>:	mov    %r13,%rdx
0x000000000057c3be <+15110>:	mov    $0xa3b,%esi
0x000000000057c3c3 <+15115>:	mov    $0x74045c,%edi
0x000000000057c3c8 <+15120>:	call   0x573c83 <Py_DECREF>
0x000000000057c3cd <+15125>:	mov    0x88(%rsp),%rax
0x000000000057c3d5 <+15133>:	mov    %rax,-0x8(%r14)
0x000000000057c3d9 <+15137>:	movslq 0x8(%rsp),%rax
0x000000000057c3de <+15142>:	lea    (%r15,%rax,2),%r13
0x000000000057c3e2 <+15146>:	movzwl 0x0(%r13),%r12d
0x000000000057c3e7 <+15151>:	mov    %r12d,%eax
0x000000000057c3ea <+15154>:	shr    $0x8,%ax
0x000000000057c3ee <+15158>:	movzwl %ax,%eax
0x000000000057c3f1 <+15161>:	mov    %eax,0x8(%rsp)
0x000000000057c3f5 <+15165>:	cmpl   $0x0,0x14(%rsp)
0x000000000057c3fa <+15170>:	jne    0x57c570 <_PyEval_EvalFrameDefault+15544>
0x000000000057c400 <+15176>:	movzbl 0xc0(%rsp),%eax
0x000000000057c408 <+15184>:	lea    -0x1(%rax),%edx
0x000000000057c40b <+15187>:	cmp    $0xfd,%dl
0x000000000057c40e <+15190>:	jbe    0x57c583 <_PyEval_EvalFrameDefault+15563>
0x000000000057c414 <+15196>:	cmpw   $0x0,0x543030(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057c41c <+15204>:	jne    0x57c59c <_PyEval_EvalFrameDefault+15588>
0x000000000057c422 <+15210>:	mov    $0x0,%edx
0x000000000057c427 <+15215>:	or     %edx,%eax
0x000000000057c429 <+15217>:	or     %eax,%r12d
0x000000000057c42c <+15220>:	movzbl %r12b,%eax
0x000000000057c430 <+15224>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057c438 <+15232>:	mov    %r14,%rbx
0x000000000057c43b <+15235>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057c440 <+15240>:	mov    $0x7444e0,%ecx
0x000000000057c445 <+15245>:	mov    $0xa16,%edx
0x000000000057c44a <+15250>:	mov    $0x74045c,%esi
0x000000000057c44f <+15255>:	mov    $0x7409c3,%edi
0x000000000057c454 <+15260>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c459 <+15265>:	mov    $0x7444e0,%ecx
0x000000000057c45e <+15270>:	mov    $0xa17,%edx
0x000000000057c463 <+15275>:	mov    $0x74045c,%esi
0x000000000057c468 <+15280>:	mov    $0x74092c,%edi
0x000000000057c46d <+15285>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c472 <+15290>:	mov    $0x7444e0,%ecx
0x000000000057c477 <+15295>:	mov    $0xa18,%edx
0x000000000057c47c <+15300>:	mov    $0x74045c,%esi
0x000000000057c481 <+15305>:	mov    $0x7408da,%edi
0x000000000057c486 <+15310>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c48b <+15315>:	lea    0x88(%rsp),%rdx
0x000000000057c493 <+15323>:	mov    0x48(%rsp),%rsi
0x000000000057c498 <+15328>:	mov    %r13,%rdi
0x000000000057c49b <+15331>:	call   0x494512 <PyIter_Send>
0x000000000057c4a0 <+15336>:	mov    %eax,%r12d
0x000000000057c4a3 <+15339>:	jmp    0x57c385 <_PyEval_EvalFrameDefault+15053>
0x000000000057c4a8 <+15344>:	mov    %r13,%rdi
0x000000000057c4ab <+15347>:	call   0x493cdb <PyIter_Check>
0x000000000057c4b0 <+15352>:	test   %eax,%eax
0x000000000057c4b2 <+15354>:	je     0x57c356 <_PyEval_EvalFrameDefault+15006>
0x000000000057c4b8 <+15360>:	mov    0x8(%r13),%rax
0x000000000057c4bc <+15364>:	mov    %r13,%rdi
0x000000000057c4bf <+15367>:	call   *0xe0(%rax)
0x000000000057c4c5 <+15373>:	mov    %rax,0x88(%rsp)
0x000000000057c4cd <+15381>:	jmp    0x57c370 <_PyEval_EvalFrameDefault+15032>
0x000000000057c4d2 <+15386>:	mov    0x18(%rsp),%rax
0x000000000057c4d7 <+15391>:	cmpq   $0x0,0x48(%rax)
0x000000000057c4dc <+15396>:	je     0x57c4f1 <_PyEval_EvalFrameDefault+15417>
0x000000000057c4de <+15398>:	mov    0x4118f3(%rip),%rsi        # 0x98ddd8 <PyExc_StopIteration>
0x000000000057c4e5 <+15405>:	mov    %rax,%rdi
0x000000000057c4e8 <+15408>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057c4ed <+15413>:	test   %eax,%eax
0x000000000057c4ef <+15415>:	jne    0x57c514 <_PyEval_EvalFrameDefault+15452>
0x000000000057c4f1 <+15417>:	lea    0x88(%rsp),%rdi
0x000000000057c4f9 <+15425>:	call   0x4c0115 <_PyGen_FetchStopIterationValue>
0x000000000057c4fe <+15430>:	mov    %eax,%r12d
0x000000000057c501 <+15433>:	test   %eax,%eax
0x000000000057c503 <+15435>:	je     0x57c385 <_PyEval_EvalFrameDefault+15053>
0x000000000057c509 <+15441>:	mov    $0xffffffff,%r12d
0x000000000057c50f <+15447>:	jmp    0x57c385 <_PyEval_EvalFrameDefault+15053>
0x000000000057c514 <+15452>:	mov    0x18(%rsp),%rdx
0x000000000057c519 <+15457>:	mov    0x58(%rdx),%rsi
0x000000000057c51d <+15461>:	mov    0x48(%rdx),%rdi
0x000000000057c521 <+15465>:	mov    %rbp,%rcx
0x000000000057c524 <+15468>:	call   0x578770 <call_exc_trace>
0x000000000057c529 <+15473>:	jmp    0x57c4f1 <_PyEval_EvalFrameDefault+15417>
0x000000000057c52b <+15475>:	cmpq   $0x0,0x88(%rsp)
0x000000000057c534 <+15484>:	jne    0x57c53e <_PyEval_EvalFrameDefault+15494>
0x000000000057c536 <+15486>:	mov    %r14,%rbx
0x000000000057c539 <+15489>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c53e <+15494>:	mov    $0x7444e0,%ecx
0x000000000057c543 <+15499>:	mov    $0xa36,%edx
0x000000000057c548 <+15504>:	mov    $0x74045c,%esi
0x000000000057c54d <+15509>:	mov    $0x7409d3,%edi
0x000000000057c552 <+15514>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c557 <+15519>:	mov    $0x7444e0,%ecx
0x000000000057c55c <+15524>:	mov    $0xa3a,%edx
0x000000000057c561 <+15529>:	mov    $0x74045c,%esi
0x000000000057c566 <+15534>:	mov    $0x7409e2,%edi
0x000000000057c56b <+15539>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c570 <+15544>:	mov    %r13,%rdx
0x000000000057c573 <+15547>:	mov    %r14,%rsi
0x000000000057c576 <+15550>:	mov    %rbp,%rdi
0x000000000057c579 <+15553>:	call   0x573f7b <lltrace_instruction>
0x000000000057c57e <+15558>:	jmp    0x57c400 <_PyEval_EvalFrameDefault+15176>
0x000000000057c583 <+15563>:	mov    $0x7444e0,%ecx
0x000000000057c588 <+15568>:	mov    $0xa3e,%edx
0x000000000057c58d <+15573>:	mov    $0x74045c,%esi
0x000000000057c592 <+15578>:	mov    $0x742a50,%edi
0x000000000057c597 <+15583>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c59c <+15588>:	mov    $0xffffffff,%edx
0x000000000057c5a1 <+15593>:	jmp    0x57c427 <_PyEval_EvalFrameDefault+15215>
0x000000000057c5a6 <+15598>:	cmp    $0x1,%r12d
0x000000000057c5aa <+15602>:	jne    0x57c645 <_PyEval_EvalFrameDefault+15757>
0x000000000057c5b0 <+15608>:	mov    0x88(%rsp),%rax
0x000000000057c5b8 <+15616>:	test   %rax,%rax
0x000000000057c5bb <+15619>:	je     0x57c65e <_PyEval_EvalFrameDefault+15782>
0x000000000057c5c1 <+15625>:	mov    %rax,(%r14)
0x000000000057c5c4 <+15628>:	mov    0x20(%rbp),%rdx
0x000000000057c5c8 <+15632>:	movslq 0x4c(%rdx),%rax
0x000000000057c5cc <+15636>:	mov    0x50(%rsp),%rcx
0x000000000057c5d1 <+15641>:	lea    (%rcx,%rax,8),%rcx
0x000000000057c5d5 <+15645>:	mov    %rbx,%rax
0x000000000057c5d8 <+15648>:	sub    %rcx,%rax
0x000000000057c5db <+15651>:	sar    $0x3,%rax
0x000000000057c5df <+15655>:	cmp    %eax,0x44(%rdx)
0x000000000057c5e2 <+15658>:	jl     0x57c677 <_PyEval_EvalFrameDefault+15807>
0x000000000057c5e8 <+15664>:	movzwl (%r15),%r12d
0x000000000057c5ec <+15668>:	mov    %r12d,%eax
0x000000000057c5ef <+15671>:	shr    $0x8,%ax
0x000000000057c5f3 <+15675>:	movzwl %ax,%eax
0x000000000057c5f6 <+15678>:	mov    %eax,0x8(%rsp)
0x000000000057c5fa <+15682>:	cmpl   $0x0,0x14(%rsp)
0x000000000057c5ff <+15687>:	jne    0x57c690 <_PyEval_EvalFrameDefault+15832>
0x000000000057c605 <+15693>:	movzbl 0xc0(%rsp),%eax
0x000000000057c60d <+15701>:	lea    -0x1(%rax),%edx
0x000000000057c610 <+15704>:	cmp    $0xfd,%dl
0x000000000057c613 <+15707>:	jbe    0x57c6a3 <_PyEval_EvalFrameDefault+15851>
0x000000000057c619 <+15713>:	cmpw   $0x0,0x542e2b(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057c621 <+15721>:	jne    0x57c6bc <_PyEval_EvalFrameDefault+15876>
0x000000000057c627 <+15727>:	mov    $0x0,%edx
0x000000000057c62c <+15732>:	or     %edx,%eax
0x000000000057c62e <+15734>:	or     %eax,%r12d
0x000000000057c631 <+15737>:	movzbl %r12b,%eax
0x000000000057c635 <+15741>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057c63d <+15749>:	mov    %r15,%r13
0x000000000057c640 <+15752>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057c645 <+15757>:	mov    $0x7444e0,%ecx
0x000000000057c64a <+15762>:	mov    $0xa40,%edx
0x000000000057c64f <+15767>:	mov    $0x74045c,%esi
0x000000000057c654 <+15772>:	mov    $0x7409f1,%edi
0x000000000057c659 <+15777>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c65e <+15782>:	mov    $0x7444e0,%ecx
0x000000000057c663 <+15787>:	mov    $0xa41,%edx
0x000000000057c668 <+15792>:	mov    $0x74045c,%esi
0x000000000057c66d <+15797>:	mov    $0x7409e2,%edi
0x000000000057c672 <+15802>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c677 <+15807>:	mov    $0x7444e0,%ecx
0x000000000057c67c <+15812>:	mov    $0xa42,%edx
0x000000000057c681 <+15817>:	mov    $0x74045c,%esi
0x000000000057c686 <+15822>:	mov    $0x7408bc,%edi
0x000000000057c68b <+15827>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c690 <+15832>:	mov    %r15,%rdx
0x000000000057c693 <+15835>:	mov    %rbx,%rsi
0x000000000057c696 <+15838>:	mov    %rbp,%rdi
0x000000000057c699 <+15841>:	call   0x573f7b <lltrace_instruction>
0x000000000057c69e <+15846>:	jmp    0x57c605 <_PyEval_EvalFrameDefault+15693>
0x000000000057c6a3 <+15851>:	mov    $0x7444e0,%ecx
0x000000000057c6a8 <+15856>:	mov    $0xa43,%edx
0x000000000057c6ad <+15861>:	mov    $0x74045c,%esi
0x000000000057c6b2 <+15866>:	mov    $0x742a50,%edi
0x000000000057c6b7 <+15871>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c6bc <+15876>:	mov    $0xffffffff,%edx
0x000000000057c6c1 <+15881>:	jmp    0x57c62c <_PyEval_EvalFrameDefault+15732>
0x000000000057c6c6 <+15886>:	lea    0x2(%r13),%r15
0x000000000057c6ca <+15890>:	mov    %r13,0x38(%rbp)
0x000000000057c6ce <+15894>:	mov    -0x8(%rbx),%r12
0x000000000057c6d2 <+15898>:	mov    0x20(%rbp),%rax
0x000000000057c6d6 <+15902>:	testb  $0x2,0x31(%rax)
0x000000000057c6da <+15906>:	je     0x57c754 <_PyEval_EvalFrameDefault+16028>
0x000000000057c6dc <+15908>:	mov    %r12,%rdi
0x000000000057c6df <+15911>:	call   0x4c0ff4 <_PyAsyncGenValueWrapperNew>
0x000000000057c6e4 <+15916>:	test   %rax,%rax
0x000000000057c6e7 <+15919>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057c6ed <+15925>:	mov    %rax,-0x8(%rbx)
0x000000000057c6f1 <+15929>:	mov    %r12,%rdx
0x000000000057c6f4 <+15932>:	mov    $0xa4e,%esi
0x000000000057c6f9 <+15937>:	mov    $0x74045c,%edi
0x000000000057c6fe <+15942>:	call   0x573c83 <Py_DECREF>
0x000000000057c703 <+15947>:	movzwl (%r15),%r12d
0x000000000057c707 <+15951>:	mov    %r12d,%eax
0x000000000057c70a <+15954>:	shr    $0x8,%ax
0x000000000057c70e <+15958>:	movzwl %ax,%eax
0x000000000057c711 <+15961>:	mov    %eax,0x8(%rsp)
0x000000000057c715 <+15965>:	cmpl   $0x0,0x14(%rsp)
0x000000000057c71a <+15970>:	jne    0x57c76d <_PyEval_EvalFrameDefault+16053>
0x000000000057c71c <+15972>:	movzbl 0xc0(%rsp),%eax
0x000000000057c724 <+15980>:	lea    -0x1(%rax),%edx
0x000000000057c727 <+15983>:	cmp    $0xfd,%dl
0x000000000057c72a <+15986>:	jbe    0x57c77d <_PyEval_EvalFrameDefault+16069>
0x000000000057c72c <+15988>:	cmpw   $0x0,0x542d18(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057c734 <+15996>:	jne    0x57c796 <_PyEval_EvalFrameDefault+16094>
0x000000000057c736 <+15998>:	mov    $0x0,%edx
0x000000000057c73b <+16003>:	or     %edx,%eax
0x000000000057c73d <+16005>:	or     %eax,%r12d
0x000000000057c740 <+16008>:	movzbl %r12b,%eax
0x000000000057c744 <+16012>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057c74c <+16020>:	mov    %r15,%r13
0x000000000057c74f <+16023>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057c754 <+16028>:	mov    $0x7444e0,%ecx
0x000000000057c759 <+16033>:	mov    $0xa48,%edx
0x000000000057c75e <+16038>:	mov    $0x74045c,%esi
0x000000000057c763 <+16043>:	mov    $0x742c68,%edi
0x000000000057c768 <+16048>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c76d <+16053>:	mov    %r15,%rdx
0x000000000057c770 <+16056>:	mov    %rbx,%rsi
0x000000000057c773 <+16059>:	mov    %rbp,%rdi
0x000000000057c776 <+16062>:	call   0x573f7b <lltrace_instruction>
0x000000000057c77b <+16067>:	jmp    0x57c71c <_PyEval_EvalFrameDefault+15972>
0x000000000057c77d <+16069>:	mov    $0x7444e0,%ecx
0x000000000057c782 <+16074>:	mov    $0xa4f,%edx
0x000000000057c787 <+16079>:	mov    $0x74045c,%esi
0x000000000057c78c <+16084>:	mov    $0x742a50,%edi
0x000000000057c791 <+16089>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c796 <+16094>:	mov    $0xffffffff,%edx
0x000000000057c79b <+16099>:	jmp    0x57c73b <_PyEval_EvalFrameDefault+16003>
0x000000000057c79d <+16101>:	mov    %r13,0x38(%rbp)
0x000000000057c7a1 <+16105>:	cmpb   $0x0,0x44(%rbp)
0x000000000057c7a5 <+16109>:	je     0x57c870 <_PyEval_EvalFrameDefault+16312>
0x000000000057c7ab <+16115>:	lea    0x48(%rbp),%r14
0x000000000057c7af <+16119>:	mov    0x20(%rbp),%rax
0x000000000057c7b3 <+16123>:	movslq 0x4c(%rax),%rax
0x000000000057c7b7 <+16127>:	lea    (%r14,%rax,8),%rdx
0x000000000057c7bb <+16131>:	mov    %rbx,%rax
0x000000000057c7be <+16134>:	sub    %rdx,%rax
0x000000000057c7c1 <+16137>:	sar    $0x3,%rax
0x000000000057c7c5 <+16141>:	test   %eax,%eax
0x000000000057c7c7 <+16143>:	jle    0x57c889 <_PyEval_EvalFrameDefault+16337>
0x000000000057c7cd <+16149>:	lea    -0x8(%rbx),%r13
0x000000000057c7d1 <+16153>:	mov    -0x8(%rbx),%r12
0x000000000057c7d5 <+16157>:	mov    %rbp,%rdi
0x000000000057c7d8 <+16160>:	call   0x572fa9 <_PyFrame_GetGenerator>
0x000000000057c7dd <+16165>:	movb   $0xff,0x4b(%rax)
0x000000000057c7e1 <+16169>:	mov    %r13,%rax
0x000000000057c7e4 <+16172>:	sub    %r14,%rax
0x000000000057c7e7 <+16175>:	sar    $0x3,%rax
0x000000000057c7eb <+16179>:	mov    %eax,0x40(%rbp)
0x000000000057c7ee <+16182>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057c7f6 <+16190>:	jne    0x57c8a2 <_PyEval_EvalFrameDefault+16362>
0x000000000057c7fc <+16196>:	cmpw   $0x0,0x542c3e(%rip)        # 0xabf442 <python_function__return_semaphore>
0x000000000057c804 <+16204>:	jne    0x57c8d1 <_PyEval_EvalFrameDefault+16409>
0x000000000057c80a <+16210>:	mov    0x18(%rsp),%rcx
0x000000000057c80f <+16215>:	mov    0x20(%rcx),%eax
0x000000000057c812 <+16218>:	mov    %eax,0x8(%rsp)
0x000000000057c816 <+16222>:	add    $0x1,%eax
0x000000000057c819 <+16225>:	mov    %eax,0x20(%rcx)
0x000000000057c81c <+16228>:	mov    0xd0(%rsp),%rax
0x000000000057c824 <+16236>:	mov    %rax,0x38(%rcx)
0x000000000057c828 <+16240>:	movzbl 0xc0(%rsp),%edx
0x000000000057c830 <+16248>:	mov    %dl,(%rax)
0x000000000057c832 <+16250>:	mov    0x38(%rcx),%rax
0x000000000057c836 <+16254>:	mov    0x30(%rbp),%rcx
0x000000000057c83a <+16258>:	cmp    %rcx,0x8(%rax)
0x000000000057c83e <+16262>:	jne    0x57c8de <_PyEval_EvalFrameDefault+16422>
0x000000000057c844 <+16268>:	mov    0x18(%rsp),%rdi
0x000000000057c849 <+16273>:	call   0x573630 <_PyErr_Occurred>
0x000000000057c84e <+16278>:	test   %rax,%rax
0x000000000057c851 <+16281>:	je     0x578adb <_PyEval_EvalFrameDefault+547>
0x000000000057c857 <+16287>:	mov    $0x7444e0,%ecx
0x000000000057c85c <+16292>:	mov    $0xa5e,%edx
0x000000000057c861 <+16297>:	mov    $0x74045c,%esi
0x000000000057c866 <+16302>:	mov    $0x6dba3b,%edi
0x000000000057c86b <+16307>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c870 <+16312>:	mov    $0x7444e0,%ecx
0x000000000057c875 <+16317>:	mov    $0xa53,%edx
0x000000000057c87a <+16322>:	mov    $0x74045c,%esi
0x000000000057c87f <+16327>:	mov    $0x7409c3,%edi
0x000000000057c884 <+16332>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c889 <+16337>:	mov    $0x7444e0,%ecx
0x000000000057c88e <+16342>:	mov    $0xa54,%edx
0x000000000057c893 <+16347>:	mov    $0x74045c,%esi
0x000000000057c898 <+16352>:	mov    $0x7408da,%edi
0x000000000057c89d <+16357>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c8a2 <+16362>:	mov    %r12,%rdx
0x000000000057c8a5 <+16365>:	mov    %rbp,%rsi
0x000000000057c8a8 <+16368>:	mov    0x18(%rsp),%rdi
0x000000000057c8ad <+16373>:	call   0x57804b <trace_function_exit>
0x000000000057c8b2 <+16378>:	test   %eax,%eax
0x000000000057c8b4 <+16380>:	je     0x57c7fc <_PyEval_EvalFrameDefault+16196>
0x000000000057c8ba <+16386>:	mov    %r12,%rdx
0x000000000057c8bd <+16389>:	mov    $0xa57,%esi
0x000000000057c8c2 <+16394>:	mov    $0x74045c,%edi
0x000000000057c8c7 <+16399>:	call   0x573c83 <Py_DECREF>
0x000000000057c8cc <+16404>:	jmp    0x578a7e <_PyEval_EvalFrameDefault+454>
0x000000000057c8d1 <+16409>:	mov    %rbp,%rdi
0x000000000057c8d4 <+16412>:	call   0x576cf2 <dtrace_function_return>
0x000000000057c8d9 <+16417>:	jmp    0x57c80a <_PyEval_EvalFrameDefault+16210>
0x000000000057c8de <+16422>:	mov    $0x7444e0,%ecx
0x000000000057c8e3 <+16427>:	mov    $0xa5d,%edx
0x000000000057c8e8 <+16432>:	mov    $0x74045c,%esi
0x000000000057c8ed <+16437>:	mov    $0x6e2990,%edi
0x000000000057c8f2 <+16442>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c8f7 <+16447>:	lea    0x2(%r13),%r14
0x000000000057c8fb <+16451>:	mov    %r13,0x38(%rbp)
0x000000000057c8ff <+16455>:	mov    0x18(%rsp),%rax
0x000000000057c904 <+16460>:	mov    0x78(%rax),%rdx
0x000000000057c908 <+16464>:	mov    (%rdx),%rdi
0x000000000057c90b <+16467>:	mov    0x20(%rbp),%rax
0x000000000057c90f <+16471>:	movslq 0x4c(%rax),%rax
0x000000000057c913 <+16475>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057c918 <+16480>:	mov    %rbx,%rax
0x000000000057c91b <+16483>:	sub    %rcx,%rax
0x000000000057c91e <+16486>:	sar    $0x3,%rax
0x000000000057c922 <+16490>:	test   %eax,%eax
0x000000000057c924 <+16492>:	jle    0x57c987 <_PyEval_EvalFrameDefault+16591>
0x000000000057c926 <+16494>:	sub    $0x8,%rbx
0x000000000057c92a <+16498>:	mov    (%rbx),%rax
0x000000000057c92d <+16501>:	mov    %rax,(%rdx)
0x000000000057c930 <+16504>:	call   0x573cb3 <Py_XDECREF>
0x000000000057c935 <+16509>:	movzwl 0x2(%r13),%r12d
0x000000000057c93a <+16514>:	mov    %r12d,%eax
0x000000000057c93d <+16517>:	shr    $0x8,%ax
0x000000000057c941 <+16521>:	movzwl %ax,%eax
0x000000000057c944 <+16524>:	mov    %eax,0x8(%rsp)
0x000000000057c948 <+16528>:	cmpl   $0x0,0x14(%rsp)
0x000000000057c94d <+16533>:	jne    0x57c9a0 <_PyEval_EvalFrameDefault+16616>
0x000000000057c94f <+16535>:	movzbl 0xc0(%rsp),%eax
0x000000000057c957 <+16543>:	lea    -0x1(%rax),%edx
0x000000000057c95a <+16546>:	cmp    $0xfd,%dl
0x000000000057c95d <+16549>:	jbe    0x57c9b0 <_PyEval_EvalFrameDefault+16632>
0x000000000057c95f <+16551>:	cmpw   $0x0,0x542ae5(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057c967 <+16559>:	jne    0x57c9c9 <_PyEval_EvalFrameDefault+16657>
0x000000000057c969 <+16561>:	mov    $0x0,%edx
0x000000000057c96e <+16566>:	or     %edx,%eax
0x000000000057c970 <+16568>:	or     %eax,%r12d
0x000000000057c973 <+16571>:	movzbl %r12b,%eax
0x000000000057c977 <+16575>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057c97f <+16583>:	mov    %r14,%r13
0x000000000057c982 <+16586>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057c987 <+16591>:	mov    $0x7444e0,%ecx
0x000000000057c98c <+16596>:	mov    $0xa65,%edx
0x000000000057c991 <+16601>:	mov    $0x74045c,%esi
0x000000000057c996 <+16606>:	mov    $0x7408da,%edi
0x000000000057c99b <+16611>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c9a0 <+16616>:	mov    %r14,%rdx
0x000000000057c9a3 <+16619>:	mov    %rbx,%rsi
0x000000000057c9a6 <+16622>:	mov    %rbp,%rdi
0x000000000057c9a9 <+16625>:	call   0x573f7b <lltrace_instruction>
0x000000000057c9ae <+16630>:	jmp    0x57c94f <_PyEval_EvalFrameDefault+16535>
0x000000000057c9b0 <+16632>:	mov    $0x7444e0,%ecx
0x000000000057c9b5 <+16637>:	mov    $0xa67,%edx
0x000000000057c9ba <+16642>:	mov    $0x74045c,%esi
0x000000000057c9bf <+16647>:	mov    $0x742a50,%edi
0x000000000057c9c4 <+16652>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057c9c9 <+16657>:	mov    $0xffffffff,%edx
0x000000000057c9ce <+16662>:	jmp    0x57c96e <_PyEval_EvalFrameDefault+16566>
0x000000000057c9d0 <+16664>:	lea    0x2(%r13),%r15
0x000000000057c9d4 <+16668>:	mov    %r13,0x38(%rbp)
0x000000000057c9d8 <+16672>:	mov    0x8(%rsp),%eax
0x000000000057c9dc <+16676>:	test   %eax,%eax
0x000000000057c9de <+16678>:	je     0x57ca1a <_PyEval_EvalFrameDefault+16738>
0x000000000057c9e0 <+16680>:	not    %eax
0x000000000057c9e2 <+16682>:	cltq
0x000000000057c9e4 <+16684>:	mov    (%rbx,%rax,8),%rdi
0x000000000057c9e8 <+16688>:	mov    0x8(%rdi),%rax
0x000000000057c9ec <+16692>:	testb  $0x1,0xab(%rax)
0x000000000057c9f3 <+16699>:	je     0x57caae <_PyEval_EvalFrameDefault+16886>
0x000000000057c9f9 <+16705>:	call   0x4d61ba <PyLong_AsLong>
0x000000000057c9fe <+16710>:	mov    0x38(%rsp),%rcx
0x000000000057ca03 <+16715>:	lea    (%rcx,%rax,2),%rax
0x000000000057ca07 <+16719>:	mov    %rax,0x38(%rbp)
0x000000000057ca0b <+16723>:	mov    0x18(%rsp),%rdi
0x000000000057ca10 <+16728>:	call   0x573630 <_PyErr_Occurred>
0x000000000057ca15 <+16733>:	test   %rax,%rax
0x000000000057ca18 <+16736>:	jne    0x57ca95 <_PyEval_EvalFrameDefault+16861>
0x000000000057ca1a <+16738>:	mov    0x20(%rbp),%rax
0x000000000057ca1e <+16742>:	movslq 0x4c(%rax),%rax
0x000000000057ca22 <+16746>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057ca27 <+16751>:	mov    %rbx,%rax
0x000000000057ca2a <+16754>:	sub    %rdx,%rax
0x000000000057ca2d <+16757>:	sar    $0x3,%rax
0x000000000057ca31 <+16761>:	test   %eax,%eax
0x000000000057ca33 <+16763>:	jle    0x57cac7 <_PyEval_EvalFrameDefault+16911>
0x000000000057ca39 <+16769>:	lea    -0x8(%rbx),%r12
0x000000000057ca3d <+16773>:	mov    -0x8(%rbx),%r13
0x000000000057ca41 <+16777>:	test   %r13,%r13
0x000000000057ca44 <+16780>:	je     0x57cae0 <_PyEval_EvalFrameDefault+16936>
0x000000000057ca4a <+16786>:	mov    0x8(%r13),%rbx
0x000000000057ca4e <+16790>:	testb  $0x40,0xab(%rbx)
0x000000000057ca55 <+16797>:	je     0x57cae0 <_PyEval_EvalFrameDefault+16936>
0x000000000057ca5b <+16803>:	addq   $0x1,0x547025(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ca63 <+16811>:	mov    (%rbx),%rax
0x000000000057ca66 <+16814>:	add    $0x1,%rax
0x000000000057ca6a <+16818>:	mov    %rax,(%rbx)
0x000000000057ca6d <+16821>:	mov    %r13,%rdi
0x000000000057ca70 <+16824>:	call   0x4ba45d <PyException_GetTraceback>
0x000000000057ca75 <+16829>:	mov    %rax,%rcx
0x000000000057ca78 <+16832>:	mov    %r13,%rdx
0x000000000057ca7b <+16835>:	mov    %rbx,%rsi
0x000000000057ca7e <+16838>:	mov    0x18(%rsp),%rdi
0x000000000057ca83 <+16843>:	call   0x5a24cc <_PyErr_Restore>
0x000000000057ca88 <+16848>:	mov    %r12,%rbx
0x000000000057ca8b <+16851>:	mov    0x38(%rsp),%r14
0x000000000057ca90 <+16856>:	jmp    0x589dbb <_PyEval_EvalFrameDefault+70915>
0x000000000057ca95 <+16861>:	mov    $0x7444e0,%ecx
0x000000000057ca9a <+16866>:	mov    $0xa6f,%edx
0x000000000057ca9f <+16871>:	mov    $0x74045c,%esi
0x000000000057caa4 <+16876>:	mov    $0x6dba3b,%edi
0x000000000057caa9 <+16881>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057caae <+16886>:	mov    $0x7444e0,%ecx
0x000000000057cab3 <+16891>:	mov    $0xa72,%edx
0x000000000057cab8 <+16896>:	mov    $0x74045c,%esi
0x000000000057cabd <+16901>:	mov    $0x740a0a,%edi
0x000000000057cac2 <+16906>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cac7 <+16911>:	mov    $0x7444e0,%ecx
0x000000000057cacc <+16916>:	mov    $0xa77,%edx
0x000000000057cad1 <+16921>:	mov    $0x74045c,%esi
0x000000000057cad6 <+16926>:	mov    $0x7408da,%edi
0x000000000057cadb <+16931>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cae0 <+16936>:	mov    $0x7444e0,%ecx
0x000000000057cae5 <+16941>:	mov    $0xa78,%edx
0x000000000057caea <+16946>:	mov    $0x74045c,%esi
0x000000000057caef <+16951>:	mov    $0x742c98,%edi
0x000000000057caf4 <+16956>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057caf9 <+16961>:	lea    0x2(%r13),%r15
0x000000000057cafd <+16965>:	mov    %r13,0x38(%rbp)
0x000000000057cb01 <+16969>:	lea    0x48(%rbp),%r14
0x000000000057cb05 <+16973>:	mov    0x20(%rbp),%rax
0x000000000057cb09 <+16977>:	movslq 0x4c(%rax),%rax
0x000000000057cb0d <+16981>:	lea    (%r14,%rax,8),%rdx
0x000000000057cb11 <+16985>:	mov    %rbx,%rax
0x000000000057cb14 <+16988>:	sub    %rdx,%rax
0x000000000057cb17 <+16991>:	sar    $0x3,%rax
0x000000000057cb1b <+16995>:	test   %eax,%eax
0x000000000057cb1d <+16997>:	jle    0x57cc23 <_PyEval_EvalFrameDefault+17259>
0x000000000057cb23 <+17003>:	lea    -0x8(%rbx),%r13
0x000000000057cb27 <+17007>:	mov    -0x8(%rbx),%r12
0x000000000057cb2b <+17011>:	mov    0x8(%r12),%rax
0x000000000057cb30 <+17016>:	testb  $0x2,0xab(%rax)
0x000000000057cb37 <+17023>:	je     0x57cc3c <_PyEval_EvalFrameDefault+17284>
0x000000000057cb3d <+17029>:	mov    %r13,%rax
0x000000000057cb40 <+17032>:	sub    %rdx,%rax
0x000000000057cb43 <+17035>:	sar    $0x3,%rax
0x000000000057cb47 <+17039>:	test   %eax,%eax
0x000000000057cb49 <+17041>:	jle    0x57cc55 <_PyEval_EvalFrameDefault+17309>
0x000000000057cb4f <+17047>:	sub    $0x10,%rbx
0x000000000057cb53 <+17051>:	mov    -0x8(%r13),%rax
0x000000000057cb57 <+17055>:	mov    %r12,%rsi
0x000000000057cb5a <+17058>:	mov    %rax,0x8(%rsp)
0x000000000057cb5f <+17063>:	mov    %rax,%rdi
0x000000000057cb62 <+17066>:	call   0x4bb119 <_PyExc_PrepReraiseStar>
0x000000000057cb67 <+17071>:	mov    %rax,0x48(%rsp)
0x000000000057cb6c <+17076>:	mov    %r12,%rdx
0x000000000057cb6f <+17079>:	mov    $0xa85,%esi
0x000000000057cb74 <+17084>:	mov    $0x74045c,%edi
0x000000000057cb79 <+17089>:	call   0x573c83 <Py_DECREF>
0x000000000057cb7e <+17094>:	mov    0x8(%rsp),%rdx
0x000000000057cb83 <+17099>:	mov    $0xa86,%esi
0x000000000057cb88 <+17104>:	mov    $0x74045c,%edi
0x000000000057cb8d <+17109>:	call   0x573c83 <Py_DECREF>
0x000000000057cb92 <+17114>:	mov    0x48(%rsp),%rax
0x000000000057cb97 <+17119>:	test   %rax,%rax
0x000000000057cb9a <+17122>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057cba0 <+17128>:	mov    %rax,-0x8(%r13)
0x000000000057cba4 <+17132>:	mov    0x20(%rbp),%rdx
0x000000000057cba8 <+17136>:	movslq 0x4c(%rdx),%rax
0x000000000057cbac <+17140>:	lea    (%r14,%rax,8),%rcx
0x000000000057cbb0 <+17144>:	mov    %r13,%rax
0x000000000057cbb3 <+17147>:	sub    %rcx,%rax
0x000000000057cbb6 <+17150>:	sar    $0x3,%rax
0x000000000057cbba <+17154>:	cmp    %eax,0x44(%rdx)
0x000000000057cbbd <+17157>:	jl     0x57cc6e <_PyEval_EvalFrameDefault+17334>
0x000000000057cbc3 <+17163>:	movzwl (%r15),%r12d
0x000000000057cbc7 <+17167>:	mov    %r12d,%eax
0x000000000057cbca <+17170>:	shr    $0x8,%ax
0x000000000057cbce <+17174>:	movzwl %ax,%eax
0x000000000057cbd1 <+17177>:	mov    %eax,0x8(%rsp)
0x000000000057cbd5 <+17181>:	cmpl   $0x0,0x14(%rsp)
0x000000000057cbda <+17186>:	jne    0x57cc87 <_PyEval_EvalFrameDefault+17359>
0x000000000057cbe0 <+17192>:	movzbl 0xc0(%rsp),%eax
0x000000000057cbe8 <+17200>:	lea    -0x1(%rax),%edx
0x000000000057cbeb <+17203>:	cmp    $0xfd,%dl
0x000000000057cbee <+17206>:	jbe    0x57cc9a <_PyEval_EvalFrameDefault+17378>
0x000000000057cbf4 <+17212>:	cmpw   $0x0,0x542850(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057cbfc <+17220>:	jne    0x57ccb3 <_PyEval_EvalFrameDefault+17403>
0x000000000057cc02 <+17226>:	mov    $0x0,%edx
0x000000000057cc07 <+17231>:	or     %edx,%eax
0x000000000057cc09 <+17233>:	or     %eax,%r12d
0x000000000057cc0c <+17236>:	movzbl %r12b,%eax
0x000000000057cc10 <+17240>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057cc18 <+17248>:	mov    %r13,%rbx
0x000000000057cc1b <+17251>:	mov    %r15,%r13
0x000000000057cc1e <+17254>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057cc23 <+17259>:	mov    $0x7444e0,%ecx
0x000000000057cc28 <+17264>:	mov    $0xa80,%edx
0x000000000057cc2d <+17269>:	mov    $0x74045c,%esi
0x000000000057cc32 <+17274>:	mov    $0x7408da,%edi
0x000000000057cc37 <+17279>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cc3c <+17284>:	mov    $0x7444e0,%ecx
0x000000000057cc41 <+17289>:	mov    $0xa81,%edx
0x000000000057cc46 <+17294>:	mov    $0x74045c,%esi
0x000000000057cc4b <+17299>:	mov    $0x6dfc25,%edi
0x000000000057cc50 <+17304>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cc55 <+17309>:	mov    $0x7444e0,%ecx
0x000000000057cc5a <+17314>:	mov    $0xa82,%edx
0x000000000057cc5f <+17319>:	mov    $0x74045c,%esi
0x000000000057cc64 <+17324>:	mov    $0x7408da,%edi
0x000000000057cc69 <+17329>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cc6e <+17334>:	mov    $0x7444e0,%ecx
0x000000000057cc73 <+17339>:	mov    $0xa8c,%edx
0x000000000057cc78 <+17344>:	mov    $0x74045c,%esi
0x000000000057cc7d <+17349>:	mov    $0x7408bc,%edi
0x000000000057cc82 <+17354>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cc87 <+17359>:	mov    %r15,%rdx
0x000000000057cc8a <+17362>:	mov    %r13,%rsi
0x000000000057cc8d <+17365>:	mov    %rbp,%rdi
0x000000000057cc90 <+17368>:	call   0x573f7b <lltrace_instruction>
0x000000000057cc95 <+17373>:	jmp    0x57cbe0 <_PyEval_EvalFrameDefault+17192>
0x000000000057cc9a <+17378>:	mov    $0x7444e0,%ecx
0x000000000057cc9f <+17383>:	mov    $0xa8d,%edx
0x000000000057cca4 <+17388>:	mov    $0x74045c,%esi
0x000000000057cca9 <+17393>:	mov    $0x742a50,%edi
0x000000000057ccae <+17398>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ccb3 <+17403>:	mov    $0xffffffff,%edx
0x000000000057ccb8 <+17408>:	jmp    0x57cc07 <_PyEval_EvalFrameDefault+17231>
0x000000000057ccbd <+17413>:	lea    0x2(%r13),%r15
0x000000000057ccc1 <+17417>:	mov    %r13,0x38(%rbp)
0x000000000057ccc5 <+17421>:	lea    0x48(%rbp),%r14
0x000000000057ccc9 <+17425>:	mov    0x20(%rbp),%rax
0x000000000057cccd <+17429>:	movslq 0x4c(%rax),%rax
0x000000000057ccd1 <+17433>:	lea    (%r14,%rax,8),%rdx
0x000000000057ccd5 <+17437>:	mov    %rbx,%rax
0x000000000057ccd8 <+17440>:	sub    %rdx,%rax
0x000000000057ccdb <+17443>:	sar    $0x3,%rax
0x000000000057ccdf <+17447>:	test   %eax,%eax
0x000000000057cce1 <+17449>:	jle    0x57cdc8 <_PyEval_EvalFrameDefault+17680>
0x000000000057cce7 <+17455>:	lea    -0x8(%rbx),%r13
0x000000000057cceb <+17459>:	mov    -0x8(%rbx),%r12
0x000000000057ccef <+17463>:	test   %r12,%r12
0x000000000057ccf2 <+17466>:	je     0x57cde1 <_PyEval_EvalFrameDefault+17705>
0x000000000057ccf8 <+17472>:	mov    0x8(%r12),%rax
0x000000000057ccfd <+17477>:	testb  $0x40,0xab(%rax)
0x000000000057cd04 <+17484>:	je     0x57cde1 <_PyEval_EvalFrameDefault+17705>
0x000000000057cd0a <+17490>:	mov    0x4112bf(%rip),%rsi        # 0x98dfd0 <PyExc_StopAsyncIteration>
0x000000000057cd11 <+17497>:	mov    %r12,%rdi
0x000000000057cd14 <+17500>:	call   0x5a25d5 <PyErr_GivenExceptionMatches>
0x000000000057cd19 <+17505>:	test   %eax,%eax
0x000000000057cd1b <+17507>:	je     0x57ce49 <_PyEval_EvalFrameDefault+17809>
0x000000000057cd21 <+17513>:	mov    %r12,%rdx
0x000000000057cd24 <+17516>:	mov    $0xa94,%esi
0x000000000057cd29 <+17521>:	mov    $0x74045c,%edi
0x000000000057cd2e <+17526>:	call   0x573c83 <Py_DECREF>
0x000000000057cd33 <+17531>:	mov    0x20(%rbp),%rax
0x000000000057cd37 <+17535>:	movslq 0x4c(%rax),%rax
0x000000000057cd3b <+17539>:	lea    (%r14,%rax,8),%rdx
0x000000000057cd3f <+17543>:	mov    %r13,%rax
0x000000000057cd42 <+17546>:	sub    %rdx,%rax
0x000000000057cd45 <+17549>:	sar    $0x3,%rax
0x000000000057cd49 <+17553>:	test   %eax,%eax
0x000000000057cd4b <+17555>:	jle    0x57cdfa <_PyEval_EvalFrameDefault+17730>
0x000000000057cd51 <+17561>:	lea    -0x10(%rbx),%r13
0x000000000057cd55 <+17565>:	mov    -0x10(%rbx),%rdx
0x000000000057cd59 <+17569>:	mov    $0xa95,%esi
0x000000000057cd5e <+17574>:	mov    $0x74045c,%edi
0x000000000057cd63 <+17579>:	call   0x573c83 <Py_DECREF>
0x000000000057cd68 <+17584>:	movzwl (%r15),%r12d
0x000000000057cd6c <+17588>:	mov    %r12d,%eax
0x000000000057cd6f <+17591>:	shr    $0x8,%ax
0x000000000057cd73 <+17595>:	movzwl %ax,%eax
0x000000000057cd76 <+17598>:	mov    %eax,0x8(%rsp)
0x000000000057cd7a <+17602>:	cmpl   $0x0,0x14(%rsp)
0x000000000057cd7f <+17607>:	jne    0x57ce13 <_PyEval_EvalFrameDefault+17755>
0x000000000057cd85 <+17613>:	movzbl 0xc0(%rsp),%eax
0x000000000057cd8d <+17621>:	lea    -0x1(%rax),%edx
0x000000000057cd90 <+17624>:	cmp    $0xfd,%dl
0x000000000057cd93 <+17627>:	jbe    0x57ce26 <_PyEval_EvalFrameDefault+17774>
0x000000000057cd99 <+17633>:	cmpw   $0x0,0x5426ab(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057cda1 <+17641>:	jne    0x57ce3f <_PyEval_EvalFrameDefault+17799>
0x000000000057cda7 <+17647>:	mov    $0x0,%edx
0x000000000057cdac <+17652>:	or     %edx,%eax
0x000000000057cdae <+17654>:	or     %eax,%r12d
0x000000000057cdb1 <+17657>:	movzbl %r12b,%eax
0x000000000057cdb5 <+17661>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057cdbd <+17669>:	mov    %r13,%rbx
0x000000000057cdc0 <+17672>:	mov    %r15,%r13
0x000000000057cdc3 <+17675>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057cdc8 <+17680>:	mov    $0x7444e0,%ecx
0x000000000057cdcd <+17685>:	mov    $0xa91,%edx
0x000000000057cdd2 <+17690>:	mov    $0x74045c,%esi
0x000000000057cdd7 <+17695>:	mov    $0x7408da,%edi
0x000000000057cddc <+17700>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cde1 <+17705>:	mov    $0x7444e0,%ecx
0x000000000057cde6 <+17710>:	mov    $0xa92,%edx
0x000000000057cdeb <+17715>:	mov    $0x74045c,%esi
0x000000000057cdf0 <+17720>:	mov    $0x742c98,%edi
0x000000000057cdf5 <+17725>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cdfa <+17730>:	mov    $0x7444e0,%ecx
0x000000000057cdff <+17735>:	mov    $0xa95,%edx
0x000000000057ce04 <+17740>:	mov    $0x74045c,%esi
0x000000000057ce09 <+17745>:	mov    $0x7408da,%edi
0x000000000057ce0e <+17750>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ce13 <+17755>:	mov    %r15,%rdx
0x000000000057ce16 <+17758>:	mov    %r13,%rsi
0x000000000057ce19 <+17761>:	mov    %rbp,%rdi
0x000000000057ce1c <+17764>:	call   0x573f7b <lltrace_instruction>
0x000000000057ce21 <+17769>:	jmp    0x57cd85 <_PyEval_EvalFrameDefault+17613>
0x000000000057ce26 <+17774>:	mov    $0x7444e0,%ecx
0x000000000057ce2b <+17779>:	mov    $0xa96,%edx
0x000000000057ce30 <+17784>:	mov    $0x74045c,%esi
0x000000000057ce35 <+17789>:	mov    $0x742a50,%edi
0x000000000057ce3a <+17794>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ce3f <+17799>:	mov    $0xffffffff,%edx
0x000000000057ce44 <+17804>:	jmp    0x57cdac <_PyEval_EvalFrameDefault+17652>
0x000000000057ce49 <+17809>:	mov    0x8(%r12),%rbx
0x000000000057ce4e <+17814>:	addq   $0x1,0x546c32(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ce56 <+17822>:	mov    (%rbx),%rax
0x000000000057ce59 <+17825>:	add    $0x1,%rax
0x000000000057ce5d <+17829>:	mov    %rax,(%rbx)
0x000000000057ce60 <+17832>:	mov    %r12,%rdi
0x000000000057ce63 <+17835>:	call   0x4ba45d <PyException_GetTraceback>
0x000000000057ce68 <+17840>:	mov    %rax,%rcx
0x000000000057ce6b <+17843>:	mov    %r12,%rdx
0x000000000057ce6e <+17846>:	mov    %rbx,%rsi
0x000000000057ce71 <+17849>:	mov    0x18(%rsp),%rdi
0x000000000057ce76 <+17854>:	call   0x5a24cc <_PyErr_Restore>
0x000000000057ce7b <+17859>:	mov    %r13,%rbx
0x000000000057ce7e <+17862>:	mov    0x38(%rsp),%r14
0x000000000057ce83 <+17867>:	jmp    0x589dbb <_PyEval_EvalFrameDefault+70915>
0x000000000057ce88 <+17872>:	lea    0x2(%r13),%r15
0x000000000057ce8c <+17876>:	mov    %r13,0x38(%rbp)
0x000000000057ce90 <+17880>:	mov    0x40c541(%rip),%rax        # 0x9893d8 <PyExc_AssertionError>
0x000000000057ce97 <+17887>:	addq   $0x1,0x546be9(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ce9f <+17895>:	mov    (%rax),%rcx
0x000000000057cea2 <+17898>:	lea    0x1(%rcx),%rdx
0x000000000057cea6 <+17902>:	mov    %rdx,(%rax)
0x000000000057cea9 <+17905>:	lea    0x8(%rbx),%r14
0x000000000057cead <+17909>:	mov    %rax,(%rbx)
0x000000000057ceb0 <+17912>:	mov    0x20(%rbp),%rdx
0x000000000057ceb4 <+17916>:	movslq 0x4c(%rdx),%rax
0x000000000057ceb8 <+17920>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057cebd <+17925>:	mov    %r14,%rax
0x000000000057cec0 <+17928>:	sub    %rcx,%rax
0x000000000057cec3 <+17931>:	sar    $0x3,%rax
0x000000000057cec7 <+17935>:	cmp    %eax,0x44(%rdx)
0x000000000057ceca <+17938>:	jl     0x57cf21 <_PyEval_EvalFrameDefault+18025>
0x000000000057cecc <+17940>:	movzwl 0x2(%r13),%r12d
0x000000000057ced1 <+17945>:	mov    %r12d,%eax
0x000000000057ced4 <+17948>:	shr    $0x8,%ax
0x000000000057ced8 <+17952>:	movzwl %ax,%eax
0x000000000057cedb <+17955>:	mov    %eax,0x8(%rsp)
0x000000000057cedf <+17959>:	cmpl   $0x0,0x14(%rsp)
0x000000000057cee4 <+17964>:	jne    0x57cf3a <_PyEval_EvalFrameDefault+18050>
0x000000000057cee6 <+17966>:	movzbl 0xc0(%rsp),%eax
0x000000000057ceee <+17974>:	lea    -0x1(%rax),%edx
0x000000000057cef1 <+17977>:	cmp    $0xfd,%dl
0x000000000057cef4 <+17980>:	jbe    0x57cf4a <_PyEval_EvalFrameDefault+18066>
0x000000000057cef6 <+17982>:	cmpw   $0x0,0x54254e(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057cefe <+17990>:	jne    0x57cf63 <_PyEval_EvalFrameDefault+18091>
0x000000000057cf00 <+17992>:	mov    $0x0,%edx
0x000000000057cf05 <+17997>:	or     %edx,%eax
0x000000000057cf07 <+17999>:	or     %eax,%r12d
0x000000000057cf0a <+18002>:	movzbl %r12b,%eax
0x000000000057cf0e <+18006>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057cf16 <+18014>:	mov    %r14,%rbx
0x000000000057cf19 <+18017>:	mov    %r15,%r13
0x000000000057cf1c <+18020>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057cf21 <+18025>:	mov    $0x7444e0,%ecx
0x000000000057cf26 <+18030>:	mov    $0xaa3,%edx
0x000000000057cf2b <+18035>:	mov    $0x74045c,%esi
0x000000000057cf30 <+18040>:	mov    $0x7408bc,%edi
0x000000000057cf35 <+18045>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cf3a <+18050>:	mov    %r15,%rdx
0x000000000057cf3d <+18053>:	mov    %r14,%rsi
0x000000000057cf40 <+18056>:	mov    %rbp,%rdi
0x000000000057cf43 <+18059>:	call   0x573f7b <lltrace_instruction>
0x000000000057cf48 <+18064>:	jmp    0x57cee6 <_PyEval_EvalFrameDefault+17966>
0x000000000057cf4a <+18066>:	mov    $0x7444e0,%ecx
0x000000000057cf4f <+18071>:	mov    $0xaa4,%edx
0x000000000057cf54 <+18076>:	mov    $0x74045c,%esi
0x000000000057cf59 <+18081>:	mov    $0x742a50,%edi
0x000000000057cf5e <+18086>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057cf63 <+18091>:	mov    $0xffffffff,%edx
0x000000000057cf68 <+18096>:	jmp    0x57cf05 <_PyEval_EvalFrameDefault+17997>
0x000000000057cf6a <+18098>:	lea    0x2(%r13),%r15
0x000000000057cf6e <+18102>:	mov    %r13,0x38(%rbp)
0x000000000057cf72 <+18106>:	mov    0x10(%rbp),%rdi
0x000000000057cf76 <+18110>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057cf7e <+18118>:	je     0x57d01e <_PyEval_EvalFrameDefault+18278>
0x000000000057cf84 <+18124>:	mov    $0xa9c6e8,%esi
0x000000000057cf89 <+18129>:	call   0x492ead <PyObject_GetItem>
0x000000000057cf8e <+18134>:	test   %rax,%rax
0x000000000057cf91 <+18137>:	je     0x57d072 <_PyEval_EvalFrameDefault+18362>
0x000000000057cf97 <+18143>:	lea    0x8(%rbx),%r13
0x000000000057cf9b <+18147>:	mov    %rax,(%rbx)
0x000000000057cf9e <+18150>:	mov    0x20(%rbp),%rdx
0x000000000057cfa2 <+18154>:	movslq 0x4c(%rdx),%rax
0x000000000057cfa6 <+18158>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057cfab <+18163>:	mov    %r13,%rax
0x000000000057cfae <+18166>:	sub    %rcx,%rax
0x000000000057cfb1 <+18169>:	sar    $0x3,%rax
0x000000000057cfb5 <+18173>:	cmp    %eax,0x44(%rdx)
0x000000000057cfb8 <+18176>:	jl     0x57d0a6 <_PyEval_EvalFrameDefault+18414>
0x000000000057cfbe <+18182>:	movzwl (%r15),%r12d
0x000000000057cfc2 <+18186>:	mov    %r12d,%eax
0x000000000057cfc5 <+18189>:	shr    $0x8,%ax
0x000000000057cfc9 <+18193>:	movzwl %ax,%eax
0x000000000057cfcc <+18196>:	mov    %eax,0x8(%rsp)
0x000000000057cfd0 <+18200>:	cmpl   $0x0,0x14(%rsp)
0x000000000057cfd5 <+18205>:	jne    0x57d0bf <_PyEval_EvalFrameDefault+18439>
0x000000000057cfdb <+18211>:	movzbl 0xc0(%rsp),%eax
0x000000000057cfe3 <+18219>:	lea    -0x1(%rax),%edx
0x000000000057cfe6 <+18222>:	cmp    $0xfd,%dl
0x000000000057cfe9 <+18225>:	jbe    0x57d0d2 <_PyEval_EvalFrameDefault+18458>
0x000000000057cfef <+18231>:	cmpw   $0x0,0x542455(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057cff7 <+18239>:	jne    0x57d0eb <_PyEval_EvalFrameDefault+18483>
0x000000000057cffd <+18245>:	mov    $0x0,%edx
0x000000000057d002 <+18250>:	or     %edx,%eax
0x000000000057d004 <+18252>:	or     %eax,%r12d
0x000000000057d007 <+18255>:	movzbl %r12b,%eax
0x000000000057d00b <+18259>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d013 <+18267>:	mov    %r13,%rbx
0x000000000057d016 <+18270>:	mov    %r15,%r13
0x000000000057d019 <+18273>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d01e <+18278>:	mov    $0xa9c6e8,%esi
0x000000000057d023 <+18283>:	call   0x4e0f48 <_PyDict_GetItemWithError>
0x000000000057d028 <+18288>:	test   %rax,%rax
0x000000000057d02b <+18291>:	je     0x57d044 <_PyEval_EvalFrameDefault+18316>
0x000000000057d02d <+18293>:	addq   $0x1,0x546a53(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057d035 <+18301>:	mov    (%rax),%rcx
0x000000000057d038 <+18304>:	lea    0x1(%rcx),%rdx
0x000000000057d03c <+18308>:	mov    %rdx,(%rax)
0x000000000057d03f <+18311>:	jmp    0x57cf97 <_PyEval_EvalFrameDefault+18143>
0x000000000057d044 <+18316>:	mov    0x18(%rsp),%rdi
0x000000000057d049 <+18321>:	call   0x573630 <_PyErr_Occurred>
0x000000000057d04e <+18326>:	test   %rax,%rax
0x000000000057d051 <+18329>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d057 <+18335>:	mov    $0x740a1e,%edx
0x000000000057d05c <+18340>:	mov    0x40dd35(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057d063 <+18347>:	mov    0x18(%rsp),%rdi
0x000000000057d068 <+18352>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000057d06d <+18357>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d072 <+18362>:	mov    0x40ce1f(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057d079 <+18369>:	mov    0x18(%rsp),%rdi
0x000000000057d07e <+18374>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057d083 <+18379>:	test   %eax,%eax
0x000000000057d085 <+18381>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d08b <+18387>:	mov    $0x740a1e,%edx
0x000000000057d090 <+18392>:	mov    0x40dd01(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057d097 <+18399>:	mov    0x18(%rsp),%rdi
0x000000000057d09c <+18404>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000057d0a1 <+18409>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d0a6 <+18414>:	mov    $0x7444e0,%ecx
0x000000000057d0ab <+18419>:	mov    $0xabe,%edx
0x000000000057d0b0 <+18424>:	mov    $0x74045c,%esi
0x000000000057d0b5 <+18429>:	mov    $0x7408bc,%edi
0x000000000057d0ba <+18434>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d0bf <+18439>:	mov    %r15,%rdx
0x000000000057d0c2 <+18442>:	mov    %r13,%rsi
0x000000000057d0c5 <+18445>:	mov    %rbp,%rdi
0x000000000057d0c8 <+18448>:	call   0x573f7b <lltrace_instruction>
0x000000000057d0cd <+18453>:	jmp    0x57cfdb <_PyEval_EvalFrameDefault+18211>
0x000000000057d0d2 <+18458>:	mov    $0x7444e0,%ecx
0x000000000057d0d7 <+18463>:	mov    $0xabf,%edx
0x000000000057d0dc <+18468>:	mov    $0x74045c,%esi
0x000000000057d0e1 <+18473>:	mov    $0x742a50,%edi
0x000000000057d0e6 <+18478>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d0eb <+18483>:	mov    $0xffffffff,%edx
0x000000000057d0f0 <+18488>:	jmp    0x57d002 <_PyEval_EvalFrameDefault+18250>
0x000000000057d0f5 <+18493>:	lea    0x2(%r13),%r15
0x000000000057d0f9 <+18497>:	mov    %r13,0x38(%rbp)
0x000000000057d0fd <+18501>:	movslq 0x8(%rsp),%rsi
0x000000000057d102 <+18506>:	mov    0x30(%rsp),%rdi
0x000000000057d107 <+18511>:	call   0x500470 <PyTuple_GetItem>
0x000000000057d10c <+18516>:	mov    %rax,%rsi
0x000000000057d10f <+18519>:	mov    0x20(%rbp),%rax
0x000000000057d113 <+18523>:	movslq 0x4c(%rax),%rax
0x000000000057d117 <+18527>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057d11c <+18532>:	mov    %rbx,%rax
0x000000000057d11f <+18535>:	sub    %rdx,%rax
0x000000000057d122 <+18538>:	sar    $0x3,%rax
0x000000000057d126 <+18542>:	test   %eax,%eax
0x000000000057d128 <+18544>:	jle    0x57d1d3 <_PyEval_EvalFrameDefault+18715>
0x000000000057d12e <+18550>:	sub    $0x8,%rbx
0x000000000057d132 <+18554>:	mov    (%rbx),%r13
0x000000000057d135 <+18557>:	mov    0x18(%rbp),%rdi
0x000000000057d139 <+18561>:	test   %rdi,%rdi
0x000000000057d13c <+18564>:	je     0x57d1ec <_PyEval_EvalFrameDefault+18740>
0x000000000057d142 <+18570>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057d14a <+18578>:	je     0x57d221 <_PyEval_EvalFrameDefault+18793>
0x000000000057d150 <+18584>:	mov    %r13,%rdx
0x000000000057d153 <+18587>:	call   0x493232 <PyObject_SetItem>
0x000000000057d158 <+18592>:	mov    %eax,%r12d
0x000000000057d15b <+18595>:	mov    %r13,%rdx
0x000000000057d15e <+18598>:	mov    $0xad1,%esi
0x000000000057d163 <+18603>:	mov    $0x74045c,%edi
0x000000000057d168 <+18608>:	call   0x573c83 <Py_DECREF>
0x000000000057d16d <+18613>:	test   %r12d,%r12d
0x000000000057d170 <+18616>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d176 <+18622>:	movzwl (%r15),%r12d
0x000000000057d17a <+18626>:	mov    %r12d,%eax
0x000000000057d17d <+18629>:	shr    $0x8,%ax
0x000000000057d181 <+18633>:	movzwl %ax,%eax
0x000000000057d184 <+18636>:	mov    %eax,0x8(%rsp)
0x000000000057d188 <+18640>:	cmpl   $0x0,0x14(%rsp)
0x000000000057d18d <+18645>:	jne    0x57d231 <_PyEval_EvalFrameDefault+18809>
0x000000000057d193 <+18651>:	movzbl 0xc0(%rsp),%eax
0x000000000057d19b <+18659>:	lea    -0x1(%rax),%edx
0x000000000057d19e <+18662>:	cmp    $0xfd,%dl
0x000000000057d1a1 <+18665>:	jbe    0x57d244 <_PyEval_EvalFrameDefault+18828>
0x000000000057d1a7 <+18671>:	cmpw   $0x0,0x54229d(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057d1af <+18679>:	jne    0x57d25d <_PyEval_EvalFrameDefault+18853>
0x000000000057d1b5 <+18685>:	mov    $0x0,%edx
0x000000000057d1ba <+18690>:	or     %edx,%eax
0x000000000057d1bc <+18692>:	or     %eax,%r12d
0x000000000057d1bf <+18695>:	movzbl %r12b,%eax
0x000000000057d1c3 <+18699>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d1cb <+18707>:	mov    %r15,%r13
0x000000000057d1ce <+18710>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d1d3 <+18715>:	mov    $0x7444e0,%ecx
0x000000000057d1d8 <+18720>:	mov    $0xac4,%edx
0x000000000057d1dd <+18725>:	mov    $0x74045c,%esi
0x000000000057d1e2 <+18730>:	mov    $0x7408da,%edi
0x000000000057d1e7 <+18735>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d1ec <+18740>:	mov    %rsi,%rcx
0x000000000057d1ef <+18743>:	mov    $0x742cc0,%edx
0x000000000057d1f4 <+18748>:	mov    0x40b9bd(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x000000000057d1fb <+18755>:	mov    0x18(%rsp),%rdi
0x000000000057d200 <+18760>:	mov    $0x0,%eax
0x000000000057d205 <+18765>:	call   0x5a3574 <_PyErr_Format>
0x000000000057d20a <+18770>:	mov    %r13,%rdx
0x000000000057d20d <+18773>:	mov    $0xaca,%esi
0x000000000057d212 <+18778>:	mov    $0x74045c,%edi
0x000000000057d217 <+18783>:	call   0x573c83 <Py_DECREF>
0x000000000057d21c <+18788>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d221 <+18793>:	mov    %r13,%rdx
0x000000000057d224 <+18796>:	call   0x4e1213 <PyDict_SetItem>
0x000000000057d229 <+18801>:	mov    %eax,%r12d
0x000000000057d22c <+18804>:	jmp    0x57d15b <_PyEval_EvalFrameDefault+18595>
0x000000000057d231 <+18809>:	mov    %r15,%rdx
0x000000000057d234 <+18812>:	mov    %rbx,%rsi
0x000000000057d237 <+18815>:	mov    %rbp,%rdi
0x000000000057d23a <+18818>:	call   0x573f7b <lltrace_instruction>
0x000000000057d23f <+18823>:	jmp    0x57d193 <_PyEval_EvalFrameDefault+18651>
0x000000000057d244 <+18828>:	mov    $0x7444e0,%ecx
0x000000000057d249 <+18833>:	mov    $0xad4,%edx
0x000000000057d24e <+18838>:	mov    $0x74045c,%esi
0x000000000057d253 <+18843>:	mov    $0x742a50,%edi
0x000000000057d258 <+18848>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d25d <+18853>:	mov    $0xffffffff,%edx
0x000000000057d262 <+18858>:	jmp    0x57d1ba <_PyEval_EvalFrameDefault+18690>
0x000000000057d267 <+18863>:	lea    0x2(%r13),%r15
0x000000000057d26b <+18867>:	mov    %r13,0x38(%rbp)
0x000000000057d26f <+18871>:	movslq 0x8(%rsp),%rsi
0x000000000057d274 <+18876>:	mov    0x30(%rsp),%rdi
0x000000000057d279 <+18881>:	call   0x500470 <PyTuple_GetItem>
0x000000000057d27e <+18886>:	mov    %rax,%r12
0x000000000057d281 <+18889>:	mov    0x18(%rbp),%rdi
0x000000000057d285 <+18893>:	test   %rdi,%rdi
0x000000000057d288 <+18896>:	je     0x57d2f7 <_PyEval_EvalFrameDefault+19007>
0x000000000057d28a <+18898>:	mov    %rax,%rsi
0x000000000057d28d <+18901>:	call   0x49346f <PyObject_DelItem>
0x000000000057d292 <+18906>:	test   %eax,%eax
0x000000000057d294 <+18908>:	jne    0x57d31a <_PyEval_EvalFrameDefault+19042>
0x000000000057d29a <+18914>:	movzwl (%r15),%r12d
0x000000000057d29e <+18918>:	mov    %r12d,%eax
0x000000000057d2a1 <+18921>:	shr    $0x8,%ax
0x000000000057d2a5 <+18925>:	movzwl %ax,%eax
0x000000000057d2a8 <+18928>:	mov    %eax,0x8(%rsp)
0x000000000057d2ac <+18932>:	cmpl   $0x0,0x14(%rsp)
0x000000000057d2b1 <+18937>:	jne    0x57d338 <_PyEval_EvalFrameDefault+19072>
0x000000000057d2b7 <+18943>:	movzbl 0xc0(%rsp),%eax
0x000000000057d2bf <+18951>:	lea    -0x1(%rax),%edx
0x000000000057d2c2 <+18954>:	cmp    $0xfd,%dl
0x000000000057d2c5 <+18957>:	jbe    0x57d34b <_PyEval_EvalFrameDefault+19091>
0x000000000057d2cb <+18963>:	cmpw   $0x0,0x542179(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057d2d3 <+18971>:	jne    0x57d364 <_PyEval_EvalFrameDefault+19116>
0x000000000057d2d9 <+18977>:	mov    $0x0,%edx
0x000000000057d2de <+18982>:	or     %edx,%eax
0x000000000057d2e0 <+18984>:	or     %eax,%r12d
0x000000000057d2e3 <+18987>:	movzbl %r12b,%eax
0x000000000057d2e7 <+18991>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d2ef <+18999>:	mov    %r15,%r13
0x000000000057d2f2 <+19002>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d2f7 <+19007>:	mov    %rax,%rcx
0x000000000057d2fa <+19010>:	mov    $0x740a38,%edx
0x000000000057d2ff <+19015>:	mov    0x40b8b2(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x000000000057d306 <+19022>:	mov    0x18(%rsp),%rdi
0x000000000057d30b <+19027>:	mov    $0x0,%eax
0x000000000057d310 <+19032>:	call   0x5a3574 <_PyErr_Format>
0x000000000057d315 <+19037>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d31a <+19042>:	mov    %r12,%rcx
0x000000000057d31d <+19045>:	mov    $0x740a53,%edx
0x000000000057d322 <+19050>:	mov    0x40da6f(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057d329 <+19057>:	mov    0x18(%rsp),%rdi
0x000000000057d32e <+19062>:	call   0x576e0d <format_exc_check_arg>
0x000000000057d333 <+19067>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d338 <+19072>:	mov    %r15,%rdx
0x000000000057d33b <+19075>:	mov    %rbx,%rsi
0x000000000057d33e <+19078>:	mov    %rbp,%rdi
0x000000000057d341 <+19081>:	call   0x573f7b <lltrace_instruction>
0x000000000057d346 <+19086>:	jmp    0x57d2b7 <_PyEval_EvalFrameDefault+18943>
0x000000000057d34b <+19091>:	mov    $0x7444e0,%ecx
0x000000000057d350 <+19096>:	mov    $0xae7,%edx
0x000000000057d355 <+19101>:	mov    $0x74045c,%esi
0x000000000057d35a <+19106>:	mov    $0x742a50,%edi
0x000000000057d35f <+19111>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d364 <+19116>:	mov    $0xffffffff,%edx
0x000000000057d369 <+19121>:	jmp    0x57d2de <_PyEval_EvalFrameDefault+18982>
0x000000000057d36e <+19126>:	lea    0x2(%r13),%r15
0x000000000057d372 <+19130>:	mov    %r13,0x38(%rbp)
0x000000000057d376 <+19134>:	lea    0x48(%rbp),%r13
0x000000000057d37a <+19138>:	mov    0x20(%rbp),%rax
0x000000000057d37e <+19142>:	movslq 0x4c(%rax),%rax
0x000000000057d382 <+19146>:	lea    0x0(%r13,%rax,8),%rdx
0x000000000057d387 <+19151>:	mov    %rbx,%rax
0x000000000057d38a <+19154>:	sub    %rdx,%rax
0x000000000057d38d <+19157>:	sar    $0x3,%rax
0x000000000057d391 <+19161>:	test   %eax,%eax
0x000000000057d393 <+19163>:	jle    0x57d465 <_PyEval_EvalFrameDefault+19373>
0x000000000057d399 <+19169>:	lea    -0x8(%rbx),%r14
0x000000000057d39d <+19173>:	mov    -0x8(%rbx),%r12
0x000000000057d3a1 <+19177>:	mov    0x8(%rsp),%edx
0x000000000057d3a5 <+19181>:	movslq %edx,%rax
0x000000000057d3a8 <+19184>:	lea    (%r14,%rax,8),%rbx
0x000000000057d3ac <+19188>:	mov    %rbx,%r8
0x000000000057d3af <+19191>:	mov    $0xffffffff,%ecx
0x000000000057d3b4 <+19196>:	mov    %r12,%rsi
0x000000000057d3b7 <+19199>:	mov    0x18(%rsp),%rdi
0x000000000057d3bc <+19204>:	call   0x57409f <unpack_iterable>
0x000000000057d3c1 <+19209>:	test   %eax,%eax
0x000000000057d3c3 <+19211>:	je     0x57d47e <_PyEval_EvalFrameDefault+19398>
0x000000000057d3c9 <+19217>:	cmpl   $0x0,0x8(%rsp)
0x000000000057d3ce <+19222>:	js     0x57d498 <_PyEval_EvalFrameDefault+19424>
0x000000000057d3d4 <+19228>:	mov    0x20(%rbp),%rdx
0x000000000057d3d8 <+19232>:	movslq 0x4c(%rdx),%rax
0x000000000057d3dc <+19236>:	lea    0x0(%r13,%rax,8),%rcx
0x000000000057d3e1 <+19241>:	mov    %rbx,%rax
0x000000000057d3e4 <+19244>:	sub    %rcx,%rax
0x000000000057d3e7 <+19247>:	sar    $0x3,%rax
0x000000000057d3eb <+19251>:	cmp    %eax,0x44(%rdx)
0x000000000057d3ee <+19254>:	jl     0x57d4b1 <_PyEval_EvalFrameDefault+19449>
0x000000000057d3f4 <+19260>:	mov    %r12,%rdx
0x000000000057d3f7 <+19263>:	mov    $0xaf3,%esi
0x000000000057d3fc <+19268>:	mov    $0x74045c,%edi
0x000000000057d401 <+19273>:	call   0x573c83 <Py_DECREF>
0x000000000057d406 <+19278>:	lea    0x2(%r15),%r13
0x000000000057d40a <+19282>:	movzwl 0x2(%r15),%r12d
0x000000000057d40f <+19287>:	mov    %r12d,%eax
0x000000000057d412 <+19290>:	shr    $0x8,%ax
0x000000000057d416 <+19294>:	movzwl %ax,%eax
0x000000000057d419 <+19297>:	mov    %eax,0x8(%rsp)
0x000000000057d41d <+19301>:	cmpl   $0x0,0x14(%rsp)
0x000000000057d422 <+19306>:	jne    0x57d4ca <_PyEval_EvalFrameDefault+19474>
0x000000000057d428 <+19312>:	movzbl 0xc0(%rsp),%eax
0x000000000057d430 <+19320>:	lea    -0x1(%rax),%edx
0x000000000057d433 <+19323>:	cmp    $0xfd,%dl
0x000000000057d436 <+19326>:	jbe    0x57d4dd <_PyEval_EvalFrameDefault+19493>
0x000000000057d43c <+19332>:	cmpw   $0x0,0x542008(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057d444 <+19340>:	jne    0x57d4f6 <_PyEval_EvalFrameDefault+19518>
0x000000000057d44a <+19346>:	mov    $0x0,%edx
0x000000000057d44f <+19351>:	or     %edx,%eax
0x000000000057d451 <+19353>:	or     %eax,%r12d
0x000000000057d454 <+19356>:	movzbl %r12b,%eax
0x000000000057d458 <+19360>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d460 <+19368>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d465 <+19373>:	mov    $0x7444e0,%ecx
0x000000000057d46a <+19378>:	mov    $0xaec,%edx
0x000000000057d46f <+19383>:	mov    $0x74045c,%esi
0x000000000057d474 <+19388>:	mov    $0x7408da,%edi
0x000000000057d479 <+19393>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d47e <+19398>:	mov    %r12,%rdx
0x000000000057d481 <+19401>:	mov    $0xaef,%esi
0x000000000057d486 <+19406>:	mov    $0x74045c,%edi
0x000000000057d48b <+19411>:	call   0x573c83 <Py_DECREF>
0x000000000057d490 <+19416>:	mov    %r14,%rbx
0x000000000057d493 <+19419>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057d498 <+19424>:	mov    $0x7444e0,%ecx
0x000000000057d49d <+19429>:	mov    $0xaf2,%edx
0x000000000057d4a2 <+19434>:	mov    $0x74045c,%esi
0x000000000057d4a7 <+19439>:	mov    $0x740a70,%edi
0x000000000057d4ac <+19444>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d4b1 <+19449>:	mov    $0x7444e0,%ecx
0x000000000057d4b6 <+19454>:	mov    $0xaf2,%edx
0x000000000057d4bb <+19459>:	mov    $0x74045c,%esi
0x000000000057d4c0 <+19464>:	mov    $0x7408bc,%edi
0x000000000057d4c5 <+19469>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d4ca <+19474>:	mov    %r13,%rdx
0x000000000057d4cd <+19477>:	mov    %rbx,%rsi
0x000000000057d4d0 <+19480>:	mov    %rbp,%rdi
0x000000000057d4d3 <+19483>:	call   0x573f7b <lltrace_instruction>
0x000000000057d4d8 <+19488>:	jmp    0x57d428 <_PyEval_EvalFrameDefault+19312>
0x000000000057d4dd <+19493>:	mov    $0x7444e0,%ecx
0x000000000057d4e2 <+19498>:	mov    $0xaf5,%edx
0x000000000057d4e7 <+19503>:	mov    $0x74045c,%esi
0x000000000057d4ec <+19508>:	mov    $0x742a50,%edi
0x000000000057d4f1 <+19513>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d4f6 <+19518>:	mov    $0xffffffff,%edx
0x000000000057d4fb <+19523>:	jmp    0x57d44f <_PyEval_EvalFrameDefault+19351>
0x000000000057d500 <+19528>:	lea    0x2(%r13),%r15
0x000000000057d504 <+19532>:	mov    %r13,0x38(%rbp)
0x000000000057d508 <+19536>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057d510 <+19544>:	jne    0x57d52a <_PyEval_EvalFrameDefault+19570>
0x000000000057d512 <+19546>:	movzwl 0x2(%r13),%eax
0x000000000057d517 <+19551>:	cmp    $0xf,%ax
0x000000000057d51b <+19555>:	jbe    0x57d543 <_PyEval_EvalFrameDefault+19595>
0x000000000057d51d <+19557>:	sub    $0x10,%eax
0x000000000057d520 <+19560>:	mov    %ax,0x2(%r13)
0x000000000057d525 <+19565>:	jmp    0x57d376 <_PyEval_EvalFrameDefault+19134>
0x000000000057d52a <+19570>:	mov    $0x7444e0,%ecx
0x000000000057d52f <+19575>:	mov    $0xaf9,%edx
0x000000000057d534 <+19580>:	mov    $0x74045c,%esi
0x000000000057d539 <+19585>:	mov    $0x7408ff,%edi
0x000000000057d53e <+19590>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d543 <+19595>:	mov    -0x8(%rbx),%rdi
0x000000000057d547 <+19599>:	mov    0x8(%rsp),%edx
0x000000000057d54b <+19603>:	mov    %r13,%rsi
0x000000000057d54e <+19606>:	call   0x5d0647 <_Py_Specialize_UnpackSequence>
0x000000000057d553 <+19611>:	movzwl 0x0(%r13),%r14d
0x000000000057d558 <+19616>:	cmpl   $0x0,0x14(%rsp)
0x000000000057d55d <+19621>:	jne    0x57d58b <_PyEval_EvalFrameDefault+19667>
0x000000000057d55f <+19623>:	movzbl 0xc0(%rsp),%r12d
0x000000000057d568 <+19632>:	cmpw   $0x0,0x541edc(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057d570 <+19640>:	jne    0x57d59b <_PyEval_EvalFrameDefault+19683>
0x000000000057d572 <+19642>:	mov    $0x0,%eax
0x000000000057d577 <+19647>:	or     %eax,%r12d
0x000000000057d57a <+19650>:	or     %r14d,%r12d
0x000000000057d57d <+19653>:	movzbl %r12b,%eax
0x000000000057d581 <+19657>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d589 <+19665>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d58b <+19667>:	mov    %r13,%rdx
0x000000000057d58e <+19670>:	mov    %rbx,%rsi
0x000000000057d591 <+19673>:	mov    %rbp,%rdi
0x000000000057d594 <+19676>:	call   0x573f7b <lltrace_instruction>
0x000000000057d599 <+19681>:	jmp    0x57d55f <_PyEval_EvalFrameDefault+19623>
0x000000000057d59b <+19683>:	mov    $0xffffffff,%eax
0x000000000057d5a0 <+19688>:	jmp    0x57d577 <_PyEval_EvalFrameDefault+19647>
0x000000000057d5a2 <+19690>:	lea    0x2(%r13),%r15
0x000000000057d5a6 <+19694>:	mov    %r13,0x38(%rbp)
0x000000000057d5aa <+19698>:	mov    -0x8(%rbx),%r14
0x000000000057d5ae <+19702>:	mov    0x8(%r14),%rax
0x000000000057d5b2 <+19706>:	mov    %rax,0x48(%rsp)
0x000000000057d5b7 <+19711>:	cmp    $0x999820,%rax
0x000000000057d5bd <+19717>:	je     0x57d60b <_PyEval_EvalFrameDefault+19795>
0x000000000057d5bf <+19719>:	movzbl %r12b,%r12d
0x000000000057d5c3 <+19723>:	movzbl 0x7472a0(%r12),%r12d
0x000000000057d5cc <+19732>:	movzwl (%r15),%eax
0x000000000057d5d0 <+19736>:	sub    $0x1,%eax
0x000000000057d5d3 <+19739>:	mov    %ax,(%r15)
0x000000000057d5d7 <+19743>:	test   %ax,%ax
0x000000000057d5da <+19746>:	jne    0x57d5f9 <_PyEval_EvalFrameDefault+19777>
0x000000000057d5dc <+19748>:	movzbl %r12b,%eax
0x000000000057d5e0 <+19752>:	movzbl 0x9a0ee0(%rax),%eax
0x000000000057d5e7 <+19759>:	test   %al,%al
0x000000000057d5e9 <+19761>:	je     0x589b07 <_PyEval_EvalFrameDefault+70223>
0x000000000057d5ef <+19767>:	mov    %al,-0x2(%r15)
0x000000000057d5f3 <+19771>:	movw   $0x1f5,(%r15)
0x000000000057d5f9 <+19777>:	lea    -0x2(%r15),%r13
0x000000000057d5fd <+19781>:	movzbl %r12b,%eax
0x000000000057d601 <+19785>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d609 <+19793>:	jmp    *%rax
0x000000000057d60b <+19795>:	mov    %r14,%rdi
0x000000000057d60e <+19798>:	call   0x573476 <PyTuple_GET_SIZE>
0x000000000057d613 <+19803>:	cmp    $0x2,%rax
0x000000000057d617 <+19807>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057d619 <+19809>:	mov    0x48(%rsp),%rax
0x000000000057d61e <+19814>:	testb  $0x4,0xab(%rax)
0x000000000057d625 <+19821>:	je     0x57d70a <_PyEval_EvalFrameDefault+20050>
0x000000000057d62b <+19827>:	mov    0x20(%r14),%rax
0x000000000057d62f <+19831>:	addq   $0x1,0x546451(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057d637 <+19839>:	mov    (%rax),%rcx
0x000000000057d63a <+19842>:	lea    0x1(%rcx),%rdx
0x000000000057d63e <+19846>:	mov    %rdx,(%rax)
0x000000000057d641 <+19849>:	mov    %rax,-0x8(%rbx)
0x000000000057d645 <+19853>:	mov    0x8(%r14),%rax
0x000000000057d649 <+19857>:	testb  $0x4,0xab(%rax)
0x000000000057d650 <+19864>:	je     0x57d723 <_PyEval_EvalFrameDefault+20075>
0x000000000057d656 <+19870>:	mov    0x18(%r14),%rax
0x000000000057d65a <+19874>:	lea    0x8(%rbx),%r15
0x000000000057d65e <+19878>:	addq   $0x1,0x546422(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057d666 <+19886>:	mov    (%rax),%rcx
0x000000000057d669 <+19889>:	lea    0x1(%rcx),%rdx
0x000000000057d66d <+19893>:	mov    %rdx,(%rax)
0x000000000057d670 <+19896>:	mov    %rax,(%rbx)
0x000000000057d673 <+19899>:	mov    0x20(%rbp),%rdx
0x000000000057d677 <+19903>:	movslq 0x4c(%rdx),%rax
0x000000000057d67b <+19907>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057d680 <+19912>:	mov    %r15,%rax
0x000000000057d683 <+19915>:	sub    %rcx,%rax
0x000000000057d686 <+19918>:	sar    $0x3,%rax
0x000000000057d68a <+19922>:	cmp    %eax,0x44(%rdx)
0x000000000057d68d <+19925>:	jl     0x57d73c <_PyEval_EvalFrameDefault+20100>
0x000000000057d693 <+19931>:	mov    %r14,%rdx
0x000000000057d696 <+19934>:	mov    $0xb0f,%esi
0x000000000057d69b <+19939>:	mov    $0x74045c,%edi
0x000000000057d6a0 <+19944>:	call   0x573c83 <Py_DECREF>
0x000000000057d6a5 <+19949>:	lea    0x4(%r13),%r14
0x000000000057d6a9 <+19953>:	movzwl 0x4(%r13),%r12d
0x000000000057d6ae <+19958>:	mov    %r12d,%eax
0x000000000057d6b1 <+19961>:	shr    $0x8,%ax
0x000000000057d6b5 <+19965>:	movzwl %ax,%eax
0x000000000057d6b8 <+19968>:	mov    %eax,0x8(%rsp)
0x000000000057d6bc <+19972>:	cmpl   $0x0,0x14(%rsp)
0x000000000057d6c1 <+19977>:	jne    0x57d755 <_PyEval_EvalFrameDefault+20125>
0x000000000057d6c7 <+19983>:	movzbl 0xc0(%rsp),%eax
0x000000000057d6cf <+19991>:	lea    -0x1(%rax),%edx
0x000000000057d6d2 <+19994>:	cmp    $0xfd,%dl
0x000000000057d6d5 <+19997>:	jbe    0x57d768 <_PyEval_EvalFrameDefault+20144>
0x000000000057d6db <+20003>:	cmpw   $0x0,0x541d69(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057d6e3 <+20011>:	jne    0x57d781 <_PyEval_EvalFrameDefault+20169>
0x000000000057d6e9 <+20017>:	mov    $0x0,%edx
0x000000000057d6ee <+20022>:	or     %edx,%eax
0x000000000057d6f0 <+20024>:	or     %eax,%r12d
0x000000000057d6f3 <+20027>:	movzbl %r12b,%eax
0x000000000057d6f7 <+20031>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d6ff <+20039>:	mov    %r15,%rbx
0x000000000057d702 <+20042>:	mov    %r14,%r13
0x000000000057d705 <+20045>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d70a <+20050>:	mov    $0x7444e0,%ecx
0x000000000057d70f <+20055>:	mov    $0xb0d,%edx
0x000000000057d714 <+20060>:	mov    $0x74045c,%esi
0x000000000057d719 <+20065>:	mov    $0x6d59fb,%edi
0x000000000057d71e <+20070>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d723 <+20075>:	mov    $0x7444e0,%ecx
0x000000000057d728 <+20080>:	mov    $0xb0e,%edx
0x000000000057d72d <+20085>:	mov    $0x74045c,%esi
0x000000000057d732 <+20090>:	mov    $0x6d59fb,%edi
0x000000000057d737 <+20095>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d73c <+20100>:	mov    $0x7444e0,%ecx
0x000000000057d741 <+20105>:	mov    $0xb0e,%edx
0x000000000057d746 <+20110>:	mov    $0x74045c,%esi
0x000000000057d74b <+20115>:	mov    $0x7408bc,%edi
0x000000000057d750 <+20120>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d755 <+20125>:	mov    %r14,%rdx
0x000000000057d758 <+20128>:	mov    %r15,%rsi
0x000000000057d75b <+20131>:	mov    %rbp,%rdi
0x000000000057d75e <+20134>:	call   0x573f7b <lltrace_instruction>
0x000000000057d763 <+20139>:	jmp    0x57d6c7 <_PyEval_EvalFrameDefault+19983>
0x000000000057d768 <+20144>:	mov    $0x7444e0,%ecx
0x000000000057d76d <+20149>:	mov    $0xb11,%edx
0x000000000057d772 <+20154>:	mov    $0x74045c,%esi
0x000000000057d777 <+20159>:	mov    $0x742a50,%edi
0x000000000057d77c <+20164>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d781 <+20169>:	mov    $0xffffffff,%edx
0x000000000057d786 <+20174>:	jmp    0x57d6ee <_PyEval_EvalFrameDefault+20022>
0x000000000057d78b <+20179>:	lea    0x2(%r13),%r15
0x000000000057d78f <+20183>:	mov    %r13,0x38(%rbp)
0x000000000057d793 <+20187>:	mov    -0x8(%rbx),%r14
0x000000000057d797 <+20191>:	mov    0x8(%r14),%rax
0x000000000057d79b <+20195>:	mov    %rax,0x48(%rsp)
0x000000000057d7a0 <+20200>:	cmp    $0x999820,%rax
0x000000000057d7a6 <+20206>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057d7ac <+20212>:	mov    %r14,%rdi
0x000000000057d7af <+20215>:	call   0x573476 <PyTuple_GET_SIZE>
0x000000000057d7b4 <+20220>:	mov    %rax,%rdx
0x000000000057d7b7 <+20223>:	movslq 0x8(%rsp),%rax
0x000000000057d7bc <+20228>:	cmp    %rax,%rdx
0x000000000057d7bf <+20231>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057d7c5 <+20237>:	lea    0x48(%rbp),%rcx
0x000000000057d7c9 <+20241>:	mov    0x20(%rbp),%rax
0x000000000057d7cd <+20245>:	movslq 0x4c(%rax),%rax
0x000000000057d7d1 <+20249>:	lea    (%rcx,%rax,8),%rdx
0x000000000057d7d5 <+20253>:	mov    %rbx,%rax
0x000000000057d7d8 <+20256>:	sub    %rdx,%rax
0x000000000057d7db <+20259>:	sar    $0x3,%rax
0x000000000057d7df <+20263>:	test   %eax,%eax
0x000000000057d7e1 <+20265>:	jle    0x57d84a <_PyEval_EvalFrameDefault+20370>
0x000000000057d7e3 <+20267>:	sub    $0x8,%rbx
0x000000000057d7e7 <+20271>:	mov    0x48(%rsp),%rax
0x000000000057d7ec <+20276>:	testb  $0x4,0xab(%rax)
0x000000000057d7f3 <+20283>:	je     0x57d863 <_PyEval_EvalFrameDefault+20395>
0x000000000057d7f5 <+20285>:	lea    0x18(%r14),%rdi
0x000000000057d7f9 <+20289>:	mov    0x8(%rsp),%eax
0x000000000057d7fd <+20293>:	mov    %eax,%edx
0x000000000057d7ff <+20295>:	sub    $0x1,%eax
0x000000000057d802 <+20298>:	test   %edx,%edx
0x000000000057d804 <+20300>:	je     0x57d895 <_PyEval_EvalFrameDefault+20445>
0x000000000057d80a <+20306>:	movslq %eax,%rdx
0x000000000057d80d <+20309>:	mov    (%rdi,%rdx,8),%rdx
0x000000000057d811 <+20313>:	lea    0x8(%rbx),%r8
0x000000000057d815 <+20317>:	addq   $0x1,0x54626b(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057d81d <+20325>:	mov    (%rdx),%rsi
0x000000000057d820 <+20328>:	add    $0x1,%rsi
0x000000000057d824 <+20332>:	mov    %rsi,(%rdx)
0x000000000057d827 <+20335>:	mov    %rdx,(%rbx)
0x000000000057d82a <+20338>:	mov    0x20(%rbp),%rsi
0x000000000057d82e <+20342>:	movslq 0x4c(%rsi),%rdx
0x000000000057d832 <+20346>:	lea    (%rcx,%rdx,8),%r9
0x000000000057d836 <+20350>:	mov    %r8,%rdx
0x000000000057d839 <+20353>:	sub    %r9,%rdx
0x000000000057d83c <+20356>:	sar    $0x3,%rdx
0x000000000057d840 <+20360>:	cmp    %edx,0x44(%rsi)
0x000000000057d843 <+20363>:	jl     0x57d87c <_PyEval_EvalFrameDefault+20420>
0x000000000057d845 <+20365>:	mov    %r8,%rbx
0x000000000057d848 <+20368>:	jmp    0x57d7fd <_PyEval_EvalFrameDefault+20293>
0x000000000057d84a <+20370>:	mov    $0x7444e0,%ecx
0x000000000057d84f <+20375>:	mov    $0xb19,%edx
0x000000000057d854 <+20380>:	mov    $0x74045c,%esi
0x000000000057d859 <+20385>:	mov    $0x7408ec,%edi
0x000000000057d85e <+20390>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d863 <+20395>:	mov    $0x7444e0,%ecx
0x000000000057d868 <+20400>:	mov    $0xb1a,%edx
0x000000000057d86d <+20405>:	mov    $0x74045c,%esi
0x000000000057d872 <+20410>:	mov    $0x6d59fb,%edi
0x000000000057d877 <+20415>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d87c <+20420>:	mov    $0x7444e0,%ecx
0x000000000057d881 <+20425>:	mov    $0xb1c,%edx
0x000000000057d886 <+20430>:	mov    $0x74045c,%esi
0x000000000057d88b <+20435>:	mov    $0x7408bc,%edi
0x000000000057d890 <+20440>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d895 <+20445>:	mov    %r14,%rdx
0x000000000057d898 <+20448>:	mov    $0xb1e,%esi
0x000000000057d89d <+20453>:	mov    $0x74045c,%edi
0x000000000057d8a2 <+20458>:	call   0x573c83 <Py_DECREF>
0x000000000057d8a7 <+20463>:	lea    0x4(%r13),%r14
0x000000000057d8ab <+20467>:	movzwl 0x4(%r13),%r12d
0x000000000057d8b0 <+20472>:	mov    %r12d,%eax
0x000000000057d8b3 <+20475>:	shr    $0x8,%ax
0x000000000057d8b7 <+20479>:	movzwl %ax,%eax
0x000000000057d8ba <+20482>:	mov    %eax,0x8(%rsp)
0x000000000057d8be <+20486>:	cmpl   $0x0,0x14(%rsp)
0x000000000057d8c3 <+20491>:	jne    0x57d8fd <_PyEval_EvalFrameDefault+20549>
0x000000000057d8c5 <+20493>:	movzbl 0xc0(%rsp),%eax
0x000000000057d8cd <+20501>:	lea    -0x1(%rax),%edx
0x000000000057d8d0 <+20504>:	cmp    $0xfd,%dl
0x000000000057d8d3 <+20507>:	jbe    0x57d90d <_PyEval_EvalFrameDefault+20565>
0x000000000057d8d5 <+20509>:	cmpw   $0x0,0x541b6f(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057d8dd <+20517>:	jne    0x57d926 <_PyEval_EvalFrameDefault+20590>
0x000000000057d8df <+20519>:	mov    $0x0,%edx
0x000000000057d8e4 <+20524>:	or     %edx,%eax
0x000000000057d8e6 <+20526>:	or     %eax,%r12d
0x000000000057d8e9 <+20529>:	movzbl %r12b,%eax
0x000000000057d8ed <+20533>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057d8f5 <+20541>:	mov    %r14,%r13
0x000000000057d8f8 <+20544>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057d8fd <+20549>:	mov    %r14,%rdx
0x000000000057d900 <+20552>:	mov    %rbx,%rsi
0x000000000057d903 <+20555>:	mov    %rbp,%rdi
0x000000000057d906 <+20558>:	call   0x573f7b <lltrace_instruction>
0x000000000057d90b <+20563>:	jmp    0x57d8c5 <_PyEval_EvalFrameDefault+20493>
0x000000000057d90d <+20565>:	mov    $0x7444e0,%ecx
0x000000000057d912 <+20570>:	mov    $0xb20,%edx
0x000000000057d917 <+20575>:	mov    $0x74045c,%esi
0x000000000057d91c <+20580>:	mov    $0x742a50,%edi
0x000000000057d921 <+20585>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057d926 <+20590>:	mov    $0xffffffff,%edx
0x000000000057d92b <+20595>:	jmp    0x57d8e4 <_PyEval_EvalFrameDefault+20524>
0x000000000057d92d <+20597>:	lea    0x2(%r13),%r15
0x000000000057d931 <+20601>:	mov    %r13,0x38(%rbp)
0x000000000057d935 <+20605>:	mov    -0x8(%rbx),%r14
0x000000000057d939 <+20609>:	mov    0x8(%r14),%rax
0x000000000057d93d <+20613>:	mov    %rax,0x48(%rsp)
0x000000000057d942 <+20618>:	cmp    $0x9926c0,%rax
0x000000000057d948 <+20624>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057d94e <+20630>:	mov    %r14,%rdi
0x000000000057d951 <+20633>:	call   0x572fd1 <PyList_GET_SIZE>
0x000000000057d956 <+20638>:	mov    %rax,%rdx
0x000000000057d959 <+20641>:	movslq 0x8(%rsp),%rax
0x000000000057d95e <+20646>:	cmp    %rax,%rdx
0x000000000057d961 <+20649>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057d967 <+20655>:	lea    0x48(%rbp),%rcx
0x000000000057d96b <+20659>:	mov    0x20(%rbp),%rax
0x000000000057d96f <+20663>:	movslq 0x4c(%rax),%rax
0x000000000057d973 <+20667>:	lea    (%rcx,%rax,8),%rdx
0x000000000057d977 <+20671>:	mov    %rbx,%rax
0x000000000057d97a <+20674>:	sub    %rdx,%rax
0x000000000057d97d <+20677>:	sar    $0x3,%rax
0x000000000057d981 <+20681>:	test   %eax,%eax
0x000000000057d983 <+20683>:	jle    0x57d9ec <_PyEval_EvalFrameDefault+20788>
0x000000000057d985 <+20685>:	sub    $0x8,%rbx
0x000000000057d989 <+20689>:	mov    0x48(%rsp),%rax
0x000000000057d98e <+20694>:	testb  $0x2,0xab(%rax)
0x000000000057d995 <+20701>:	je     0x57da05 <_PyEval_EvalFrameDefault+20813>
0x000000000057d997 <+20703>:	mov    0x18(%r14),%rdi
0x000000000057d99b <+20707>:	mov    0x8(%rsp),%eax
0x000000000057d99f <+20711>:	mov    %eax,%edx
0x000000000057d9a1 <+20713>:	sub    $0x1,%eax
0x000000000057d9a4 <+20716>:	test   %edx,%edx
0x000000000057d9a6 <+20718>:	je     0x57da37 <_PyEval_EvalFrameDefault+20863>
0x000000000057d9ac <+20724>:	movslq %eax,%rdx
0x000000000057d9af <+20727>:	mov    (%rdi,%rdx,8),%rdx
0x000000000057d9b3 <+20731>:	lea    0x8(%rbx),%r8
0x000000000057d9b7 <+20735>:	addq   $0x1,0x5460c9(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057d9bf <+20743>:	mov    (%rdx),%rsi
0x000000000057d9c2 <+20746>:	add    $0x1,%rsi
0x000000000057d9c6 <+20750>:	mov    %rsi,(%rdx)
0x000000000057d9c9 <+20753>:	mov    %rdx,(%rbx)
0x000000000057d9cc <+20756>:	mov    0x20(%rbp),%rsi
0x000000000057d9d0 <+20760>:	movslq 0x4c(%rsi),%rdx
0x000000000057d9d4 <+20764>:	lea    (%rcx,%rdx,8),%r9
0x000000000057d9d8 <+20768>:	mov    %r8,%rdx
0x000000000057d9db <+20771>:	sub    %r9,%rdx
0x000000000057d9de <+20774>:	sar    $0x3,%rdx
0x000000000057d9e2 <+20778>:	cmp    %edx,0x44(%rsi)
0x000000000057d9e5 <+20781>:	jl     0x57da1e <_PyEval_EvalFrameDefault+20838>
0x000000000057d9e7 <+20783>:	mov    %r8,%rbx
0x000000000057d9ea <+20786>:	jmp    0x57d99f <_PyEval_EvalFrameDefault+20711>
0x000000000057d9ec <+20788>:	mov    $0x7444e0,%ecx
0x000000000057d9f1 <+20793>:	mov    $0xb28,%edx
0x000000000057d9f6 <+20798>:	mov    $0x74045c,%esi
0x000000000057d9fb <+20803>:	mov    $0x7408ec,%edi
0x000000000057da00 <+20808>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057da05 <+20813>:	mov    $0x7444e0,%ecx
0x000000000057da0a <+20818>:	mov    $0xb29,%edx
0x000000000057da0f <+20823>:	mov    $0x74045c,%esi
0x000000000057da14 <+20828>:	mov    $0x6e7d5d,%edi
0x000000000057da19 <+20833>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057da1e <+20838>:	mov    $0x7444e0,%ecx
0x000000000057da23 <+20843>:	mov    $0xb2b,%edx
0x000000000057da28 <+20848>:	mov    $0x74045c,%esi
0x000000000057da2d <+20853>:	mov    $0x7408bc,%edi
0x000000000057da32 <+20858>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057da37 <+20863>:	mov    %r14,%rdx
0x000000000057da3a <+20866>:	mov    $0xb2d,%esi
0x000000000057da3f <+20871>:	mov    $0x74045c,%edi
0x000000000057da44 <+20876>:	call   0x573c83 <Py_DECREF>
0x000000000057da49 <+20881>:	lea    0x4(%r13),%r14
0x000000000057da4d <+20885>:	movzwl 0x4(%r13),%r12d
0x000000000057da52 <+20890>:	mov    %r12d,%eax
0x000000000057da55 <+20893>:	shr    $0x8,%ax
0x000000000057da59 <+20897>:	movzwl %ax,%eax
0x000000000057da5c <+20900>:	mov    %eax,0x8(%rsp)
0x000000000057da60 <+20904>:	cmpl   $0x0,0x14(%rsp)
0x000000000057da65 <+20909>:	jne    0x57da9f <_PyEval_EvalFrameDefault+20967>
0x000000000057da67 <+20911>:	movzbl 0xc0(%rsp),%eax
0x000000000057da6f <+20919>:	lea    -0x1(%rax),%edx
0x000000000057da72 <+20922>:	cmp    $0xfd,%dl
0x000000000057da75 <+20925>:	jbe    0x57daaf <_PyEval_EvalFrameDefault+20983>
0x000000000057da77 <+20927>:	cmpw   $0x0,0x5419cd(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057da7f <+20935>:	jne    0x57dac8 <_PyEval_EvalFrameDefault+21008>
0x000000000057da81 <+20937>:	mov    $0x0,%edx
0x000000000057da86 <+20942>:	or     %edx,%eax
0x000000000057da88 <+20944>:	or     %eax,%r12d
0x000000000057da8b <+20947>:	movzbl %r12b,%eax
0x000000000057da8f <+20951>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057da97 <+20959>:	mov    %r14,%r13
0x000000000057da9a <+20962>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057da9f <+20967>:	mov    %r14,%rdx
0x000000000057daa2 <+20970>:	mov    %rbx,%rsi
0x000000000057daa5 <+20973>:	mov    %rbp,%rdi
0x000000000057daa8 <+20976>:	call   0x573f7b <lltrace_instruction>
0x000000000057daad <+20981>:	jmp    0x57da67 <_PyEval_EvalFrameDefault+20911>
0x000000000057daaf <+20983>:	mov    $0x7444e0,%ecx
0x000000000057dab4 <+20988>:	mov    $0xb2f,%edx
0x000000000057dab9 <+20993>:	mov    $0x74045c,%esi
0x000000000057dabe <+20998>:	mov    $0x742a50,%edi
0x000000000057dac3 <+21003>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dac8 <+21008>:	mov    $0xffffffff,%edx
0x000000000057dacd <+21013>:	jmp    0x57da86 <_PyEval_EvalFrameDefault+20942>
0x000000000057dacf <+21015>:	lea    0x2(%r13),%r15
0x000000000057dad3 <+21019>:	mov    %r13,0x38(%rbp)
0x000000000057dad7 <+21023>:	mov    0x8(%rsp),%ecx
0x000000000057dadb <+21027>:	movzbl %cl,%edx
0x000000000057dade <+21030>:	sar    $0x8,%ecx
0x000000000057dae1 <+21033>:	lea    0x1(%rdx,%rcx,1),%r14d
0x000000000057dae6 <+21038>:	lea    0x48(%rbp),%r13
0x000000000057daea <+21042>:	mov    0x20(%rbp),%rax
0x000000000057daee <+21046>:	movslq 0x4c(%rax),%rax
0x000000000057daf2 <+21050>:	lea    0x0(%r13,%rax,8),%rsi
0x000000000057daf7 <+21055>:	mov    %rbx,%rax
0x000000000057dafa <+21058>:	sub    %rsi,%rax
0x000000000057dafd <+21061>:	sar    $0x3,%rax
0x000000000057db01 <+21065>:	test   %eax,%eax
0x000000000057db03 <+21067>:	jle    0x57dbcd <_PyEval_EvalFrameDefault+21269>
0x000000000057db09 <+21073>:	lea    -0x8(%rbx),%rsi
0x000000000057db0d <+21077>:	mov    %rsi,0x8(%rsp)
0x000000000057db12 <+21082>:	mov    -0x8(%rbx),%r12
0x000000000057db16 <+21086>:	movslq %r14d,%rax
0x000000000057db19 <+21089>:	lea    (%rsi,%rax,8),%rbx
0x000000000057db1d <+21093>:	mov    %rbx,%r8
0x000000000057db20 <+21096>:	mov    %r12,%rsi
0x000000000057db23 <+21099>:	mov    0x18(%rsp),%rdi
0x000000000057db28 <+21104>:	call   0x57409f <unpack_iterable>
0x000000000057db2d <+21109>:	test   %eax,%eax
0x000000000057db2f <+21111>:	je     0x57dbe6 <_PyEval_EvalFrameDefault+21294>
0x000000000057db35 <+21117>:	test   %r14d,%r14d
0x000000000057db38 <+21120>:	js     0x57dc02 <_PyEval_EvalFrameDefault+21322>
0x000000000057db3e <+21126>:	mov    0x20(%rbp),%rdx
0x000000000057db42 <+21130>:	movslq 0x4c(%rdx),%rax
0x000000000057db46 <+21134>:	lea    0x0(%r13,%rax,8),%rcx
0x000000000057db4b <+21139>:	mov    %rbx,%rax
0x000000000057db4e <+21142>:	sub    %rcx,%rax
0x000000000057db51 <+21145>:	sar    $0x3,%rax
0x000000000057db55 <+21149>:	cmp    %eax,0x44(%rdx)
0x000000000057db58 <+21152>:	jl     0x57dc1b <_PyEval_EvalFrameDefault+21347>
0x000000000057db5e <+21158>:	mov    %r12,%rdx
0x000000000057db61 <+21161>:	mov    $0xb3b,%esi
0x000000000057db66 <+21166>:	mov    $0x74045c,%edi
0x000000000057db6b <+21171>:	call   0x573c83 <Py_DECREF>
0x000000000057db70 <+21176>:	movzwl (%r15),%r12d
0x000000000057db74 <+21180>:	mov    %r12d,%eax
0x000000000057db77 <+21183>:	shr    $0x8,%ax
0x000000000057db7b <+21187>:	movzwl %ax,%eax
0x000000000057db7e <+21190>:	mov    %eax,0x8(%rsp)
0x000000000057db82 <+21194>:	cmpl   $0x0,0x14(%rsp)
0x000000000057db87 <+21199>:	jne    0x57dc34 <_PyEval_EvalFrameDefault+21372>
0x000000000057db8d <+21205>:	movzbl 0xc0(%rsp),%eax
0x000000000057db95 <+21213>:	lea    -0x1(%rax),%edx
0x000000000057db98 <+21216>:	cmp    $0xfd,%dl
0x000000000057db9b <+21219>:	jbe    0x57dc47 <_PyEval_EvalFrameDefault+21391>
0x000000000057dba1 <+21225>:	cmpw   $0x0,0x5418a3(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057dba9 <+21233>:	jne    0x57dc60 <_PyEval_EvalFrameDefault+21416>
0x000000000057dbaf <+21239>:	mov    $0x0,%edx
0x000000000057dbb4 <+21244>:	or     %edx,%eax
0x000000000057dbb6 <+21246>:	or     %eax,%r12d
0x000000000057dbb9 <+21249>:	movzbl %r12b,%eax
0x000000000057dbbd <+21253>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057dbc5 <+21261>:	mov    %r15,%r13
0x000000000057dbc8 <+21264>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057dbcd <+21269>:	mov    $0x7444e0,%ecx
0x000000000057dbd2 <+21274>:	mov    $0xb34,%edx
0x000000000057dbd7 <+21279>:	mov    $0x74045c,%esi
0x000000000057dbdc <+21284>:	mov    $0x7408da,%edi
0x000000000057dbe1 <+21289>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dbe6 <+21294>:	mov    %r12,%rdx
0x000000000057dbe9 <+21297>:	mov    $0xb37,%esi
0x000000000057dbee <+21302>:	mov    $0x74045c,%edi
0x000000000057dbf3 <+21307>:	call   0x573c83 <Py_DECREF>
0x000000000057dbf8 <+21312>:	mov    0x8(%rsp),%rbx
0x000000000057dbfd <+21317>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057dc02 <+21322>:	mov    $0x7444e0,%ecx
0x000000000057dc07 <+21327>:	mov    $0xb3a,%edx
0x000000000057dc0c <+21332>:	mov    $0x74045c,%esi
0x000000000057dc11 <+21337>:	mov    $0x740a7b,%edi
0x000000000057dc16 <+21342>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dc1b <+21347>:	mov    $0x7444e0,%ecx
0x000000000057dc20 <+21352>:	mov    $0xb3a,%edx
0x000000000057dc25 <+21357>:	mov    $0x74045c,%esi
0x000000000057dc2a <+21362>:	mov    $0x7408bc,%edi
0x000000000057dc2f <+21367>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dc34 <+21372>:	mov    %r15,%rdx
0x000000000057dc37 <+21375>:	mov    %rbx,%rsi
0x000000000057dc3a <+21378>:	mov    %rbp,%rdi
0x000000000057dc3d <+21381>:	call   0x573f7b <lltrace_instruction>
0x000000000057dc42 <+21386>:	jmp    0x57db8d <_PyEval_EvalFrameDefault+21205>
0x000000000057dc47 <+21391>:	mov    $0x7444e0,%ecx
0x000000000057dc4c <+21396>:	mov    $0xb3c,%edx
0x000000000057dc51 <+21401>:	mov    $0x74045c,%esi
0x000000000057dc56 <+21406>:	mov    $0x742a50,%edi
0x000000000057dc5b <+21411>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dc60 <+21416>:	mov    $0xffffffff,%edx
0x000000000057dc65 <+21421>:	jmp    0x57dbb4 <_PyEval_EvalFrameDefault+21244>
0x000000000057dc6a <+21426>:	lea    0x2(%r13),%r15
0x000000000057dc6e <+21430>:	mov    %r13,0x38(%rbp)
0x000000000057dc72 <+21434>:	movslq 0x8(%rsp),%rsi
0x000000000057dc77 <+21439>:	mov    0x30(%rsp),%rdi
0x000000000057dc7c <+21444>:	call   0x500470 <PyTuple_GetItem>
0x000000000057dc81 <+21449>:	mov    %rax,%rsi
0x000000000057dc84 <+21452>:	mov    -0x8(%rbx),%r13
0x000000000057dc88 <+21456>:	mov    -0x10(%rbx),%r14
0x000000000057dc8c <+21460>:	mov    0x20(%rbp),%rax
0x000000000057dc90 <+21464>:	movslq 0x4c(%rax),%rax
0x000000000057dc94 <+21468>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057dc99 <+21473>:	mov    %rbx,%rax
0x000000000057dc9c <+21476>:	sub    %rdx,%rax
0x000000000057dc9f <+21479>:	sar    $0x3,%rax
0x000000000057dca3 <+21483>:	cmp    $0x1,%eax
0x000000000057dca6 <+21486>:	jle    0x57dd3e <_PyEval_EvalFrameDefault+21638>
0x000000000057dcac <+21492>:	sub    $0x10,%rbx
0x000000000057dcb0 <+21496>:	mov    %r14,%rdx
0x000000000057dcb3 <+21499>:	mov    %r13,%rdi
0x000000000057dcb6 <+21502>:	call   0x4f1464 <PyObject_SetAttr>
0x000000000057dcbb <+21507>:	mov    %eax,%r12d
0x000000000057dcbe <+21510>:	mov    %r14,%rdx
0x000000000057dcc1 <+21513>:	mov    $0xb47,%esi
0x000000000057dcc6 <+21518>:	mov    $0x74045c,%edi
0x000000000057dccb <+21523>:	call   0x573c83 <Py_DECREF>
0x000000000057dcd0 <+21528>:	mov    %r13,%rdx
0x000000000057dcd3 <+21531>:	mov    $0xb48,%esi
0x000000000057dcd8 <+21536>:	mov    $0x74045c,%edi
0x000000000057dcdd <+21541>:	call   0x573c83 <Py_DECREF>
0x000000000057dce2 <+21546>:	test   %r12d,%r12d
0x000000000057dce5 <+21549>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057dceb <+21555>:	lea    0x8(%r15),%r13
0x000000000057dcef <+21559>:	movzwl 0x8(%r15),%r12d
0x000000000057dcf4 <+21564>:	mov    %r12d,%eax
0x000000000057dcf7 <+21567>:	shr    $0x8,%ax
0x000000000057dcfb <+21571>:	movzwl %ax,%eax
0x000000000057dcfe <+21574>:	mov    %eax,0x8(%rsp)
0x000000000057dd02 <+21578>:	cmpl   $0x0,0x14(%rsp)
0x000000000057dd07 <+21583>:	jne    0x57dd57 <_PyEval_EvalFrameDefault+21663>
0x000000000057dd09 <+21585>:	movzbl 0xc0(%rsp),%eax
0x000000000057dd11 <+21593>:	lea    -0x1(%rax),%edx
0x000000000057dd14 <+21596>:	cmp    $0xfd,%dl
0x000000000057dd17 <+21599>:	jbe    0x57dd67 <_PyEval_EvalFrameDefault+21679>
0x000000000057dd19 <+21601>:	cmpw   $0x0,0x54172b(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057dd21 <+21609>:	jne    0x57dd80 <_PyEval_EvalFrameDefault+21704>
0x000000000057dd23 <+21611>:	mov    $0x0,%edx
0x000000000057dd28 <+21616>:	or     %edx,%eax
0x000000000057dd2a <+21618>:	or     %eax,%r12d
0x000000000057dd2d <+21621>:	movzbl %r12b,%eax
0x000000000057dd31 <+21625>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057dd39 <+21633>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057dd3e <+21638>:	mov    $0x7444e0,%ecx
0x000000000057dd43 <+21643>:	mov    $0xb45,%edx
0x000000000057dd48 <+21648>:	mov    $0x74045c,%esi
0x000000000057dd4d <+21653>:	mov    $0x74092c,%edi
0x000000000057dd52 <+21658>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dd57 <+21663>:	mov    %r13,%rdx
0x000000000057dd5a <+21666>:	mov    %rbx,%rsi
0x000000000057dd5d <+21669>:	mov    %rbp,%rdi
0x000000000057dd60 <+21672>:	call   0x573f7b <lltrace_instruction>
0x000000000057dd65 <+21677>:	jmp    0x57dd09 <_PyEval_EvalFrameDefault+21585>
0x000000000057dd67 <+21679>:	mov    $0x7444e0,%ecx
0x000000000057dd6c <+21684>:	mov    $0xb4d,%edx
0x000000000057dd71 <+21689>:	mov    $0x74045c,%esi
0x000000000057dd76 <+21694>:	mov    $0x742a50,%edi
0x000000000057dd7b <+21699>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057dd80 <+21704>:	mov    $0xffffffff,%edx
0x000000000057dd85 <+21709>:	jmp    0x57dd28 <_PyEval_EvalFrameDefault+21616>
0x000000000057dd87 <+21711>:	lea    0x2(%r13),%r15
0x000000000057dd8b <+21715>:	mov    %r13,0x38(%rbp)
0x000000000057dd8f <+21719>:	movslq 0x8(%rsp),%rsi
0x000000000057dd94 <+21724>:	mov    0x30(%rsp),%rdi
0x000000000057dd99 <+21729>:	call   0x500470 <PyTuple_GetItem>
0x000000000057dd9e <+21734>:	mov    %rax,%rsi
0x000000000057dda1 <+21737>:	mov    0x20(%rbp),%rax
0x000000000057dda5 <+21741>:	movslq 0x4c(%rax),%rax
0x000000000057dda9 <+21745>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057ddae <+21750>:	mov    %rbx,%rax
0x000000000057ddb1 <+21753>:	sub    %rdx,%rax
0x000000000057ddb4 <+21756>:	sar    $0x3,%rax
0x000000000057ddb8 <+21760>:	test   %eax,%eax
0x000000000057ddba <+21762>:	jle    0x57de43 <_PyEval_EvalFrameDefault+21899>
0x000000000057ddc0 <+21768>:	sub    $0x8,%rbx
0x000000000057ddc4 <+21772>:	mov    (%rbx),%r13
0x000000000057ddc7 <+21775>:	mov    $0x0,%edx
0x000000000057ddcc <+21780>:	mov    %r13,%rdi
0x000000000057ddcf <+21783>:	call   0x4f1464 <PyObject_SetAttr>
0x000000000057ddd4 <+21788>:	mov    %eax,%r12d
0x000000000057ddd7 <+21791>:	mov    %r13,%rdx
0x000000000057ddda <+21794>:	mov    $0xb55,%esi
0x000000000057dddf <+21799>:	mov    $0x74045c,%edi
0x000000000057dde4 <+21804>:	call   0x573c83 <Py_DECREF>
0x000000000057dde9 <+21809>:	test   %r12d,%r12d
0x000000000057ddec <+21812>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057ddf2 <+21818>:	movzwl (%r15),%r12d
0x000000000057ddf6 <+21822>:	mov    %r12d,%eax
0x000000000057ddf9 <+21825>:	shr    $0x8,%ax
0x000000000057ddfd <+21829>:	movzwl %ax,%eax
0x000000000057de00 <+21832>:	mov    %eax,0x8(%rsp)
0x000000000057de04 <+21836>:	cmpl   $0x0,0x14(%rsp)
0x000000000057de09 <+21841>:	jne    0x57de5c <_PyEval_EvalFrameDefault+21924>
0x000000000057de0b <+21843>:	movzbl 0xc0(%rsp),%eax
0x000000000057de13 <+21851>:	lea    -0x1(%rax),%edx
0x000000000057de16 <+21854>:	cmp    $0xfd,%dl
0x000000000057de19 <+21857>:	jbe    0x57de6c <_PyEval_EvalFrameDefault+21940>
0x000000000057de1b <+21859>:	cmpw   $0x0,0x541629(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057de23 <+21867>:	jne    0x57de85 <_PyEval_EvalFrameDefault+21965>
0x000000000057de25 <+21869>:	mov    $0x0,%edx
0x000000000057de2a <+21874>:	or     %edx,%eax
0x000000000057de2c <+21876>:	or     %eax,%r12d
0x000000000057de2f <+21879>:	movzbl %r12b,%eax
0x000000000057de33 <+21883>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057de3b <+21891>:	mov    %r15,%r13
0x000000000057de3e <+21894>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057de43 <+21899>:	mov    $0x7444e0,%ecx
0x000000000057de48 <+21904>:	mov    $0xb52,%edx
0x000000000057de4d <+21909>:	mov    $0x74045c,%esi
0x000000000057de52 <+21914>:	mov    $0x7408da,%edi
0x000000000057de57 <+21919>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057de5c <+21924>:	mov    %r15,%rdx
0x000000000057de5f <+21927>:	mov    %rbx,%rsi
0x000000000057de62 <+21930>:	mov    %rbp,%rdi
0x000000000057de65 <+21933>:	call   0x573f7b <lltrace_instruction>
0x000000000057de6a <+21938>:	jmp    0x57de0b <_PyEval_EvalFrameDefault+21843>
0x000000000057de6c <+21940>:	mov    $0x7444e0,%ecx
0x000000000057de71 <+21945>:	mov    $0xb58,%edx
0x000000000057de76 <+21950>:	mov    $0x74045c,%esi
0x000000000057de7b <+21955>:	mov    $0x742a50,%edi
0x000000000057de80 <+21960>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057de85 <+21965>:	mov    $0xffffffff,%edx
0x000000000057de8a <+21970>:	jmp    0x57de2a <_PyEval_EvalFrameDefault+21874>
0x000000000057de8c <+21972>:	lea    0x2(%r13),%r15
0x000000000057de90 <+21976>:	mov    %r13,0x38(%rbp)
0x000000000057de94 <+21980>:	movslq 0x8(%rsp),%rsi
0x000000000057de99 <+21985>:	mov    0x30(%rsp),%rdi
0x000000000057de9e <+21990>:	call   0x500470 <PyTuple_GetItem>
0x000000000057dea3 <+21995>:	mov    %rax,%rsi
0x000000000057dea6 <+21998>:	mov    0x20(%rbp),%rax
0x000000000057deaa <+22002>:	movslq 0x4c(%rax),%rax
0x000000000057deae <+22006>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057deb3 <+22011>:	mov    %rbx,%rax
0x000000000057deb6 <+22014>:	sub    %rdx,%rax
0x000000000057deb9 <+22017>:	sar    $0x3,%rax
0x000000000057debd <+22021>:	test   %eax,%eax
0x000000000057debf <+22023>:	jle    0x57df47 <_PyEval_EvalFrameDefault+22159>
0x000000000057dec5 <+22029>:	sub    $0x8,%rbx
0x000000000057dec9 <+22033>:	mov    (%rbx),%r13
0x000000000057decc <+22036>:	mov    0x8(%rbp),%rdi
0x000000000057ded0 <+22040>:	mov    %r13,%rdx
0x000000000057ded3 <+22043>:	call   0x4e1213 <PyDict_SetItem>
0x000000000057ded8 <+22048>:	mov    %eax,%r12d
0x000000000057dedb <+22051>:	mov    %r13,%rdx
0x000000000057dede <+22054>:	mov    $0xb60,%esi
0x000000000057dee3 <+22059>:	mov    $0x74045c,%edi
0x000000000057dee8 <+22064>:	call   0x573c83 <Py_DECREF>
0x000000000057deed <+22069>:	test   %r12d,%r12d
0x000000000057def0 <+22072>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057def6 <+22078>:	movzwl (%r15),%r12d
0x000000000057defa <+22082>:	mov    %r12d,%eax
0x000000000057defd <+22085>:	shr    $0x8,%ax
0x000000000057df01 <+22089>:	movzwl %ax,%eax
0x000000000057df04 <+22092>:	mov    %eax,0x8(%rsp)
0x000000000057df08 <+22096>:	cmpl   $0x0,0x14(%rsp)
0x000000000057df0d <+22101>:	jne    0x57df60 <_PyEval_EvalFrameDefault+22184>
0x000000000057df0f <+22103>:	movzbl 0xc0(%rsp),%eax
0x000000000057df17 <+22111>:	lea    -0x1(%rax),%edx
0x000000000057df1a <+22114>:	cmp    $0xfd,%dl
0x000000000057df1d <+22117>:	jbe    0x57df70 <_PyEval_EvalFrameDefault+22200>
0x000000000057df1f <+22119>:	cmpw   $0x0,0x541525(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057df27 <+22127>:	jne    0x57df89 <_PyEval_EvalFrameDefault+22225>
0x000000000057df29 <+22129>:	mov    $0x0,%edx
0x000000000057df2e <+22134>:	or     %edx,%eax
0x000000000057df30 <+22136>:	or     %eax,%r12d
0x000000000057df33 <+22139>:	movzbl %r12b,%eax
0x000000000057df37 <+22143>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057df3f <+22151>:	mov    %r15,%r13
0x000000000057df42 <+22154>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057df47 <+22159>:	mov    $0x7444e0,%ecx
0x000000000057df4c <+22164>:	mov    $0xb5d,%edx
0x000000000057df51 <+22169>:	mov    $0x74045c,%esi
0x000000000057df56 <+22174>:	mov    $0x7408da,%edi
0x000000000057df5b <+22179>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057df60 <+22184>:	mov    %r15,%rdx
0x000000000057df63 <+22187>:	mov    %rbx,%rsi
0x000000000057df66 <+22190>:	mov    %rbp,%rdi
0x000000000057df69 <+22193>:	call   0x573f7b <lltrace_instruction>
0x000000000057df6e <+22198>:	jmp    0x57df0f <_PyEval_EvalFrameDefault+22103>
0x000000000057df70 <+22200>:	mov    $0x7444e0,%ecx
0x000000000057df75 <+22205>:	mov    $0xb63,%edx
0x000000000057df7a <+22210>:	mov    $0x74045c,%esi
0x000000000057df7f <+22215>:	mov    $0x742a50,%edi
0x000000000057df84 <+22220>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057df89 <+22225>:	mov    $0xffffffff,%edx
0x000000000057df8e <+22230>:	jmp    0x57df2e <_PyEval_EvalFrameDefault+22134>
0x000000000057df90 <+22232>:	lea    0x2(%r13),%r15
0x000000000057df94 <+22236>:	mov    %r13,0x38(%rbp)
0x000000000057df98 <+22240>:	movslq 0x8(%rsp),%rsi
0x000000000057df9d <+22245>:	mov    0x30(%rsp),%rdi
0x000000000057dfa2 <+22250>:	call   0x500470 <PyTuple_GetItem>
0x000000000057dfa7 <+22255>:	mov    %rax,%r12
0x000000000057dfaa <+22258>:	mov    0x8(%rbp),%rdi
0x000000000057dfae <+22262>:	mov    %rax,%rsi
0x000000000057dfb1 <+22265>:	call   0x4e14f2 <PyDict_DelItem>
0x000000000057dfb6 <+22270>:	test   %eax,%eax
0x000000000057dfb8 <+22272>:	jne    0x57e00c <_PyEval_EvalFrameDefault+22356>
0x000000000057dfba <+22274>:	movzwl 0x2(%r13),%r12d
0x000000000057dfbf <+22279>:	mov    %r12d,%eax
0x000000000057dfc2 <+22282>:	shr    $0x8,%ax
0x000000000057dfc6 <+22286>:	movzwl %ax,%eax
0x000000000057dfc9 <+22289>:	mov    %eax,0x8(%rsp)
0x000000000057dfcd <+22293>:	cmpl   $0x0,0x14(%rsp)
0x000000000057dfd2 <+22298>:	jne    0x57e043 <_PyEval_EvalFrameDefault+22411>
0x000000000057dfd4 <+22300>:	movzbl 0xc0(%rsp),%eax
0x000000000057dfdc <+22308>:	lea    -0x1(%rax),%edx
0x000000000057dfdf <+22311>:	cmp    $0xfd,%dl
0x000000000057dfe2 <+22314>:	jbe    0x57e053 <_PyEval_EvalFrameDefault+22427>
0x000000000057dfe4 <+22316>:	cmpw   $0x0,0x541460(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057dfec <+22324>:	jne    0x57e06c <_PyEval_EvalFrameDefault+22452>
0x000000000057dfee <+22326>:	mov    $0x0,%edx
0x000000000057dff3 <+22331>:	or     %edx,%eax
0x000000000057dff5 <+22333>:	or     %eax,%r12d
0x000000000057dff8 <+22336>:	movzbl %r12b,%eax
0x000000000057dffc <+22340>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e004 <+22348>:	mov    %r15,%r13
0x000000000057e007 <+22351>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e00c <+22356>:	mov    0x40be85(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057e013 <+22363>:	mov    0x18(%rsp),%rdi
0x000000000057e018 <+22368>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057e01d <+22373>:	test   %eax,%eax
0x000000000057e01f <+22375>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e025 <+22381>:	mov    %r12,%rcx
0x000000000057e028 <+22384>:	mov    $0x740a53,%edx
0x000000000057e02d <+22389>:	mov    0x40cd64(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057e034 <+22396>:	mov    0x18(%rsp),%rdi
0x000000000057e039 <+22401>:	call   0x576e0d <format_exc_check_arg>
0x000000000057e03e <+22406>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e043 <+22411>:	mov    %r15,%rdx
0x000000000057e046 <+22414>:	mov    %rbx,%rsi
0x000000000057e049 <+22417>:	mov    %rbp,%rdi
0x000000000057e04c <+22420>:	call   0x573f7b <lltrace_instruction>
0x000000000057e051 <+22425>:	jmp    0x57dfd4 <_PyEval_EvalFrameDefault+22300>
0x000000000057e053 <+22427>:	mov    $0x7444e0,%ecx
0x000000000057e058 <+22432>:	mov    $0xb71,%edx
0x000000000057e05d <+22437>:	mov    $0x74045c,%esi
0x000000000057e062 <+22442>:	mov    $0x742a50,%edi
0x000000000057e067 <+22447>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e06c <+22452>:	mov    $0xffffffff,%edx
0x000000000057e071 <+22457>:	jmp    0x57dff3 <_PyEval_EvalFrameDefault+22331>
0x000000000057e073 <+22459>:	lea    0x2(%r13),%r15
0x000000000057e077 <+22463>:	mov    %r13,0x38(%rbp)
0x000000000057e07b <+22467>:	movslq 0x8(%rsp),%rsi
0x000000000057e080 <+22472>:	mov    0x30(%rsp),%rdi
0x000000000057e085 <+22477>:	call   0x500470 <PyTuple_GetItem>
0x000000000057e08a <+22482>:	mov    %rax,%r13
0x000000000057e08d <+22485>:	mov    0x18(%rbp),%rdi
0x000000000057e091 <+22489>:	test   %rdi,%rdi
0x000000000057e094 <+22492>:	je     0x57e143 <_PyEval_EvalFrameDefault+22667>
0x000000000057e09a <+22498>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057e0a2 <+22506>:	je     0x57e166 <_PyEval_EvalFrameDefault+22702>
0x000000000057e0a8 <+22512>:	mov    %rax,%rsi
0x000000000057e0ab <+22515>:	call   0x492ead <PyObject_GetItem>
0x000000000057e0b0 <+22520>:	mov    %rax,%r12
0x000000000057e0b3 <+22523>:	test   %rax,%rax
0x000000000057e0b6 <+22526>:	je     0x57e1a2 <_PyEval_EvalFrameDefault+22762>
0x000000000057e0bc <+22532>:	lea    0x8(%rbx),%r13
0x000000000057e0c0 <+22536>:	mov    %r12,(%rbx)
0x000000000057e0c3 <+22539>:	mov    0x20(%rbp),%rdx
0x000000000057e0c7 <+22543>:	movslq 0x4c(%rdx),%rax
0x000000000057e0cb <+22547>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057e0d0 <+22552>:	mov    %r13,%rax
0x000000000057e0d3 <+22555>:	sub    %rcx,%rax
0x000000000057e0d6 <+22558>:	sar    $0x3,%rax
0x000000000057e0da <+22562>:	cmp    %eax,0x44(%rdx)
0x000000000057e0dd <+22565>:	jl     0x57e2c0 <_PyEval_EvalFrameDefault+23048>
0x000000000057e0e3 <+22571>:	movzwl (%r15),%r12d
0x000000000057e0e7 <+22575>:	mov    %r12d,%eax
0x000000000057e0ea <+22578>:	shr    $0x8,%ax
0x000000000057e0ee <+22582>:	movzwl %ax,%eax
0x000000000057e0f1 <+22585>:	mov    %eax,0x8(%rsp)
0x000000000057e0f5 <+22589>:	cmpl   $0x0,0x14(%rsp)
0x000000000057e0fa <+22594>:	jne    0x57e2d9 <_PyEval_EvalFrameDefault+23073>
0x000000000057e100 <+22600>:	movzbl 0xc0(%rsp),%eax
0x000000000057e108 <+22608>:	lea    -0x1(%rax),%edx
0x000000000057e10b <+22611>:	cmp    $0xfd,%dl
0x000000000057e10e <+22614>:	jbe    0x57e2ec <_PyEval_EvalFrameDefault+23092>
0x000000000057e114 <+22620>:	cmpw   $0x0,0x541330(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057e11c <+22628>:	jne    0x57e305 <_PyEval_EvalFrameDefault+23117>
0x000000000057e122 <+22634>:	mov    $0x0,%edx
0x000000000057e127 <+22639>:	or     %edx,%eax
0x000000000057e129 <+22641>:	or     %eax,%r12d
0x000000000057e12c <+22644>:	movzbl %r12b,%eax
0x000000000057e130 <+22648>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e138 <+22656>:	mov    %r13,%rbx
0x000000000057e13b <+22659>:	mov    %r15,%r13
0x000000000057e13e <+22662>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e143 <+22667>:	mov    %rax,%rcx
0x000000000057e146 <+22670>:	mov    $0x740a8a,%edx
0x000000000057e14b <+22675>:	mov    0x40aa66(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x000000000057e152 <+22682>:	mov    0x18(%rsp),%rdi
0x000000000057e157 <+22687>:	mov    $0x0,%eax
0x000000000057e15c <+22692>:	call   0x5a3574 <_PyErr_Format>
0x000000000057e161 <+22697>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e166 <+22702>:	mov    %rax,%rsi
0x000000000057e169 <+22705>:	call   0x4e0de6 <PyDict_GetItemWithError>
0x000000000057e16e <+22710>:	mov    %rax,%r12
0x000000000057e171 <+22713>:	test   %rax,%rax
0x000000000057e174 <+22716>:	je     0x57e18e <_PyEval_EvalFrameDefault+22742>
0x000000000057e176 <+22718>:	addq   $0x1,0x54590a(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057e17e <+22726>:	mov    (%rax),%rax
0x000000000057e181 <+22729>:	add    $0x1,%rax
0x000000000057e185 <+22733>:	mov    %rax,(%r12)
0x000000000057e189 <+22737>:	jmp    0x57e0bc <_PyEval_EvalFrameDefault+22532>
0x000000000057e18e <+22742>:	mov    0x18(%rsp),%rdi
0x000000000057e193 <+22747>:	call   0x573630 <_PyErr_Occurred>
0x000000000057e198 <+22752>:	test   %rax,%rax
0x000000000057e19b <+22755>:	je     0x57e1c6 <_PyEval_EvalFrameDefault+22798>
0x000000000057e19d <+22757>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e1a2 <+22762>:	mov    0x40bcef(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057e1a9 <+22769>:	mov    0x18(%rsp),%r14
0x000000000057e1ae <+22774>:	mov    %r14,%rdi
0x000000000057e1b1 <+22777>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057e1b6 <+22782>:	test   %eax,%eax
0x000000000057e1b8 <+22784>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e1be <+22790>:	mov    %r14,%rdi
0x000000000057e1c1 <+22793>:	call   0x5a273b <_PyErr_Clear>
0x000000000057e1c6 <+22798>:	test   %r12,%r12
0x000000000057e1c9 <+22801>:	jne    0x57e0bc <_PyEval_EvalFrameDefault+22532>
0x000000000057e1cf <+22807>:	mov    0x8(%rbp),%rdi
0x000000000057e1d3 <+22811>:	mov    %r13,%rsi
0x000000000057e1d6 <+22814>:	call   0x4e0de6 <PyDict_GetItemWithError>
0x000000000057e1db <+22819>:	mov    %rax,%r12
0x000000000057e1de <+22822>:	test   %rax,%rax
0x000000000057e1e1 <+22825>:	je     0x57e1fb <_PyEval_EvalFrameDefault+22851>
0x000000000057e1e3 <+22827>:	addq   $0x1,0x54589d(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057e1eb <+22835>:	mov    (%rax),%rax
0x000000000057e1ee <+22838>:	add    $0x1,%rax
0x000000000057e1f2 <+22842>:	mov    %rax,(%r12)
0x000000000057e1f6 <+22846>:	jmp    0x57e0bc <_PyEval_EvalFrameDefault+22532>
0x000000000057e1fb <+22851>:	mov    0x18(%rsp),%rdi
0x000000000057e200 <+22856>:	call   0x573630 <_PyErr_Occurred>
0x000000000057e205 <+22861>:	test   %rax,%rax
0x000000000057e208 <+22864>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e20e <+22870>:	mov    0x10(%rbp),%rdi
0x000000000057e212 <+22874>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057e21a <+22882>:	je     0x57e267 <_PyEval_EvalFrameDefault+22959>
0x000000000057e21c <+22884>:	mov    %r13,%rsi
0x000000000057e21f <+22887>:	call   0x492ead <PyObject_GetItem>
0x000000000057e224 <+22892>:	mov    %rax,%r12
0x000000000057e227 <+22895>:	test   %rax,%rax
0x000000000057e22a <+22898>:	jne    0x57e0bc <_PyEval_EvalFrameDefault+22532>
0x000000000057e230 <+22904>:	mov    0x40bc61(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057e237 <+22911>:	mov    0x18(%rsp),%rdi
0x000000000057e23c <+22916>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057e241 <+22921>:	test   %eax,%eax
0x000000000057e243 <+22923>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e249 <+22929>:	mov    %r13,%rcx
0x000000000057e24c <+22932>:	mov    $0x740a53,%edx
0x000000000057e251 <+22937>:	mov    0x40cb40(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057e258 <+22944>:	mov    0x18(%rsp),%rdi
0x000000000057e25d <+22949>:	call   0x576e0d <format_exc_check_arg>
0x000000000057e262 <+22954>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e267 <+22959>:	mov    %r13,%rsi
0x000000000057e26a <+22962>:	call   0x4e0de6 <PyDict_GetItemWithError>
0x000000000057e26f <+22967>:	mov    %rax,%r12
0x000000000057e272 <+22970>:	test   %rax,%rax
0x000000000057e275 <+22973>:	je     0x57e28f <_PyEval_EvalFrameDefault+22999>
0x000000000057e277 <+22975>:	addq   $0x1,0x545809(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057e27f <+22983>:	mov    (%rax),%rax
0x000000000057e282 <+22986>:	add    $0x1,%rax
0x000000000057e286 <+22990>:	mov    %rax,(%r12)
0x000000000057e28a <+22994>:	jmp    0x57e0bc <_PyEval_EvalFrameDefault+22532>
0x000000000057e28f <+22999>:	mov    0x18(%rsp),%rdi
0x000000000057e294 <+23004>:	call   0x573630 <_PyErr_Occurred>
0x000000000057e299 <+23009>:	test   %rax,%rax
0x000000000057e29c <+23012>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e2a2 <+23018>:	mov    %r13,%rcx
0x000000000057e2a5 <+23021>:	mov    $0x740a53,%edx
0x000000000057e2aa <+23026>:	mov    0x40cae7(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057e2b1 <+23033>:	mov    0x18(%rsp),%rdi
0x000000000057e2b6 <+23038>:	call   0x576e0d <format_exc_check_arg>
0x000000000057e2bb <+23043>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e2c0 <+23048>:	mov    $0x7444e0,%ecx
0x000000000057e2c5 <+23053>:	mov    $0xbb0,%edx
0x000000000057e2ca <+23058>:	mov    $0x74045c,%esi
0x000000000057e2cf <+23063>:	mov    $0x7408bc,%edi
0x000000000057e2d4 <+23068>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e2d9 <+23073>:	mov    %r15,%rdx
0x000000000057e2dc <+23076>:	mov    %r13,%rsi
0x000000000057e2df <+23079>:	mov    %rbp,%rdi
0x000000000057e2e2 <+23082>:	call   0x573f7b <lltrace_instruction>
0x000000000057e2e7 <+23087>:	jmp    0x57e100 <_PyEval_EvalFrameDefault+22600>
0x000000000057e2ec <+23092>:	mov    $0x7444e0,%ecx
0x000000000057e2f1 <+23097>:	mov    $0xbb1,%edx
0x000000000057e2f6 <+23102>:	mov    $0x74045c,%esi
0x000000000057e2fb <+23107>:	mov    $0x742a50,%edi
0x000000000057e300 <+23112>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e305 <+23117>:	mov    $0xffffffff,%edx
0x000000000057e30a <+23122>:	jmp    0x57e127 <_PyEval_EvalFrameDefault+22639>
0x000000000057e30f <+23127>:	lea    0x2(%r13),%r15
0x000000000057e313 <+23131>:	mov    %r13,0x38(%rbp)
0x000000000057e317 <+23135>:	mov    0x8(%rsp),%eax
0x000000000057e31b <+23139>:	mov    %eax,%r12d
0x000000000057e31e <+23142>:	and    $0x1,%r12d
0x000000000057e322 <+23146>:	movq   $0x0,(%rbx)
0x000000000057e329 <+23153>:	sar    %eax
0x000000000057e32b <+23155>:	movslq %eax,%rsi
0x000000000057e32e <+23158>:	mov    0x30(%rsp),%rdi
0x000000000057e333 <+23163>:	call   0x500470 <PyTuple_GetItem>
0x000000000057e338 <+23168>:	mov    %rax,%r13
0x000000000057e33b <+23171>:	mov    0x8(%rbp),%rdi
0x000000000057e33f <+23175>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057e347 <+23183>:	je     0x57e40d <_PyEval_EvalFrameDefault+23381>
0x000000000057e34d <+23189>:	mov    %r13,%rsi
0x000000000057e350 <+23192>:	call   0x492ead <PyObject_GetItem>
0x000000000057e355 <+23197>:	test   %rax,%rax
0x000000000057e358 <+23200>:	je     0x57e474 <_PyEval_EvalFrameDefault+23484>
0x000000000057e35e <+23206>:	lea    0xa(%r15),%r13
0x000000000057e362 <+23210>:	movslq %r12d,%r12
0x000000000057e365 <+23213>:	lea    (%rbx,%r12,8),%rdx
0x000000000057e369 <+23217>:	lea    0x48(%rbp),%rsi
0x000000000057e36d <+23221>:	mov    0x20(%rbp),%rdi
0x000000000057e371 <+23225>:	movslq 0x4c(%rdi),%rcx
0x000000000057e375 <+23229>:	lea    (%rsi,%rcx,8),%r8
0x000000000057e379 <+23233>:	mov    %rdx,%rcx
0x000000000057e37c <+23236>:	sub    %r8,%rcx
0x000000000057e37f <+23239>:	sar    $0x3,%rcx
0x000000000057e383 <+23243>:	cmp    %ecx,0x44(%rdi)
0x000000000057e386 <+23246>:	jl     0x57e4e4 <_PyEval_EvalFrameDefault+23596>
0x000000000057e38c <+23252>:	lea    0x8(%rdx),%rbx
0x000000000057e390 <+23256>:	mov    %rax,(%rdx)
0x000000000057e393 <+23259>:	mov    0x20(%rbp),%rdx
0x000000000057e397 <+23263>:	movslq 0x4c(%rdx),%rax
0x000000000057e39b <+23267>:	lea    (%rsi,%rax,8),%rcx
0x000000000057e39f <+23271>:	mov    %rbx,%rax
0x000000000057e3a2 <+23274>:	sub    %rcx,%rax
0x000000000057e3a5 <+23277>:	sar    $0x3,%rax
0x000000000057e3a9 <+23281>:	cmp    %eax,0x44(%rdx)
0x000000000057e3ac <+23284>:	jl     0x57e4fd <_PyEval_EvalFrameDefault+23621>
0x000000000057e3b2 <+23290>:	movzwl 0xa(%r15),%r12d
0x000000000057e3b7 <+23295>:	mov    %r12d,%eax
0x000000000057e3ba <+23298>:	shr    $0x8,%ax
0x000000000057e3be <+23302>:	movzwl %ax,%eax
0x000000000057e3c1 <+23305>:	mov    %eax,0x8(%rsp)
0x000000000057e3c5 <+23309>:	cmpl   $0x0,0x14(%rsp)
0x000000000057e3ca <+23314>:	jne    0x57e516 <_PyEval_EvalFrameDefault+23646>
0x000000000057e3d0 <+23320>:	movzbl 0xc0(%rsp),%eax
0x000000000057e3d8 <+23328>:	lea    -0x1(%rax),%edx
0x000000000057e3db <+23331>:	cmp    $0xfd,%dl
0x000000000057e3de <+23334>:	jbe    0x57e529 <_PyEval_EvalFrameDefault+23665>
0x000000000057e3e4 <+23340>:	cmpw   $0x0,0x541060(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057e3ec <+23348>:	jne    0x57e542 <_PyEval_EvalFrameDefault+23690>
0x000000000057e3f2 <+23354>:	mov    $0x0,%edx
0x000000000057e3f7 <+23359>:	or     %edx,%eax
0x000000000057e3f9 <+23361>:	or     %eax,%r12d
0x000000000057e3fc <+23364>:	movzbl %r12b,%eax
0x000000000057e400 <+23368>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e408 <+23376>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e40d <+23381>:	mov    0x10(%rbp),%rsi
0x000000000057e411 <+23385>:	cmpq   $0x994540,0x8(%rsi)
0x000000000057e419 <+23393>:	jne    0x57e34d <_PyEval_EvalFrameDefault+23189>
0x000000000057e41f <+23399>:	mov    %rax,%rdx
0x000000000057e422 <+23402>:	call   0x4e1044 <_PyDict_LoadGlobal>
0x000000000057e427 <+23407>:	test   %rax,%rax
0x000000000057e42a <+23410>:	je     0x57e443 <_PyEval_EvalFrameDefault+23435>
0x000000000057e42c <+23412>:	addq   $0x1,0x545654(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057e434 <+23420>:	mov    (%rax),%rcx
0x000000000057e437 <+23423>:	lea    0x1(%rcx),%rdx
0x000000000057e43b <+23427>:	mov    %rdx,(%rax)
0x000000000057e43e <+23430>:	jmp    0x57e35e <_PyEval_EvalFrameDefault+23206>
0x000000000057e443 <+23435>:	mov    0x18(%rsp),%rdi
0x000000000057e448 <+23440>:	call   0x573630 <_PyErr_Occurred>
0x000000000057e44d <+23445>:	test   %rax,%rax
0x000000000057e450 <+23448>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e456 <+23454>:	mov    %r13,%rcx
0x000000000057e459 <+23457>:	mov    $0x740a53,%edx
0x000000000057e45e <+23462>:	mov    0x40c933(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057e465 <+23469>:	mov    0x18(%rsp),%rdi
0x000000000057e46a <+23474>:	call   0x576e0d <format_exc_check_arg>
0x000000000057e46f <+23479>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e474 <+23484>:	mov    0x40ba1d(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057e47b <+23491>:	mov    0x18(%rsp),%r14
0x000000000057e480 <+23496>:	mov    %r14,%rdi
0x000000000057e483 <+23499>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057e488 <+23504>:	test   %eax,%eax
0x000000000057e48a <+23506>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e490 <+23512>:	mov    %r14,%rdi
0x000000000057e493 <+23515>:	call   0x5a273b <_PyErr_Clear>
0x000000000057e498 <+23520>:	mov    0x10(%rbp),%rdi
0x000000000057e49c <+23524>:	mov    %r13,%rsi
0x000000000057e49f <+23527>:	call   0x492ead <PyObject_GetItem>
0x000000000057e4a4 <+23532>:	test   %rax,%rax
0x000000000057e4a7 <+23535>:	jne    0x57e35e <_PyEval_EvalFrameDefault+23206>
0x000000000057e4ad <+23541>:	mov    0x40b9e4(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057e4b4 <+23548>:	mov    0x18(%rsp),%rdi
0x000000000057e4b9 <+23553>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057e4be <+23558>:	test   %eax,%eax
0x000000000057e4c0 <+23560>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e4c6 <+23566>:	mov    %r13,%rcx
0x000000000057e4c9 <+23569>:	mov    $0x740a53,%edx
0x000000000057e4ce <+23574>:	mov    0x40c8c3(%rip),%rsi        # 0x98ad98 <PyExc_NameError>
0x000000000057e4d5 <+23581>:	mov    0x18(%rsp),%rdi
0x000000000057e4da <+23586>:	call   0x576e0d <format_exc_check_arg>
0x000000000057e4df <+23591>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e4e4 <+23596>:	mov    $0x7444e0,%ecx
0x000000000057e4e9 <+23601>:	mov    $0xbe4,%edx
0x000000000057e4ee <+23606>:	mov    $0x74045c,%esi
0x000000000057e4f3 <+23611>:	mov    $0x7408bc,%edi
0x000000000057e4f8 <+23616>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e4fd <+23621>:	mov    $0x7444e0,%ecx
0x000000000057e502 <+23626>:	mov    $0xbe5,%edx
0x000000000057e507 <+23631>:	mov    $0x74045c,%esi
0x000000000057e50c <+23636>:	mov    $0x7408bc,%edi
0x000000000057e511 <+23641>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e516 <+23646>:	mov    %r13,%rdx
0x000000000057e519 <+23649>:	mov    %rbx,%rsi
0x000000000057e51c <+23652>:	mov    %rbp,%rdi
0x000000000057e51f <+23655>:	call   0x573f7b <lltrace_instruction>
0x000000000057e524 <+23660>:	jmp    0x57e3d0 <_PyEval_EvalFrameDefault+23320>
0x000000000057e529 <+23665>:	mov    $0x7444e0,%ecx
0x000000000057e52e <+23670>:	mov    $0xbe6,%edx
0x000000000057e533 <+23675>:	mov    $0x74045c,%esi
0x000000000057e538 <+23680>:	mov    $0x742a50,%edi
0x000000000057e53d <+23685>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e542 <+23690>:	mov    $0xffffffff,%edx
0x000000000057e547 <+23695>:	jmp    0x57e3f7 <_PyEval_EvalFrameDefault+23359>
0x000000000057e54c <+23700>:	lea    0x2(%r13),%r15
0x000000000057e550 <+23704>:	mov    %r13,0x38(%rbp)
0x000000000057e554 <+23708>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057e55c <+23716>:	jne    0x57e576 <_PyEval_EvalFrameDefault+23742>
0x000000000057e55e <+23718>:	movzwl 0x2(%r13),%eax
0x000000000057e563 <+23723>:	cmp    $0xf,%ax
0x000000000057e567 <+23727>:	jbe    0x57e58f <_PyEval_EvalFrameDefault+23767>
0x000000000057e569 <+23729>:	sub    $0x10,%eax
0x000000000057e56c <+23732>:	mov    %ax,0x2(%r13)
0x000000000057e571 <+23737>:	jmp    0x57e317 <_PyEval_EvalFrameDefault+23135>
0x000000000057e576 <+23742>:	mov    $0x7444e0,%ecx
0x000000000057e57b <+23747>:	mov    $0xbea,%edx
0x000000000057e580 <+23752>:	mov    $0x74045c,%esi
0x000000000057e585 <+23757>:	mov    $0x7408ff,%edi
0x000000000057e58a <+23762>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e58f <+23767>:	mov    0x8(%rsp),%esi
0x000000000057e593 <+23771>:	sar    %esi
0x000000000057e595 <+23773>:	movslq %esi,%rsi
0x000000000057e598 <+23776>:	mov    0x30(%rsp),%rdi
0x000000000057e59d <+23781>:	call   0x500470 <PyTuple_GetItem>
0x000000000057e5a2 <+23786>:	mov    %rax,%rcx
0x000000000057e5a5 <+23789>:	mov    0x10(%rbp),%rsi
0x000000000057e5a9 <+23793>:	mov    0x8(%rbp),%rdi
0x000000000057e5ad <+23797>:	mov    %r13,%rdx
0x000000000057e5b0 <+23800>:	call   0x5cfd9b <_Py_Specialize_LoadGlobal>
0x000000000057e5b5 <+23805>:	test   %eax,%eax
0x000000000057e5b7 <+23807>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057e5bd <+23813>:	movzwl 0x0(%r13),%r14d
0x000000000057e5c2 <+23818>:	cmpl   $0x0,0x14(%rsp)
0x000000000057e5c7 <+23823>:	jne    0x57e5f8 <_PyEval_EvalFrameDefault+23872>
0x000000000057e5c9 <+23825>:	movzbl 0xc0(%rsp),%r12d
0x000000000057e5d2 <+23834>:	cmpw   $0x0,0x540e72(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057e5da <+23842>:	jne    0x57e608 <_PyEval_EvalFrameDefault+23888>
0x000000000057e5dc <+23844>:	mov    $0x0,%eax
0x000000000057e5e1 <+23849>:	or     %eax,%r12d
0x000000000057e5e4 <+23852>:	or     %r14d,%r12d
0x000000000057e5e7 <+23855>:	movzbl %r12b,%eax
0x000000000057e5eb <+23859>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e5f3 <+23867>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e5f8 <+23872>:	mov    %r13,%rdx
0x000000000057e5fb <+23875>:	mov    %rbx,%rsi
0x000000000057e5fe <+23878>:	mov    %rbp,%rdi
0x000000000057e601 <+23881>:	call   0x573f7b <lltrace_instruction>
0x000000000057e606 <+23886>:	jmp    0x57e5c9 <_PyEval_EvalFrameDefault+23825>
0x000000000057e608 <+23888>:	mov    $0xffffffff,%eax
0x000000000057e60d <+23893>:	jmp    0x57e5e1 <_PyEval_EvalFrameDefault+23849>
0x000000000057e60f <+23895>:	lea    0x2(%r13),%r15
0x000000000057e613 <+23899>:	mov    %r13,0x38(%rbp)
0x000000000057e617 <+23903>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057e61f <+23911>:	jne    0x57e72e <_PyEval_EvalFrameDefault+24182>
0x000000000057e625 <+23917>:	mov    0x8(%rbp),%rcx
0x000000000057e629 <+23921>:	cmpq   $0x994540,0x8(%rcx)
0x000000000057e631 <+23929>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e637 <+23935>:	movzwl 0x6(%r13),%eax
0x000000000057e63c <+23940>:	movzwl 0x8(%r13),%edx
0x000000000057e641 <+23945>:	shl    $0x10,%edx
0x000000000057e644 <+23948>:	or     %edx,%eax
0x000000000057e646 <+23950>:	mov    0x20(%rcx),%rdx
0x000000000057e64a <+23954>:	cmp    %eax,0xc(%rdx)
0x000000000057e64d <+23957>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e653 <+23963>:	cmpb   $0x0,0xa(%rdx)
0x000000000057e657 <+23967>:	je     0x57e747 <_PyEval_EvalFrameDefault+24207>
0x000000000057e65d <+23973>:	movzbl 0x9(%rdx),%ecx
0x000000000057e661 <+23977>:	mov    $0x1,%eax
0x000000000057e666 <+23982>:	shl    %cl,%rax
0x000000000057e669 <+23985>:	movzwl 0x4(%r13),%ecx
0x000000000057e66e <+23990>:	shl    $0x4,%rcx
0x000000000057e672 <+23994>:	add    %rcx,%rax
0x000000000057e675 <+23997>:	mov    0x28(%rdx,%rax,1),%rax
0x000000000057e67a <+24002>:	test   %rax,%rax
0x000000000057e67d <+24005>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e683 <+24011>:	movq   $0x0,(%rbx)
0x000000000057e68a <+24018>:	lea    0xc(%r13),%r14
0x000000000057e68e <+24022>:	mov    0x8(%rsp),%edx
0x000000000057e692 <+24026>:	and    $0x1,%edx
0x000000000057e695 <+24029>:	lea    0x8(%rbx,%rdx,8),%rbx
0x000000000057e69a <+24034>:	mov    0x20(%rbp),%rcx
0x000000000057e69e <+24038>:	movslq 0x4c(%rcx),%rdx
0x000000000057e6a2 <+24042>:	lea    0x48(%rbp,%rdx,8),%rsi
0x000000000057e6a7 <+24047>:	mov    %rbx,%rdx
0x000000000057e6aa <+24050>:	sub    %rsi,%rdx
0x000000000057e6ad <+24053>:	sar    $0x3,%rdx
0x000000000057e6b1 <+24057>:	cmp    %edx,0x44(%rcx)
0x000000000057e6b4 <+24060>:	jl     0x57e760 <_PyEval_EvalFrameDefault+24232>
0x000000000057e6ba <+24066>:	addq   $0x1,0x5453c6(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057e6c2 <+24074>:	mov    (%rax),%rcx
0x000000000057e6c5 <+24077>:	lea    0x1(%rcx),%rdx
0x000000000057e6c9 <+24081>:	mov    %rdx,(%rax)
0x000000000057e6cc <+24084>:	mov    %rax,-0x8(%rbx)
0x000000000057e6d0 <+24088>:	movzwl 0xc(%r13),%r12d
0x000000000057e6d5 <+24093>:	mov    %r12d,%eax
0x000000000057e6d8 <+24096>:	shr    $0x8,%ax
0x000000000057e6dc <+24100>:	movzwl %ax,%eax
0x000000000057e6df <+24103>:	mov    %eax,0x8(%rsp)
0x000000000057e6e3 <+24107>:	cmpl   $0x0,0x14(%rsp)
0x000000000057e6e8 <+24112>:	jne    0x57e779 <_PyEval_EvalFrameDefault+24257>
0x000000000057e6ee <+24118>:	movzbl 0xc0(%rsp),%eax
0x000000000057e6f6 <+24126>:	lea    -0x1(%rax),%edx
0x000000000057e6f9 <+24129>:	cmp    $0xfd,%dl
0x000000000057e6fc <+24132>:	jbe    0x57e78c <_PyEval_EvalFrameDefault+24276>
0x000000000057e702 <+24138>:	cmpw   $0x0,0x540d42(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057e70a <+24146>:	jne    0x57e7a5 <_PyEval_EvalFrameDefault+24301>
0x000000000057e710 <+24152>:	mov    $0x0,%edx
0x000000000057e715 <+24157>:	or     %edx,%eax
0x000000000057e717 <+24159>:	or     %eax,%r12d
0x000000000057e71a <+24162>:	movzbl %r12b,%eax
0x000000000057e71e <+24166>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e726 <+24174>:	mov    %r14,%r13
0x000000000057e729 <+24177>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e72e <+24182>:	mov    $0x7444e0,%ecx
0x000000000057e733 <+24187>:	mov    $0xbfd,%edx
0x000000000057e738 <+24192>:	mov    $0x74045c,%esi
0x000000000057e73d <+24197>:	mov    $0x7408ff,%edi
0x000000000057e742 <+24202>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e747 <+24207>:	mov    $0x7444e0,%ecx
0x000000000057e74c <+24212>:	mov    $0xc03,%edx
0x000000000057e751 <+24217>:	mov    $0x74045c,%esi
0x000000000057e756 <+24222>:	mov    $0x740aa4,%edi
0x000000000057e75b <+24227>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e760 <+24232>:	mov    $0x7444e0,%ecx
0x000000000057e765 <+24237>:	mov    $0xc0b,%edx
0x000000000057e76a <+24242>:	mov    $0x74045c,%esi
0x000000000057e76f <+24247>:	mov    $0x7408bc,%edi
0x000000000057e774 <+24252>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e779 <+24257>:	mov    %r14,%rdx
0x000000000057e77c <+24260>:	mov    %rbx,%rsi
0x000000000057e77f <+24263>:	mov    %rbp,%rdi
0x000000000057e782 <+24266>:	call   0x573f7b <lltrace_instruction>
0x000000000057e787 <+24271>:	jmp    0x57e6ee <_PyEval_EvalFrameDefault+24118>
0x000000000057e78c <+24276>:	mov    $0x7444e0,%ecx
0x000000000057e791 <+24281>:	mov    $0xc0e,%edx
0x000000000057e796 <+24286>:	mov    $0x74045c,%esi
0x000000000057e79b <+24291>:	mov    $0x742a50,%edi
0x000000000057e7a0 <+24296>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e7a5 <+24301>:	mov    $0xffffffff,%edx
0x000000000057e7aa <+24306>:	jmp    0x57e715 <_PyEval_EvalFrameDefault+24157>
0x000000000057e7af <+24311>:	lea    0x2(%r13),%r15
0x000000000057e7b3 <+24315>:	mov    %r13,0x38(%rbp)
0x000000000057e7b7 <+24319>:	cmpb   $0x0,0xc0(%rsp)
0x000000000057e7bf <+24327>:	jne    0x57e8f5 <_PyEval_EvalFrameDefault+24637>
0x000000000057e7c5 <+24333>:	mov    0x8(%rbp),%rsi
0x000000000057e7c9 <+24337>:	cmpq   $0x994540,0x8(%rsi)
0x000000000057e7d1 <+24345>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e7d7 <+24351>:	mov    0x10(%rbp),%rcx
0x000000000057e7db <+24355>:	cmpq   $0x994540,0x8(%rcx)
0x000000000057e7e3 <+24363>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e7e9 <+24369>:	movzwl 0x6(%r13),%edx
0x000000000057e7ee <+24374>:	movzwl 0x8(%r13),%eax
0x000000000057e7f3 <+24379>:	shl    $0x10,%eax
0x000000000057e7f6 <+24382>:	or     %eax,%edx
0x000000000057e7f8 <+24384>:	movzwl 0xa(%r13),%eax
0x000000000057e7fd <+24389>:	mov    0x20(%rsi),%rsi
0x000000000057e801 <+24393>:	cmp    %edx,0xc(%rsi)
0x000000000057e804 <+24396>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e80a <+24402>:	mov    0x20(%rcx),%rdx
0x000000000057e80e <+24406>:	movzwl %ax,%eax
0x000000000057e811 <+24409>:	cmp    %eax,0xc(%rdx)
0x000000000057e814 <+24412>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e81a <+24418>:	cmpb   $0x0,0xa(%rdx)
0x000000000057e81e <+24422>:	je     0x57e90e <_PyEval_EvalFrameDefault+24662>
0x000000000057e824 <+24428>:	movzbl 0x9(%rdx),%ecx
0x000000000057e828 <+24432>:	mov    $0x1,%eax
0x000000000057e82d <+24437>:	shl    %cl,%rax
0x000000000057e830 <+24440>:	movzwl 0x4(%r13),%ecx
0x000000000057e835 <+24445>:	shl    $0x4,%rcx
0x000000000057e839 <+24449>:	add    %rcx,%rax
0x000000000057e83c <+24452>:	mov    0x28(%rdx,%rax,1),%rax
0x000000000057e841 <+24457>:	test   %rax,%rax
0x000000000057e844 <+24460>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000057e84a <+24466>:	movq   $0x0,(%rbx)
0x000000000057e851 <+24473>:	lea    0xc(%r13),%r14
0x000000000057e855 <+24477>:	mov    0x8(%rsp),%edx
0x000000000057e859 <+24481>:	and    $0x1,%edx
0x000000000057e85c <+24484>:	lea    0x8(%rbx,%rdx,8),%rbx
0x000000000057e861 <+24489>:	mov    0x20(%rbp),%rcx
0x000000000057e865 <+24493>:	movslq 0x4c(%rcx),%rdx
0x000000000057e869 <+24497>:	lea    0x48(%rbp,%rdx,8),%rsi
0x000000000057e86e <+24502>:	mov    %rbx,%rdx
0x000000000057e871 <+24505>:	sub    %rsi,%rdx
0x000000000057e874 <+24508>:	sar    $0x3,%rdx
0x000000000057e878 <+24512>:	cmp    %edx,0x44(%rcx)
0x000000000057e87b <+24515>:	jl     0x57e927 <_PyEval_EvalFrameDefault+24687>
0x000000000057e881 <+24521>:	addq   $0x1,0x5451ff(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057e889 <+24529>:	mov    (%rax),%rcx
0x000000000057e88c <+24532>:	lea    0x1(%rcx),%rdx
0x000000000057e890 <+24536>:	mov    %rdx,(%rax)
0x000000000057e893 <+24539>:	mov    %rax,-0x8(%rbx)
0x000000000057e897 <+24543>:	movzwl 0xc(%r13),%r12d
0x000000000057e89c <+24548>:	mov    %r12d,%eax
0x000000000057e89f <+24551>:	shr    $0x8,%ax
0x000000000057e8a3 <+24555>:	movzwl %ax,%eax
0x000000000057e8a6 <+24558>:	mov    %eax,0x8(%rsp)
0x000000000057e8aa <+24562>:	cmpl   $0x0,0x14(%rsp)
0x000000000057e8af <+24567>:	jne    0x57e940 <_PyEval_EvalFrameDefault+24712>
0x000000000057e8b5 <+24573>:	movzbl 0xc0(%rsp),%eax
0x000000000057e8bd <+24581>:	lea    -0x1(%rax),%edx
0x000000000057e8c0 <+24584>:	cmp    $0xfd,%dl
0x000000000057e8c3 <+24587>:	jbe    0x57e953 <_PyEval_EvalFrameDefault+24731>
0x000000000057e8c9 <+24593>:	cmpw   $0x0,0x540b7b(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057e8d1 <+24601>:	jne    0x57e96c <_PyEval_EvalFrameDefault+24756>
0x000000000057e8d7 <+24607>:	mov    $0x0,%edx
0x000000000057e8dc <+24612>:	or     %edx,%eax
0x000000000057e8de <+24614>:	or     %eax,%r12d
0x000000000057e8e1 <+24617>:	movzbl %r12b,%eax
0x000000000057e8e5 <+24621>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e8ed <+24629>:	mov    %r14,%r13
0x000000000057e8f0 <+24632>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e8f5 <+24637>:	mov    $0x7444e0,%ecx
0x000000000057e8fa <+24642>:	mov    $0xc12,%edx
0x000000000057e8ff <+24647>:	mov    $0x74045c,%esi
0x000000000057e904 <+24652>:	mov    $0x7408ff,%edi
0x000000000057e909 <+24657>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e90e <+24662>:	mov    $0x7444e0,%ecx
0x000000000057e913 <+24667>:	mov    $0xc1c,%edx
0x000000000057e918 <+24672>:	mov    $0x74045c,%esi
0x000000000057e91d <+24677>:	mov    $0x740ad2,%edi
0x000000000057e922 <+24682>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e927 <+24687>:	mov    $0x7444e0,%ecx
0x000000000057e92c <+24692>:	mov    $0xc24,%edx
0x000000000057e931 <+24697>:	mov    $0x74045c,%esi
0x000000000057e936 <+24702>:	mov    $0x7408bc,%edi
0x000000000057e93b <+24707>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e940 <+24712>:	mov    %r14,%rdx
0x000000000057e943 <+24715>:	mov    %rbx,%rsi
0x000000000057e946 <+24718>:	mov    %rbp,%rdi
0x000000000057e949 <+24721>:	call   0x573f7b <lltrace_instruction>
0x000000000057e94e <+24726>:	jmp    0x57e8b5 <_PyEval_EvalFrameDefault+24573>
0x000000000057e953 <+24731>:	mov    $0x7444e0,%ecx
0x000000000057e958 <+24736>:	mov    $0xc27,%edx
0x000000000057e95d <+24741>:	mov    $0x74045c,%esi
0x000000000057e962 <+24746>:	mov    $0x742a50,%edi
0x000000000057e967 <+24751>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057e96c <+24756>:	mov    $0xffffffff,%edx
0x000000000057e971 <+24761>:	jmp    0x57e8dc <_PyEval_EvalFrameDefault+24612>
0x000000000057e976 <+24766>:	lea    0x2(%r13),%r15
0x000000000057e97a <+24770>:	mov    %r13,0x38(%rbp)
0x000000000057e97e <+24774>:	mov    0x8(%rsp),%ecx
0x000000000057e982 <+24778>:	movslq %ecx,%rax
0x000000000057e985 <+24781>:	mov    0x48(%rbp,%rax,8),%rdi
0x000000000057e98a <+24786>:	test   %rdi,%rdi
0x000000000057e98d <+24789>:	je     0x589b4e <_PyEval_EvalFrameDefault+70294>
0x000000000057e993 <+24795>:	movq   $0x0,0x48(%rbp,%rax,8)
0x000000000057e99c <+24804>:	call   0x573cb3 <Py_XDECREF>
0x000000000057e9a1 <+24809>:	movzwl 0x2(%r13),%r12d
0x000000000057e9a6 <+24814>:	mov    %r12d,%eax
0x000000000057e9a9 <+24817>:	shr    $0x8,%ax
0x000000000057e9ad <+24821>:	movzwl %ax,%eax
0x000000000057e9b0 <+24824>:	mov    %eax,0x8(%rsp)
0x000000000057e9b4 <+24828>:	cmpl   $0x0,0x14(%rsp)
0x000000000057e9b9 <+24833>:	jne    0x57e9f3 <_PyEval_EvalFrameDefault+24891>
0x000000000057e9bb <+24835>:	movzbl 0xc0(%rsp),%eax
0x000000000057e9c3 <+24843>:	lea    -0x1(%rax),%edx
0x000000000057e9c6 <+24846>:	cmp    $0xfd,%dl
0x000000000057e9c9 <+24849>:	jbe    0x57ea03 <_PyEval_EvalFrameDefault+24907>
0x000000000057e9cb <+24851>:	cmpw   $0x0,0x540a79(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057e9d3 <+24859>:	jne    0x57ea1c <_PyEval_EvalFrameDefault+24932>
0x000000000057e9d5 <+24861>:	mov    $0x0,%edx
0x000000000057e9da <+24866>:	or     %edx,%eax
0x000000000057e9dc <+24868>:	or     %eax,%r12d
0x000000000057e9df <+24871>:	movzbl %r12b,%eax
0x000000000057e9e3 <+24875>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057e9eb <+24883>:	mov    %r15,%r13
0x000000000057e9ee <+24886>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057e9f3 <+24891>:	mov    %r15,%rdx
0x000000000057e9f6 <+24894>:	mov    %rbx,%rsi
0x000000000057e9f9 <+24897>:	mov    %rbp,%rdi
0x000000000057e9fc <+24900>:	call   0x573f7b <lltrace_instruction>
0x000000000057ea01 <+24905>:	jmp    0x57e9bb <_PyEval_EvalFrameDefault+24835>
0x000000000057ea03 <+24907>:	mov    $0x7444e0,%ecx
0x000000000057ea08 <+24912>:	mov    $0xc2e,%edx
0x000000000057ea0d <+24917>:	mov    $0x74045c,%esi
0x000000000057ea12 <+24922>:	mov    $0x742a50,%edi
0x000000000057ea17 <+24927>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ea1c <+24932>:	mov    $0xffffffff,%edx
0x000000000057ea21 <+24937>:	jmp    0x57e9da <_PyEval_EvalFrameDefault+24866>
0x000000000057ea23 <+24939>:	lea    0x2(%r13),%r14
0x000000000057ea27 <+24943>:	mov    %r13,0x38(%rbp)
0x000000000057ea2b <+24947>:	mov    0x8(%rsp),%r15d
0x000000000057ea30 <+24952>:	movslq %r15d,%rax
0x000000000057ea33 <+24955>:	mov    0x48(%rbp,%rax,8),%rdi
0x000000000057ea38 <+24960>:	call   0x4abd2b <PyCell_New>
0x000000000057ea3d <+24965>:	mov    %rax,%rdx
0x000000000057ea40 <+24968>:	test   %rax,%rax
0x000000000057ea43 <+24971>:	je     0x578980 <_PyEval_EvalFrameDefault+200>
0x000000000057ea49 <+24977>:	movslq %r15d,%rax
0x000000000057ea4c <+24980>:	add    $0x8,%rax
0x000000000057ea50 <+24984>:	mov    0x8(%rbp,%rax,8),%rdi
0x000000000057ea55 <+24989>:	mov    %rdx,0x8(%rbp,%rax,8)
0x000000000057ea5a <+24994>:	call   0x573cb3 <Py_XDECREF>
0x000000000057ea5f <+24999>:	movzwl 0x2(%r13),%r12d
0x000000000057ea64 <+25004>:	mov    %r12d,%eax
0x000000000057ea67 <+25007>:	shr    $0x8,%ax
0x000000000057ea6b <+25011>:	movzwl %ax,%eax
0x000000000057ea6e <+25014>:	mov    %eax,0x8(%rsp)
0x000000000057ea72 <+25018>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ea77 <+25023>:	jne    0x57eab1 <_PyEval_EvalFrameDefault+25081>
0x000000000057ea79 <+25025>:	movzbl 0xc0(%rsp),%eax
0x000000000057ea81 <+25033>:	lea    -0x1(%rax),%edx
0x000000000057ea84 <+25036>:	cmp    $0xfd,%dl
0x000000000057ea87 <+25039>:	jbe    0x57eac1 <_PyEval_EvalFrameDefault+25097>
0x000000000057ea89 <+25041>:	cmpw   $0x0,0x5409bb(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ea91 <+25049>:	jne    0x57eada <_PyEval_EvalFrameDefault+25122>
0x000000000057ea93 <+25051>:	mov    $0x0,%edx
0x000000000057ea98 <+25056>:	or     %edx,%eax
0x000000000057ea9a <+25058>:	or     %eax,%r12d
0x000000000057ea9d <+25061>:	movzbl %r12b,%eax
0x000000000057eaa1 <+25065>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057eaa9 <+25073>:	mov    %r14,%r13
0x000000000057eaac <+25076>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057eab1 <+25081>:	mov    %r14,%rdx
0x000000000057eab4 <+25084>:	mov    %rbx,%rsi
0x000000000057eab7 <+25087>:	mov    %rbp,%rdi
0x000000000057eaba <+25090>:	call   0x573f7b <lltrace_instruction>
0x000000000057eabf <+25095>:	jmp    0x57ea79 <_PyEval_EvalFrameDefault+25025>
0x000000000057eac1 <+25097>:	mov    $0x7444e0,%ecx
0x000000000057eac6 <+25102>:	mov    $0xc3c,%edx
0x000000000057eacb <+25107>:	mov    $0x74045c,%esi
0x000000000057ead0 <+25112>:	mov    $0x742a50,%edi
0x000000000057ead5 <+25117>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057eada <+25122>:	mov    $0xffffffff,%edx
0x000000000057eadf <+25127>:	jmp    0x57ea98 <_PyEval_EvalFrameDefault+25056>
0x000000000057eae1 <+25129>:	lea    0x2(%r13),%r15
0x000000000057eae5 <+25133>:	mov    %r13,0x38(%rbp)
0x000000000057eae9 <+25137>:	movslq 0x8(%rsp),%rax
0x000000000057eaee <+25142>:	mov    0x48(%rbp,%rax,8),%rax
0x000000000057eaf3 <+25147>:	mov    0x10(%rax),%rdx
0x000000000057eaf7 <+25151>:	test   %rdx,%rdx
0x000000000057eafa <+25154>:	je     0x57eb99 <_PyEval_EvalFrameDefault+25313>
0x000000000057eb00 <+25160>:	movq   $0x0,0x10(%rax)
0x000000000057eb08 <+25168>:	mov    $0xc44,%esi
0x000000000057eb0d <+25173>:	mov    $0x74045c,%edi
0x000000000057eb12 <+25178>:	call   0x573c83 <Py_DECREF>
0x000000000057eb17 <+25183>:	movzwl 0x2(%r13),%r12d
0x000000000057eb1c <+25188>:	mov    %r12d,%eax
0x000000000057eb1f <+25191>:	shr    $0x8,%ax
0x000000000057eb23 <+25195>:	movzwl %ax,%eax
0x000000000057eb26 <+25198>:	mov    %eax,0x8(%rsp)
0x000000000057eb2a <+25202>:	cmpl   $0x0,0x14(%rsp)
0x000000000057eb2f <+25207>:	jne    0x57eb69 <_PyEval_EvalFrameDefault+25265>
0x000000000057eb31 <+25209>:	movzbl 0xc0(%rsp),%eax
0x000000000057eb39 <+25217>:	lea    -0x1(%rax),%edx
0x000000000057eb3c <+25220>:	cmp    $0xfd,%dl
0x000000000057eb3f <+25223>:	jbe    0x57eb79 <_PyEval_EvalFrameDefault+25281>
0x000000000057eb41 <+25225>:	cmpw   $0x0,0x540903(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057eb49 <+25233>:	jne    0x57eb92 <_PyEval_EvalFrameDefault+25306>
0x000000000057eb4b <+25235>:	mov    $0x0,%edx
0x000000000057eb50 <+25240>:	or     %edx,%eax
0x000000000057eb52 <+25242>:	or     %eax,%r12d
0x000000000057eb55 <+25245>:	movzbl %r12b,%eax
0x000000000057eb59 <+25249>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057eb61 <+25257>:	mov    %r15,%r13
0x000000000057eb64 <+25260>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057eb69 <+25265>:	mov    %r15,%rdx
0x000000000057eb6c <+25268>:	mov    %rbx,%rsi
0x000000000057eb6f <+25271>:	mov    %rbp,%rdi
0x000000000057eb72 <+25274>:	call   0x573f7b <lltrace_instruction>
0x000000000057eb77 <+25279>:	jmp    0x57eb31 <_PyEval_EvalFrameDefault+25209>
0x000000000057eb79 <+25281>:	mov    $0x7444e0,%ecx
0x000000000057eb7e <+25286>:	mov    $0xc45,%edx
0x000000000057eb83 <+25291>:	mov    $0x74045c,%esi
0x000000000057eb88 <+25296>:	mov    $0x742a50,%edi
0x000000000057eb8d <+25301>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057eb92 <+25306>:	mov    $0xffffffff,%edx
0x000000000057eb97 <+25311>:	jmp    0x57eb50 <_PyEval_EvalFrameDefault+25240>
0x000000000057eb99 <+25313>:	mov    0x20(%rbp),%rsi
0x000000000057eb9d <+25317>:	mov    0x8(%rsp),%edx
0x000000000057eba1 <+25321>:	mov    0x18(%rsp),%rdi
0x000000000057eba6 <+25326>:	call   0x576ed2 <format_exc_unbound>
0x000000000057ebab <+25331>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057ebb0 <+25336>:	lea    0x2(%r13),%r15
0x000000000057ebb4 <+25340>:	mov    %r13,0x38(%rbp)
0x000000000057ebb8 <+25344>:	mov    0x18(%rbp),%rdi
0x000000000057ebbc <+25348>:	test   %rdi,%rdi
0x000000000057ebbf <+25351>:	je     0x57eca3 <_PyEval_EvalFrameDefault+25579>
0x000000000057ebc5 <+25357>:	mov    0x8(%rsp),%ecx
0x000000000057ebc9 <+25361>:	test   %ecx,%ecx
0x000000000057ebcb <+25363>:	js     0x57ecbc <_PyEval_EvalFrameDefault+25604>
0x000000000057ebd1 <+25369>:	mov    0x20(%rbp),%rax
0x000000000057ebd5 <+25373>:	cmp    %ecx,0x4c(%rax)
0x000000000057ebd8 <+25376>:	jle    0x57ecbc <_PyEval_EvalFrameDefault+25604>
0x000000000057ebde <+25382>:	mov    0x60(%rax),%rax
0x000000000057ebe2 <+25386>:	mov    0x8(%rax),%rdx
0x000000000057ebe6 <+25390>:	testb  $0x4,0xab(%rdx)
0x000000000057ebed <+25397>:	je     0x57ecd5 <_PyEval_EvalFrameDefault+25629>
0x000000000057ebf3 <+25403>:	movslq 0x8(%rsp),%rdx
0x000000000057ebf8 <+25408>:	mov    0x18(%rax,%rdx,8),%rsi
0x000000000057ebfd <+25413>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057ec05 <+25421>:	je     0x57ecee <_PyEval_EvalFrameDefault+25654>
0x000000000057ec0b <+25427>:	call   0x492ead <PyObject_GetItem>
0x000000000057ec10 <+25432>:	mov    %rax,%r12
0x000000000057ec13 <+25435>:	test   %rax,%rax
0x000000000057ec16 <+25438>:	je     0x57ed27 <_PyEval_EvalFrameDefault+25711>
0x000000000057ec1c <+25444>:	lea    0x8(%rbx),%r13
0x000000000057ec20 <+25448>:	mov    %r12,(%rbx)
0x000000000057ec23 <+25451>:	mov    0x20(%rbp),%rdx
0x000000000057ec27 <+25455>:	movslq 0x4c(%rdx),%rax
0x000000000057ec2b <+25459>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057ec30 <+25464>:	mov    %r13,%rax
0x000000000057ec33 <+25467>:	sub    %rcx,%rax
0x000000000057ec36 <+25470>:	sar    $0x3,%rax
0x000000000057ec3a <+25474>:	cmp    %eax,0x44(%rdx)
0x000000000057ec3d <+25477>:	jl     0x57ed97 <_PyEval_EvalFrameDefault+25823>
0x000000000057ec43 <+25483>:	movzwl (%r15),%r12d
0x000000000057ec47 <+25487>:	mov    %r12d,%eax
0x000000000057ec4a <+25490>:	shr    $0x8,%ax
0x000000000057ec4e <+25494>:	movzwl %ax,%eax
0x000000000057ec51 <+25497>:	mov    %eax,0x8(%rsp)
0x000000000057ec55 <+25501>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ec5a <+25506>:	jne    0x57edb0 <_PyEval_EvalFrameDefault+25848>
0x000000000057ec60 <+25512>:	movzbl 0xc0(%rsp),%eax
0x000000000057ec68 <+25520>:	lea    -0x1(%rax),%edx
0x000000000057ec6b <+25523>:	cmp    $0xfd,%dl
0x000000000057ec6e <+25526>:	jbe    0x57edc3 <_PyEval_EvalFrameDefault+25867>
0x000000000057ec74 <+25532>:	cmpw   $0x0,0x5407d0(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ec7c <+25540>:	jne    0x57eddc <_PyEval_EvalFrameDefault+25892>
0x000000000057ec82 <+25546>:	mov    $0x0,%edx
0x000000000057ec87 <+25551>:	or     %edx,%eax
0x000000000057ec89 <+25553>:	or     %eax,%r12d
0x000000000057ec8c <+25556>:	movzbl %r12b,%eax
0x000000000057ec90 <+25560>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ec98 <+25568>:	mov    %r13,%rbx
0x000000000057ec9b <+25571>:	mov    %r15,%r13
0x000000000057ec9e <+25574>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057eca3 <+25579>:	mov    $0x7444e0,%ecx
0x000000000057eca8 <+25584>:	mov    $0xc4d,%edx
0x000000000057ecad <+25589>:	mov    $0x74045c,%esi
0x000000000057ecb2 <+25594>:	mov    $0x6e5af6,%edi
0x000000000057ecb7 <+25599>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ecbc <+25604>:	mov    $0x7444e0,%ecx
0x000000000057ecc1 <+25609>:	mov    $0xc4e,%edx
0x000000000057ecc6 <+25614>:	mov    $0x74045c,%esi
0x000000000057eccb <+25619>:	mov    $0x742ce0,%edi
0x000000000057ecd0 <+25624>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ecd5 <+25629>:	mov    $0x7444e0,%ecx
0x000000000057ecda <+25634>:	mov    $0xc4f,%edx
0x000000000057ecdf <+25639>:	mov    $0x74045c,%esi
0x000000000057ece4 <+25644>:	mov    $0x742d18,%edi
0x000000000057ece9 <+25649>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ecee <+25654>:	call   0x4e0de6 <PyDict_GetItemWithError>
0x000000000057ecf3 <+25659>:	mov    %rax,%r12
0x000000000057ecf6 <+25662>:	test   %rax,%rax
0x000000000057ecf9 <+25665>:	je     0x57ed13 <_PyEval_EvalFrameDefault+25691>
0x000000000057ecfb <+25667>:	addq   $0x1,0x544d85(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ed03 <+25675>:	mov    (%rax),%rax
0x000000000057ed06 <+25678>:	add    $0x1,%rax
0x000000000057ed0a <+25682>:	mov    %rax,(%r12)
0x000000000057ed0e <+25686>:	jmp    0x57ec1c <_PyEval_EvalFrameDefault+25444>
0x000000000057ed13 <+25691>:	mov    0x18(%rsp),%rdi
0x000000000057ed18 <+25696>:	call   0x573630 <_PyErr_Occurred>
0x000000000057ed1d <+25701>:	test   %rax,%rax
0x000000000057ed20 <+25704>:	je     0x57ed4b <_PyEval_EvalFrameDefault+25747>
0x000000000057ed22 <+25706>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057ed27 <+25711>:	mov    0x40b16a(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057ed2e <+25718>:	mov    0x18(%rsp),%r14
0x000000000057ed33 <+25723>:	mov    %r14,%rdi
0x000000000057ed36 <+25726>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057ed3b <+25731>:	test   %eax,%eax
0x000000000057ed3d <+25733>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057ed43 <+25739>:	mov    %r14,%rdi
0x000000000057ed46 <+25742>:	call   0x5a273b <_PyErr_Clear>
0x000000000057ed4b <+25747>:	test   %r12,%r12
0x000000000057ed4e <+25750>:	jne    0x57ec1c <_PyEval_EvalFrameDefault+25444>
0x000000000057ed54 <+25756>:	movslq 0x8(%rsp),%rax
0x000000000057ed59 <+25761>:	mov    0x48(%rbp,%rax,8),%rax
0x000000000057ed5e <+25766>:	mov    0x10(%rax),%r12
0x000000000057ed62 <+25770>:	test   %r12,%r12
0x000000000057ed65 <+25773>:	je     0x57ed80 <_PyEval_EvalFrameDefault+25800>
0x000000000057ed67 <+25775>:	addq   $0x1,0x544d19(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ed6f <+25783>:	mov    (%r12),%rax
0x000000000057ed73 <+25787>:	add    $0x1,%rax
0x000000000057ed77 <+25791>:	mov    %rax,(%r12)
0x000000000057ed7b <+25795>:	jmp    0x57ec1c <_PyEval_EvalFrameDefault+25444>
0x000000000057ed80 <+25800>:	mov    0x20(%rbp),%rsi
0x000000000057ed84 <+25804>:	mov    0x8(%rsp),%edx
0x000000000057ed88 <+25808>:	mov    0x18(%rsp),%rdi
0x000000000057ed8d <+25813>:	call   0x576ed2 <format_exc_unbound>
0x000000000057ed92 <+25818>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057ed97 <+25823>:	mov    $0x7444e0,%ecx
0x000000000057ed9c <+25828>:	mov    $0xc6b,%edx
0x000000000057eda1 <+25833>:	mov    $0x74045c,%esi
0x000000000057eda6 <+25838>:	mov    $0x7408bc,%edi
0x000000000057edab <+25843>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057edb0 <+25848>:	mov    %r15,%rdx
0x000000000057edb3 <+25851>:	mov    %r13,%rsi
0x000000000057edb6 <+25854>:	mov    %rbp,%rdi
0x000000000057edb9 <+25857>:	call   0x573f7b <lltrace_instruction>
0x000000000057edbe <+25862>:	jmp    0x57ec60 <_PyEval_EvalFrameDefault+25512>
0x000000000057edc3 <+25867>:	mov    $0x7444e0,%ecx
0x000000000057edc8 <+25872>:	mov    $0xc6c,%edx
0x000000000057edcd <+25877>:	mov    $0x74045c,%esi
0x000000000057edd2 <+25882>:	mov    $0x742a50,%edi
0x000000000057edd7 <+25887>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057eddc <+25892>:	mov    $0xffffffff,%edx
0x000000000057ede1 <+25897>:	jmp    0x57ec87 <_PyEval_EvalFrameDefault+25551>
0x000000000057ede6 <+25902>:	lea    0x2(%r13),%r15
0x000000000057edea <+25906>:	mov    %r13,0x38(%rbp)
0x000000000057edee <+25910>:	movslq 0x8(%rsp),%rax
0x000000000057edf3 <+25915>:	mov    0x48(%rbp,%rax,8),%rax
0x000000000057edf8 <+25920>:	mov    0x10(%rax),%rax
0x000000000057edfc <+25924>:	test   %rax,%rax
0x000000000057edff <+25927>:	je     0x57ee8e <_PyEval_EvalFrameDefault+26070>
0x000000000057ee05 <+25933>:	addq   $0x1,0x544c7b(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057ee0d <+25941>:	mov    (%rax),%rcx
0x000000000057ee10 <+25944>:	lea    0x1(%rcx),%rdx
0x000000000057ee14 <+25948>:	mov    %rdx,(%rax)
0x000000000057ee17 <+25951>:	lea    0x8(%rbx),%r13
0x000000000057ee1b <+25955>:	mov    %rax,(%rbx)
0x000000000057ee1e <+25958>:	mov    0x20(%rbp),%rdx
0x000000000057ee22 <+25962>:	movslq 0x4c(%rdx),%rax
0x000000000057ee26 <+25966>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057ee2b <+25971>:	mov    %r13,%rax
0x000000000057ee2e <+25974>:	sub    %rcx,%rax
0x000000000057ee31 <+25977>:	sar    $0x3,%rax
0x000000000057ee35 <+25981>:	cmp    %eax,0x44(%rdx)
0x000000000057ee38 <+25984>:	jl     0x57eea5 <_PyEval_EvalFrameDefault+26093>
0x000000000057ee3a <+25986>:	movzwl (%r15),%r12d
0x000000000057ee3e <+25990>:	mov    %r12d,%eax
0x000000000057ee41 <+25993>:	shr    $0x8,%ax
0x000000000057ee45 <+25997>:	movzwl %ax,%eax
0x000000000057ee48 <+26000>:	mov    %eax,0x8(%rsp)
0x000000000057ee4c <+26004>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ee51 <+26009>:	jne    0x57eebe <_PyEval_EvalFrameDefault+26118>
0x000000000057ee53 <+26011>:	movzbl 0xc0(%rsp),%eax
0x000000000057ee5b <+26019>:	lea    -0x1(%rax),%edx
0x000000000057ee5e <+26022>:	cmp    $0xfd,%dl
0x000000000057ee61 <+26025>:	jbe    0x57eece <_PyEval_EvalFrameDefault+26134>
0x000000000057ee63 <+26027>:	cmpw   $0x0,0x5405e1(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ee6b <+26035>:	jne    0x57eee7 <_PyEval_EvalFrameDefault+26159>
0x000000000057ee6d <+26037>:	mov    $0x0,%edx
0x000000000057ee72 <+26042>:	or     %edx,%eax
0x000000000057ee74 <+26044>:	or     %eax,%r12d
0x000000000057ee77 <+26047>:	movzbl %r12b,%eax
0x000000000057ee7b <+26051>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ee83 <+26059>:	mov    %r13,%rbx
0x000000000057ee86 <+26062>:	mov    %r15,%r13
0x000000000057ee89 <+26065>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057ee8e <+26070>:	mov    0x20(%rbp),%rsi
0x000000000057ee92 <+26074>:	mov    0x8(%rsp),%edx
0x000000000057ee96 <+26078>:	mov    0x18(%rsp),%rdi
0x000000000057ee9b <+26083>:	call   0x576ed2 <format_exc_unbound>
0x000000000057eea0 <+26088>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057eea5 <+26093>:	mov    $0x7444e0,%ecx
0x000000000057eeaa <+26098>:	mov    $0xc77,%edx
0x000000000057eeaf <+26103>:	mov    $0x74045c,%esi
0x000000000057eeb4 <+26108>:	mov    $0x7408bc,%edi
0x000000000057eeb9 <+26113>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057eebe <+26118>:	mov    %r15,%rdx
0x000000000057eec1 <+26121>:	mov    %r13,%rsi
0x000000000057eec4 <+26124>:	mov    %rbp,%rdi
0x000000000057eec7 <+26127>:	call   0x573f7b <lltrace_instruction>
0x000000000057eecc <+26132>:	jmp    0x57ee53 <_PyEval_EvalFrameDefault+26011>
0x000000000057eece <+26134>:	mov    $0x7444e0,%ecx
0x000000000057eed3 <+26139>:	mov    $0xc78,%edx
0x000000000057eed8 <+26144>:	mov    $0x74045c,%esi
0x000000000057eedd <+26149>:	mov    $0x742a50,%edi
0x000000000057eee2 <+26154>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057eee7 <+26159>:	mov    $0xffffffff,%edx
0x000000000057eeec <+26164>:	jmp    0x57ee72 <_PyEval_EvalFrameDefault+26042>
0x000000000057eeee <+26166>:	lea    0x2(%r13),%r14
0x000000000057eef2 <+26170>:	mov    %r13,0x38(%rbp)
0x000000000057eef6 <+26174>:	mov    0x20(%rbp),%rax
0x000000000057eefa <+26178>:	movslq 0x4c(%rax),%rax
0x000000000057eefe <+26182>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057ef03 <+26187>:	mov    %rbx,%rax
0x000000000057ef06 <+26190>:	sub    %rdx,%rax
0x000000000057ef09 <+26193>:	sar    $0x3,%rax
0x000000000057ef0d <+26197>:	test   %eax,%eax
0x000000000057ef0f <+26199>:	jle    0x57ef81 <_PyEval_EvalFrameDefault+26313>
0x000000000057ef11 <+26201>:	sub    $0x8,%rbx
0x000000000057ef15 <+26205>:	mov    (%rbx),%rdx
0x000000000057ef18 <+26208>:	movslq 0x8(%rsp),%rax
0x000000000057ef1d <+26213>:	mov    0x48(%rbp,%rax,8),%rax
0x000000000057ef22 <+26218>:	mov    0x10(%rax),%rdi
0x000000000057ef26 <+26222>:	mov    %rdx,0x10(%rax)
0x000000000057ef2a <+26226>:	call   0x573cb3 <Py_XDECREF>
0x000000000057ef2f <+26231>:	movzwl 0x2(%r13),%r12d
0x000000000057ef34 <+26236>:	mov    %r12d,%eax
0x000000000057ef37 <+26239>:	shr    $0x8,%ax
0x000000000057ef3b <+26243>:	movzwl %ax,%eax
0x000000000057ef3e <+26246>:	mov    %eax,0x8(%rsp)
0x000000000057ef42 <+26250>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ef47 <+26255>:	jne    0x57ef9a <_PyEval_EvalFrameDefault+26338>
0x000000000057ef49 <+26257>:	movzbl 0xc0(%rsp),%eax
0x000000000057ef51 <+26265>:	lea    -0x1(%rax),%edx
0x000000000057ef54 <+26268>:	cmp    $0xfd,%dl
0x000000000057ef57 <+26271>:	jbe    0x57efaa <_PyEval_EvalFrameDefault+26354>
0x000000000057ef59 <+26273>:	cmpw   $0x0,0x5404eb(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ef61 <+26281>:	jne    0x57efc3 <_PyEval_EvalFrameDefault+26379>
0x000000000057ef63 <+26283>:	mov    $0x0,%edx
0x000000000057ef68 <+26288>:	or     %edx,%eax
0x000000000057ef6a <+26290>:	or     %eax,%r12d
0x000000000057ef6d <+26293>:	movzbl %r12b,%eax
0x000000000057ef71 <+26297>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ef79 <+26305>:	mov    %r14,%r13
0x000000000057ef7c <+26308>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057ef81 <+26313>:	mov    $0x7444e0,%ecx
0x000000000057ef86 <+26318>:	mov    $0xc7c,%edx
0x000000000057ef8b <+26323>:	mov    $0x74045c,%esi
0x000000000057ef90 <+26328>:	mov    $0x7408da,%edi
0x000000000057ef95 <+26333>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ef9a <+26338>:	mov    %r14,%rdx
0x000000000057ef9d <+26341>:	mov    %rbx,%rsi
0x000000000057efa0 <+26344>:	mov    %rbp,%rdi
0x000000000057efa3 <+26347>:	call   0x573f7b <lltrace_instruction>
0x000000000057efa8 <+26352>:	jmp    0x57ef49 <_PyEval_EvalFrameDefault+26257>
0x000000000057efaa <+26354>:	mov    $0x7444e0,%ecx
0x000000000057efaf <+26359>:	mov    $0xc81,%edx
0x000000000057efb4 <+26364>:	mov    $0x74045c,%esi
0x000000000057efb9 <+26369>:	mov    $0x742a50,%edi
0x000000000057efbe <+26374>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057efc3 <+26379>:	mov    $0xffffffff,%edx
0x000000000057efc8 <+26384>:	jmp    0x57ef68 <_PyEval_EvalFrameDefault+26288>
0x000000000057efca <+26386>:	lea    0x2(%r13),%r14
0x000000000057efce <+26390>:	mov    %r13,0x38(%rbp)
0x000000000057efd2 <+26394>:	mov    0x20(%rbp),%rax
0x000000000057efd6 <+26398>:	mov    0x0(%rbp),%rdx
0x000000000057efda <+26402>:	mov    0x48(%rdx),%rsi
0x000000000057efde <+26406>:	mov    0x54(%rax),%edi
0x000000000057efe1 <+26409>:	add    0x50(%rax),%edi
0x000000000057efe4 <+26412>:	mov    0x8(%rsp),%ecx
0x000000000057efe8 <+26416>:	cmp    %ecx,0x5c(%rax)
0x000000000057efeb <+26419>:	jne    0x57f033 <_PyEval_EvalFrameDefault+26491>
0x000000000057efed <+26421>:	mov    $0x0,%eax
0x000000000057eff2 <+26426>:	mov    0x8(%rsp),%r8d
0x000000000057eff7 <+26431>:	cmp    %eax,%r8d
0x000000000057effa <+26434>:	jle    0x57f065 <_PyEval_EvalFrameDefault+26541>
0x000000000057effc <+26436>:	mov    0x8(%rsi),%rdx
0x000000000057f000 <+26440>:	testb  $0x4,0xab(%rdx)
0x000000000057f007 <+26447>:	je     0x57f04c <_PyEval_EvalFrameDefault+26516>
0x000000000057f009 <+26449>:	movslq %eax,%rdx
0x000000000057f00c <+26452>:	mov    0x18(%rsi,%rdx,8),%rcx
0x000000000057f011 <+26457>:	addq   $0x1,0x544a6f(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000057f019 <+26465>:	mov    (%rcx),%rdx
0x000000000057f01c <+26468>:	add    $0x1,%rdx
0x000000000057f020 <+26472>:	mov    %rdx,(%rcx)
0x000000000057f023 <+26475>:	lea    (%rax,%rdi,1),%edx
0x000000000057f026 <+26478>:	movslq %edx,%rdx
0x000000000057f029 <+26481>:	mov    %rcx,0x48(%rbp,%rdx,8)
0x000000000057f02e <+26486>:	add    $0x1,%eax
0x000000000057f031 <+26489>:	jmp    0x57eff7 <_PyEval_EvalFrameDefault+26431>
0x000000000057f033 <+26491>:	mov    $0x7444e0,%ecx
0x000000000057f038 <+26496>:	mov    $0xc89,%edx
0x000000000057f03d <+26501>:	mov    $0x74045c,%esi
0x000000000057f042 <+26506>:	mov    $0x740af0,%edi
0x000000000057f047 <+26511>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f04c <+26516>:	mov    $0x7444e0,%ecx
0x000000000057f051 <+26521>:	mov    $0xc8b,%edx
0x000000000057f056 <+26526>:	mov    $0x74045c,%esi
0x000000000057f05b <+26531>:	mov    $0x6e5ab0,%edi
0x000000000057f060 <+26536>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f065 <+26541>:	movzwl (%r14),%r12d
0x000000000057f069 <+26545>:	mov    %r12d,%eax
0x000000000057f06c <+26548>:	shr    $0x8,%ax
0x000000000057f070 <+26552>:	movzwl %ax,%eax
0x000000000057f073 <+26555>:	mov    %eax,0x8(%rsp)
0x000000000057f077 <+26559>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f07c <+26564>:	jne    0x57f0b6 <_PyEval_EvalFrameDefault+26622>
0x000000000057f07e <+26566>:	movzbl 0xc0(%rsp),%eax
0x000000000057f086 <+26574>:	lea    -0x1(%rax),%edx
0x000000000057f089 <+26577>:	cmp    $0xfd,%dl
0x000000000057f08c <+26580>:	jbe    0x57f0c6 <_PyEval_EvalFrameDefault+26638>
0x000000000057f08e <+26582>:	cmpw   $0x0,0x5403b6(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f096 <+26590>:	jne    0x57f0df <_PyEval_EvalFrameDefault+26663>
0x000000000057f098 <+26592>:	mov    $0x0,%edx
0x000000000057f09d <+26597>:	or     %edx,%eax
0x000000000057f09f <+26599>:	or     %eax,%r12d
0x000000000057f0a2 <+26602>:	movzbl %r12b,%eax
0x000000000057f0a6 <+26606>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f0ae <+26614>:	mov    %r14,%r13
0x000000000057f0b1 <+26617>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f0b6 <+26622>:	mov    %r14,%rdx
0x000000000057f0b9 <+26625>:	mov    %rbx,%rsi
0x000000000057f0bc <+26628>:	mov    %rbp,%rdi
0x000000000057f0bf <+26631>:	call   0x573f7b <lltrace_instruction>
0x000000000057f0c4 <+26636>:	jmp    0x57f07e <_PyEval_EvalFrameDefault+26566>
0x000000000057f0c6 <+26638>:	mov    $0x7444e0,%ecx
0x000000000057f0cb <+26643>:	mov    $0xc8f,%edx
0x000000000057f0d0 <+26648>:	mov    $0x74045c,%esi
0x000000000057f0d5 <+26653>:	mov    $0x742a50,%edi
0x000000000057f0da <+26658>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f0df <+26663>:	mov    $0xffffffff,%edx
0x000000000057f0e4 <+26668>:	jmp    0x57f09d <_PyEval_EvalFrameDefault+26597>
0x000000000057f0e6 <+26670>:	lea    0x2(%r13),%r15
0x000000000057f0ea <+26674>:	mov    %r13,0x38(%rbp)
0x000000000057f0ee <+26678>:	movslq 0x8(%rsp),%rdx
0x000000000057f0f3 <+26683>:	lea    0x0(,%rdx,8),%rax
0x000000000057f0fb <+26691>:	mov    %rbx,%rsi
0x000000000057f0fe <+26694>:	sub    %rax,%rsi
0x000000000057f101 <+26697>:	mov    $0xa9c040,%edi
0x000000000057f106 <+26702>:	call   0x53227f <_PyUnicode_JoinArray>
0x000000000057f10b <+26707>:	mov    %rax,%r12
0x000000000057f10e <+26710>:	test   %rax,%rax
0x000000000057f111 <+26713>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f117 <+26719>:	mov    0x8(%rsp),%r13d
0x000000000057f11c <+26724>:	sub    $0x1,%r13d
0x000000000057f120 <+26728>:	js     0x57f16e <_PyEval_EvalFrameDefault+26806>
0x000000000057f122 <+26730>:	mov    0x20(%rbp),%rax
0x000000000057f126 <+26734>:	movslq 0x4c(%rax),%rax
0x000000000057f12a <+26738>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057f12f <+26743>:	mov    %rbx,%rax
0x000000000057f132 <+26746>:	sub    %rdx,%rax
0x000000000057f135 <+26749>:	sar    $0x3,%rax
0x000000000057f139 <+26753>:	test   %eax,%eax
0x000000000057f13b <+26755>:	jle    0x57f155 <_PyEval_EvalFrameDefault+26781>
0x000000000057f13d <+26757>:	sub    $0x8,%rbx
0x000000000057f141 <+26761>:	mov    (%rbx),%rdx
0x000000000057f144 <+26764>:	mov    $0xc9a,%esi
0x000000000057f149 <+26769>:	mov    $0x74045c,%edi
0x000000000057f14e <+26774>:	call   0x573c83 <Py_DECREF>
0x000000000057f153 <+26779>:	jmp    0x57f11c <_PyEval_EvalFrameDefault+26724>
0x000000000057f155 <+26781>:	mov    $0x7444e0,%ecx
0x000000000057f15a <+26786>:	mov    $0xc99,%edx
0x000000000057f15f <+26791>:	mov    $0x74045c,%esi
0x000000000057f164 <+26796>:	mov    $0x7408da,%edi
0x000000000057f169 <+26801>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f16e <+26806>:	lea    0x8(%rbx),%r13
0x000000000057f172 <+26810>:	mov    %r12,(%rbx)
0x000000000057f175 <+26813>:	mov    0x20(%rbp),%rdx
0x000000000057f179 <+26817>:	movslq 0x4c(%rdx),%rax
0x000000000057f17d <+26821>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057f182 <+26826>:	mov    %r13,%rax
0x000000000057f185 <+26829>:	sub    %rcx,%rax
0x000000000057f188 <+26832>:	sar    $0x3,%rax
0x000000000057f18c <+26836>:	cmp    %eax,0x44(%rdx)
0x000000000057f18f <+26839>:	jl     0x57f1e5 <_PyEval_EvalFrameDefault+26925>
0x000000000057f191 <+26841>:	movzwl (%r15),%r12d
0x000000000057f195 <+26845>:	mov    %r12d,%eax
0x000000000057f198 <+26848>:	shr    $0x8,%ax
0x000000000057f19c <+26852>:	movzwl %ax,%eax
0x000000000057f19f <+26855>:	mov    %eax,0x8(%rsp)
0x000000000057f1a3 <+26859>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f1a8 <+26864>:	jne    0x57f1fe <_PyEval_EvalFrameDefault+26950>
0x000000000057f1aa <+26866>:	movzbl 0xc0(%rsp),%eax
0x000000000057f1b2 <+26874>:	lea    -0x1(%rax),%edx
0x000000000057f1b5 <+26877>:	cmp    $0xfd,%dl
0x000000000057f1b8 <+26880>:	jbe    0x57f20e <_PyEval_EvalFrameDefault+26966>
0x000000000057f1ba <+26882>:	cmpw   $0x0,0x54028a(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f1c2 <+26890>:	jne    0x57f227 <_PyEval_EvalFrameDefault+26991>
0x000000000057f1c4 <+26892>:	mov    $0x0,%edx
0x000000000057f1c9 <+26897>:	or     %edx,%eax
0x000000000057f1cb <+26899>:	or     %eax,%r12d
0x000000000057f1ce <+26902>:	movzbl %r12b,%eax
0x000000000057f1d2 <+26906>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f1da <+26914>:	mov    %r13,%rbx
0x000000000057f1dd <+26917>:	mov    %r15,%r13
0x000000000057f1e0 <+26920>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f1e5 <+26925>:	mov    $0x7444e0,%ecx
0x000000000057f1ea <+26930>:	mov    $0xc9c,%edx
0x000000000057f1ef <+26935>:	mov    $0x74045c,%esi
0x000000000057f1f4 <+26940>:	mov    $0x7408bc,%edi
0x000000000057f1f9 <+26945>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f1fe <+26950>:	mov    %r15,%rdx
0x000000000057f201 <+26953>:	mov    %r13,%rsi
0x000000000057f204 <+26956>:	mov    %rbp,%rdi
0x000000000057f207 <+26959>:	call   0x573f7b <lltrace_instruction>
0x000000000057f20c <+26964>:	jmp    0x57f1aa <_PyEval_EvalFrameDefault+26866>
0x000000000057f20e <+26966>:	mov    $0x7444e0,%ecx
0x000000000057f213 <+26971>:	mov    $0xc9d,%edx
0x000000000057f218 <+26976>:	mov    $0x74045c,%esi
0x000000000057f21d <+26981>:	mov    $0x742a50,%edi
0x000000000057f222 <+26986>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f227 <+26991>:	mov    $0xffffffff,%edx
0x000000000057f22c <+26996>:	jmp    0x57f1c9 <_PyEval_EvalFrameDefault+26897>
0x000000000057f22e <+26998>:	lea    0x2(%r13),%r15
0x000000000057f232 <+27002>:	mov    %r13,0x38(%rbp)
0x000000000057f236 <+27006>:	movslq 0x8(%rsp),%rdi
0x000000000057f23b <+27011>:	call   0x5003ce <PyTuple_New>
0x000000000057f240 <+27016>:	mov    %rax,%r12
0x000000000057f243 <+27019>:	test   %rax,%rax
0x000000000057f246 <+27022>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f24c <+27028>:	mov    0x8(%rsp),%r13d
0x000000000057f251 <+27033>:	sub    $0x1,%r13d
0x000000000057f255 <+27037>:	js     0x57f29f <_PyEval_EvalFrameDefault+27111>
0x000000000057f257 <+27039>:	mov    0x20(%rbp),%rax
0x000000000057f25b <+27043>:	movslq 0x4c(%rax),%rax
0x000000000057f25f <+27047>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057f264 <+27052>:	mov    %rbx,%rax
0x000000000057f267 <+27055>:	sub    %rdx,%rax
0x000000000057f26a <+27058>:	sar    $0x3,%rax
0x000000000057f26e <+27062>:	test   %eax,%eax
0x000000000057f270 <+27064>:	jle    0x57f286 <_PyEval_EvalFrameDefault+27086>
0x000000000057f272 <+27066>:	sub    $0x8,%rbx
0x000000000057f276 <+27070>:	mov    (%rbx),%rdx
0x000000000057f279 <+27073>:	movslq %r13d,%rsi
0x000000000057f27c <+27076>:	mov    %r12,%rdi
0x000000000057f27f <+27079>:	call   0x573000 <PyTuple_SET_ITEM>
0x000000000057f284 <+27084>:	jmp    0x57f251 <_PyEval_EvalFrameDefault+27033>
0x000000000057f286 <+27086>:	mov    $0x7444e0,%ecx
0x000000000057f28b <+27091>:	mov    $0xca5,%edx
0x000000000057f290 <+27096>:	mov    $0x74045c,%esi
0x000000000057f295 <+27101>:	mov    $0x7408da,%edi
0x000000000057f29a <+27106>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f29f <+27111>:	lea    0x8(%rbx),%r13
0x000000000057f2a3 <+27115>:	mov    %r12,(%rbx)
0x000000000057f2a6 <+27118>:	mov    0x20(%rbp),%rdx
0x000000000057f2aa <+27122>:	movslq 0x4c(%rdx),%rax
0x000000000057f2ae <+27126>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057f2b3 <+27131>:	mov    %r13,%rax
0x000000000057f2b6 <+27134>:	sub    %rcx,%rax
0x000000000057f2b9 <+27137>:	sar    $0x3,%rax
0x000000000057f2bd <+27141>:	cmp    %eax,0x44(%rdx)
0x000000000057f2c0 <+27144>:	jl     0x57f316 <_PyEval_EvalFrameDefault+27230>
0x000000000057f2c2 <+27146>:	movzwl (%r15),%r12d
0x000000000057f2c6 <+27150>:	mov    %r12d,%eax
0x000000000057f2c9 <+27153>:	shr    $0x8,%ax
0x000000000057f2cd <+27157>:	movzwl %ax,%eax
0x000000000057f2d0 <+27160>:	mov    %eax,0x8(%rsp)
0x000000000057f2d4 <+27164>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f2d9 <+27169>:	jne    0x57f32f <_PyEval_EvalFrameDefault+27255>
0x000000000057f2db <+27171>:	movzbl 0xc0(%rsp),%eax
0x000000000057f2e3 <+27179>:	lea    -0x1(%rax),%edx
0x000000000057f2e6 <+27182>:	cmp    $0xfd,%dl
0x000000000057f2e9 <+27185>:	jbe    0x57f33f <_PyEval_EvalFrameDefault+27271>
0x000000000057f2eb <+27187>:	cmpw   $0x0,0x540159(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f2f3 <+27195>:	jne    0x57f358 <_PyEval_EvalFrameDefault+27296>
0x000000000057f2f5 <+27197>:	mov    $0x0,%edx
0x000000000057f2fa <+27202>:	or     %edx,%eax
0x000000000057f2fc <+27204>:	or     %eax,%r12d
0x000000000057f2ff <+27207>:	movzbl %r12b,%eax
0x000000000057f303 <+27211>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f30b <+27219>:	mov    %r13,%rbx
0x000000000057f30e <+27222>:	mov    %r15,%r13
0x000000000057f311 <+27225>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f316 <+27230>:	mov    $0x7444e0,%ecx
0x000000000057f31b <+27235>:	mov    $0xca8,%edx
0x000000000057f320 <+27240>:	mov    $0x74045c,%esi
0x000000000057f325 <+27245>:	mov    $0x7408bc,%edi
0x000000000057f32a <+27250>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f32f <+27255>:	mov    %r15,%rdx
0x000000000057f332 <+27258>:	mov    %r13,%rsi
0x000000000057f335 <+27261>:	mov    %rbp,%rdi
0x000000000057f338 <+27264>:	call   0x573f7b <lltrace_instruction>
0x000000000057f33d <+27269>:	jmp    0x57f2db <_PyEval_EvalFrameDefault+27171>
0x000000000057f33f <+27271>:	mov    $0x7444e0,%ecx
0x000000000057f344 <+27276>:	mov    $0xca9,%edx
0x000000000057f349 <+27281>:	mov    $0x74045c,%esi
0x000000000057f34e <+27286>:	mov    $0x742a50,%edi
0x000000000057f353 <+27291>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f358 <+27296>:	mov    $0xffffffff,%edx
0x000000000057f35d <+27301>:	jmp    0x57f2fa <_PyEval_EvalFrameDefault+27202>
0x000000000057f35f <+27303>:	lea    0x2(%r13),%r15
0x000000000057f363 <+27307>:	mov    %r13,0x38(%rbp)
0x000000000057f367 <+27311>:	movslq 0x8(%rsp),%rdi
0x000000000057f36c <+27316>:	call   0x4cf42e <PyList_New>
0x000000000057f371 <+27321>:	mov    %rax,%r12
0x000000000057f374 <+27324>:	test   %rax,%rax
0x000000000057f377 <+27327>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f37d <+27333>:	mov    0x8(%rsp),%r13d
0x000000000057f382 <+27338>:	sub    $0x1,%r13d
0x000000000057f386 <+27342>:	js     0x57f3d0 <_PyEval_EvalFrameDefault+27416>
0x000000000057f388 <+27344>:	mov    0x20(%rbp),%rax
0x000000000057f38c <+27348>:	movslq 0x4c(%rax),%rax
0x000000000057f390 <+27352>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057f395 <+27357>:	mov    %rbx,%rax
0x000000000057f398 <+27360>:	sub    %rdx,%rax
0x000000000057f39b <+27363>:	sar    $0x3,%rax
0x000000000057f39f <+27367>:	test   %eax,%eax
0x000000000057f3a1 <+27369>:	jle    0x57f3b7 <_PyEval_EvalFrameDefault+27391>
0x000000000057f3a3 <+27371>:	sub    $0x8,%rbx
0x000000000057f3a7 <+27375>:	mov    (%rbx),%rdx
0x000000000057f3aa <+27378>:	movslq %r13d,%rsi
0x000000000057f3ad <+27381>:	mov    %r12,%rdi
0x000000000057f3b0 <+27384>:	call   0x573030 <PyList_SET_ITEM>
0x000000000057f3b5 <+27389>:	jmp    0x57f382 <_PyEval_EvalFrameDefault+27338>
0x000000000057f3b7 <+27391>:	mov    $0x7444e0,%ecx
0x000000000057f3bc <+27396>:	mov    $0xcb1,%edx
0x000000000057f3c1 <+27401>:	mov    $0x74045c,%esi
0x000000000057f3c6 <+27406>:	mov    $0x7408da,%edi
0x000000000057f3cb <+27411>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f3d0 <+27416>:	lea    0x8(%rbx),%r13
0x000000000057f3d4 <+27420>:	mov    %r12,(%rbx)
0x000000000057f3d7 <+27423>:	mov    0x20(%rbp),%rdx
0x000000000057f3db <+27427>:	movslq 0x4c(%rdx),%rax
0x000000000057f3df <+27431>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057f3e4 <+27436>:	mov    %r13,%rax
0x000000000057f3e7 <+27439>:	sub    %rcx,%rax
0x000000000057f3ea <+27442>:	sar    $0x3,%rax
0x000000000057f3ee <+27446>:	cmp    %eax,0x44(%rdx)
0x000000000057f3f1 <+27449>:	jl     0x57f447 <_PyEval_EvalFrameDefault+27535>
0x000000000057f3f3 <+27451>:	movzwl (%r15),%r12d
0x000000000057f3f7 <+27455>:	mov    %r12d,%eax
0x000000000057f3fa <+27458>:	shr    $0x8,%ax
0x000000000057f3fe <+27462>:	movzwl %ax,%eax
0x000000000057f401 <+27465>:	mov    %eax,0x8(%rsp)
0x000000000057f405 <+27469>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f40a <+27474>:	jne    0x57f460 <_PyEval_EvalFrameDefault+27560>
0x000000000057f40c <+27476>:	movzbl 0xc0(%rsp),%eax
0x000000000057f414 <+27484>:	lea    -0x1(%rax),%edx
0x000000000057f417 <+27487>:	cmp    $0xfd,%dl
0x000000000057f41a <+27490>:	jbe    0x57f470 <_PyEval_EvalFrameDefault+27576>
0x000000000057f41c <+27492>:	cmpw   $0x0,0x540028(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f424 <+27500>:	jne    0x57f489 <_PyEval_EvalFrameDefault+27601>
0x000000000057f426 <+27502>:	mov    $0x0,%edx
0x000000000057f42b <+27507>:	or     %edx,%eax
0x000000000057f42d <+27509>:	or     %eax,%r12d
0x000000000057f430 <+27512>:	movzbl %r12b,%eax
0x000000000057f434 <+27516>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f43c <+27524>:	mov    %r13,%rbx
0x000000000057f43f <+27527>:	mov    %r15,%r13
0x000000000057f442 <+27530>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f447 <+27535>:	mov    $0x7444e0,%ecx
0x000000000057f44c <+27540>:	mov    $0xcb4,%edx
0x000000000057f451 <+27545>:	mov    $0x74045c,%esi
0x000000000057f456 <+27550>:	mov    $0x7408bc,%edi
0x000000000057f45b <+27555>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f460 <+27560>:	mov    %r15,%rdx
0x000000000057f463 <+27563>:	mov    %r13,%rsi
0x000000000057f466 <+27566>:	mov    %rbp,%rdi
0x000000000057f469 <+27569>:	call   0x573f7b <lltrace_instruction>
0x000000000057f46e <+27574>:	jmp    0x57f40c <_PyEval_EvalFrameDefault+27476>
0x000000000057f470 <+27576>:	mov    $0x7444e0,%ecx
0x000000000057f475 <+27581>:	mov    $0xcb5,%edx
0x000000000057f47a <+27586>:	mov    $0x74045c,%esi
0x000000000057f47f <+27591>:	mov    $0x742a50,%edi
0x000000000057f484 <+27596>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f489 <+27601>:	mov    $0xffffffff,%edx
0x000000000057f48e <+27606>:	jmp    0x57f42b <_PyEval_EvalFrameDefault+27507>
0x000000000057f490 <+27608>:	lea    0x2(%r13),%r15
0x000000000057f494 <+27612>:	mov    %r13,0x38(%rbp)
0x000000000057f498 <+27616>:	lea    0x48(%rbp),%r13
0x000000000057f49c <+27620>:	mov    0x20(%rbp),%rax
0x000000000057f4a0 <+27624>:	movslq 0x4c(%rax),%rax
0x000000000057f4a4 <+27628>:	lea    0x0(%r13,%rax,8),%rdx
0x000000000057f4a9 <+27633>:	mov    %rbx,%rax
0x000000000057f4ac <+27636>:	sub    %rdx,%rax
0x000000000057f4af <+27639>:	sar    $0x3,%rax
0x000000000057f4b3 <+27643>:	test   %eax,%eax
0x000000000057f4b5 <+27645>:	jle    0x57f55f <_PyEval_EvalFrameDefault+27815>
0x000000000057f4bb <+27651>:	lea    -0x8(%rbx),%rax
0x000000000057f4bf <+27655>:	mov    %rax,0x8(%rsp)
0x000000000057f4c4 <+27660>:	mov    -0x8(%rbx),%r14
0x000000000057f4c8 <+27664>:	mov    %r14,%rdi
0x000000000057f4cb <+27667>:	call   0x4d0f8a <PyList_AsTuple>
0x000000000057f4d0 <+27672>:	mov    %rax,%r12
0x000000000057f4d3 <+27675>:	mov    %r14,%rdx
0x000000000057f4d6 <+27678>:	mov    $0xcbb,%esi
0x000000000057f4db <+27683>:	mov    $0x74045c,%edi
0x000000000057f4e0 <+27688>:	call   0x573c83 <Py_DECREF>
0x000000000057f4e5 <+27693>:	test   %r12,%r12
0x000000000057f4e8 <+27696>:	je     0x589b8b <_PyEval_EvalFrameDefault+70355>
0x000000000057f4ee <+27702>:	mov    %r12,-0x8(%rbx)
0x000000000057f4f2 <+27706>:	mov    0x20(%rbp),%rdx
0x000000000057f4f6 <+27710>:	movslq 0x4c(%rdx),%rax
0x000000000057f4fa <+27714>:	lea    0x0(%r13,%rax,8),%rcx
0x000000000057f4ff <+27719>:	mov    %rbx,%rax
0x000000000057f502 <+27722>:	sub    %rcx,%rax
0x000000000057f505 <+27725>:	sar    $0x3,%rax
0x000000000057f509 <+27729>:	cmp    %eax,0x44(%rdx)
0x000000000057f50c <+27732>:	jl     0x57f578 <_PyEval_EvalFrameDefault+27840>
0x000000000057f50e <+27734>:	movzwl (%r15),%r12d
0x000000000057f512 <+27738>:	mov    %r12d,%eax
0x000000000057f515 <+27741>:	shr    $0x8,%ax
0x000000000057f519 <+27745>:	movzwl %ax,%eax
0x000000000057f51c <+27748>:	mov    %eax,0x8(%rsp)
0x000000000057f520 <+27752>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f525 <+27757>:	jne    0x57f591 <_PyEval_EvalFrameDefault+27865>
0x000000000057f527 <+27759>:	movzbl 0xc0(%rsp),%eax
0x000000000057f52f <+27767>:	lea    -0x1(%rax),%edx
0x000000000057f532 <+27770>:	cmp    $0xfd,%dl
0x000000000057f535 <+27773>:	jbe    0x57f5a1 <_PyEval_EvalFrameDefault+27881>
0x000000000057f537 <+27775>:	cmpw   $0x0,0x53ff0d(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f53f <+27783>:	jne    0x57f5ba <_PyEval_EvalFrameDefault+27906>
0x000000000057f541 <+27785>:	mov    $0x0,%edx
0x000000000057f546 <+27790>:	or     %edx,%eax
0x000000000057f548 <+27792>:	or     %eax,%r12d
0x000000000057f54b <+27795>:	movzbl %r12b,%eax
0x000000000057f54f <+27799>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f557 <+27807>:	mov    %r15,%r13
0x000000000057f55a <+27810>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f55f <+27815>:	mov    $0x7444e0,%ecx
0x000000000057f564 <+27820>:	mov    $0xcb9,%edx
0x000000000057f569 <+27825>:	mov    $0x74045c,%esi
0x000000000057f56e <+27830>:	mov    $0x7408da,%edi
0x000000000057f573 <+27835>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f578 <+27840>:	mov    $0x7444e0,%ecx
0x000000000057f57d <+27845>:	mov    $0xcbf,%edx
0x000000000057f582 <+27850>:	mov    $0x74045c,%esi
0x000000000057f587 <+27855>:	mov    $0x7408bc,%edi
0x000000000057f58c <+27860>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f591 <+27865>:	mov    %r15,%rdx
0x000000000057f594 <+27868>:	mov    %rbx,%rsi
0x000000000057f597 <+27871>:	mov    %rbp,%rdi
0x000000000057f59a <+27874>:	call   0x573f7b <lltrace_instruction>
0x000000000057f59f <+27879>:	jmp    0x57f527 <_PyEval_EvalFrameDefault+27759>
0x000000000057f5a1 <+27881>:	mov    $0x7444e0,%ecx
0x000000000057f5a6 <+27886>:	mov    $0xcc0,%edx
0x000000000057f5ab <+27891>:	mov    $0x74045c,%esi
0x000000000057f5b0 <+27896>:	mov    $0x742a50,%edi
0x000000000057f5b5 <+27901>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f5ba <+27906>:	mov    $0xffffffff,%edx
0x000000000057f5bf <+27911>:	jmp    0x57f546 <_PyEval_EvalFrameDefault+27790>
0x000000000057f5c1 <+27913>:	lea    0x2(%r13),%r15
0x000000000057f5c5 <+27917>:	mov    %r13,0x38(%rbp)
0x000000000057f5c9 <+27921>:	mov    0x20(%rbp),%rax
0x000000000057f5cd <+27925>:	movslq 0x4c(%rax),%rax
0x000000000057f5d1 <+27929>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057f5d6 <+27934>:	mov    %rbx,%rax
0x000000000057f5d9 <+27937>:	sub    %rdx,%rax
0x000000000057f5dc <+27940>:	sar    $0x3,%rax
0x000000000057f5e0 <+27944>:	test   %eax,%eax
0x000000000057f5e2 <+27946>:	jle    0x57f68d <_PyEval_EvalFrameDefault+28117>
0x000000000057f5e8 <+27952>:	sub    $0x8,%rbx
0x000000000057f5ec <+27956>:	mov    (%rbx),%r12
0x000000000057f5ef <+27959>:	mov    0x8(%rsp),%eax
0x000000000057f5f3 <+27963>:	neg    %eax
0x000000000057f5f5 <+27965>:	cltq
0x000000000057f5f7 <+27967>:	mov    (%rbx,%rax,8),%rdi
0x000000000057f5fb <+27971>:	mov    %r12,%rsi
0x000000000057f5fe <+27974>:	call   0x4d0ec5 <_PyList_Extend>
0x000000000057f603 <+27979>:	mov    %rax,%rdx
0x000000000057f606 <+27982>:	test   %rax,%rax
0x000000000057f609 <+27985>:	je     0x57f6a6 <_PyEval_EvalFrameDefault+28142>
0x000000000057f60f <+27991>:	mov    $0xcd3,%esi
0x000000000057f614 <+27996>:	mov    $0x74045c,%edi
0x000000000057f619 <+28001>:	call   0x573c83 <Py_DECREF>
0x000000000057f61e <+28006>:	mov    %r12,%rdx
0x000000000057f621 <+28009>:	mov    $0xcd4,%esi
0x000000000057f626 <+28014>:	mov    $0x74045c,%edi
0x000000000057f62b <+28019>:	call   0x573c83 <Py_DECREF>
0x000000000057f630 <+28024>:	movzwl (%r15),%r12d
0x000000000057f634 <+28028>:	mov    %r12d,%eax
0x000000000057f637 <+28031>:	shr    $0x8,%ax
0x000000000057f63b <+28035>:	movzwl %ax,%eax
0x000000000057f63e <+28038>:	mov    %eax,0x8(%rsp)
0x000000000057f642 <+28042>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f647 <+28047>:	jne    0x57f71e <_PyEval_EvalFrameDefault+28262>
0x000000000057f64d <+28053>:	movzbl 0xc0(%rsp),%eax
0x000000000057f655 <+28061>:	lea    -0x1(%rax),%edx
0x000000000057f658 <+28064>:	cmp    $0xfd,%dl
0x000000000057f65b <+28067>:	jbe    0x57f731 <_PyEval_EvalFrameDefault+28281>
0x000000000057f661 <+28073>:	cmpw   $0x0,0x53fde3(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f669 <+28081>:	jne    0x57f74a <_PyEval_EvalFrameDefault+28306>
0x000000000057f66f <+28087>:	mov    $0x0,%edx
0x000000000057f674 <+28092>:	or     %edx,%eax
0x000000000057f676 <+28094>:	or     %eax,%r12d
0x000000000057f679 <+28097>:	movzbl %r12b,%eax
0x000000000057f67d <+28101>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f685 <+28109>:	mov    %r15,%r13
0x000000000057f688 <+28112>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f68d <+28117>:	mov    $0x7444e0,%ecx
0x000000000057f692 <+28122>:	mov    $0xcc4,%edx
0x000000000057f697 <+28127>:	mov    $0x74045c,%esi
0x000000000057f69c <+28132>:	mov    $0x7408da,%edi
0x000000000057f6a1 <+28137>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f6a6 <+28142>:	mov    0x40eacb(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x000000000057f6ad <+28149>:	mov    0x18(%rsp),%rdi
0x000000000057f6b2 <+28154>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057f6b7 <+28159>:	test   %eax,%eax
0x000000000057f6b9 <+28161>:	je     0x57f6ca <_PyEval_EvalFrameDefault+28178>
0x000000000057f6bb <+28163>:	mov    0x8(%r12),%rax
0x000000000057f6c0 <+28168>:	cmpq   $0x0,0xd8(%rax)
0x000000000057f6c8 <+28176>:	je     0x57f6e1 <_PyEval_EvalFrameDefault+28201>
0x000000000057f6ca <+28178>:	mov    %r12,%rdx
0x000000000057f6cd <+28181>:	mov    $0xcd0,%esi
0x000000000057f6d2 <+28186>:	mov    $0x74045c,%edi
0x000000000057f6d7 <+28191>:	call   0x573c83 <Py_DECREF>
0x000000000057f6dc <+28196>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f6e1 <+28201>:	mov    %r12,%rdi
0x000000000057f6e4 <+28204>:	call   0x492868 <PySequence_Check>
0x000000000057f6e9 <+28209>:	test   %eax,%eax
0x000000000057f6eb <+28211>:	jne    0x57f6ca <_PyEval_EvalFrameDefault+28178>
0x000000000057f6ed <+28213>:	mov    0x18(%rsp),%r14
0x000000000057f6f2 <+28218>:	mov    %r14,%rdi
0x000000000057f6f5 <+28221>:	call   0x5a273b <_PyErr_Clear>
0x000000000057f6fa <+28226>:	mov    0x8(%r12),%rax
0x000000000057f6ff <+28231>:	mov    0x18(%rax),%rcx
0x000000000057f703 <+28235>:	mov    $0x742d50,%edx
0x000000000057f708 <+28240>:	mov    0x40ea69(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x000000000057f70f <+28247>:	mov    %r14,%rdi
0x000000000057f712 <+28250>:	mov    $0x0,%eax
0x000000000057f717 <+28255>:	call   0x5a3574 <_PyErr_Format>
0x000000000057f71c <+28260>:	jmp    0x57f6ca <_PyEval_EvalFrameDefault+28178>
0x000000000057f71e <+28262>:	mov    %r15,%rdx
0x000000000057f721 <+28265>:	mov    %rbx,%rsi
0x000000000057f724 <+28268>:	mov    %rbp,%rdi
0x000000000057f727 <+28271>:	call   0x573f7b <lltrace_instruction>
0x000000000057f72c <+28276>:	jmp    0x57f64d <_PyEval_EvalFrameDefault+28053>
0x000000000057f731 <+28281>:	mov    $0x7444e0,%ecx
0x000000000057f736 <+28286>:	mov    $0xcd5,%edx
0x000000000057f73b <+28291>:	mov    $0x74045c,%esi
0x000000000057f740 <+28296>:	mov    $0x742a50,%edi
0x000000000057f745 <+28301>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f74a <+28306>:	mov    $0xffffffff,%edx
0x000000000057f74f <+28311>:	jmp    0x57f674 <_PyEval_EvalFrameDefault+28092>
0x000000000057f754 <+28316>:	lea    0x2(%r13),%r15
0x000000000057f758 <+28320>:	mov    %r13,0x38(%rbp)
0x000000000057f75c <+28324>:	mov    0x20(%rbp),%rax
0x000000000057f760 <+28328>:	movslq 0x4c(%rax),%rax
0x000000000057f764 <+28332>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057f769 <+28337>:	mov    %rbx,%rax
0x000000000057f76c <+28340>:	sub    %rdx,%rax
0x000000000057f76f <+28343>:	sar    $0x3,%rax
0x000000000057f773 <+28347>:	test   %eax,%eax
0x000000000057f775 <+28349>:	jle    0x57f805 <_PyEval_EvalFrameDefault+28493>
0x000000000057f77b <+28355>:	sub    $0x8,%rbx
0x000000000057f77f <+28359>:	mov    (%rbx),%r12
0x000000000057f782 <+28362>:	mov    0x8(%rsp),%eax
0x000000000057f786 <+28366>:	neg    %eax
0x000000000057f788 <+28368>:	cltq
0x000000000057f78a <+28370>:	mov    (%rbx,%rax,8),%rdi
0x000000000057f78e <+28374>:	mov    %r12,%rsi
0x000000000057f791 <+28377>:	call   0x4fbb6b <_PySet_Update>
0x000000000057f796 <+28382>:	mov    %eax,%r13d
0x000000000057f799 <+28385>:	mov    %r12,%rdx
0x000000000057f79c <+28388>:	mov    $0xcdc,%esi
0x000000000057f7a1 <+28393>:	mov    $0x74045c,%edi
0x000000000057f7a6 <+28398>:	call   0x573c83 <Py_DECREF>
0x000000000057f7ab <+28403>:	test   %r13d,%r13d
0x000000000057f7ae <+28406>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f7b4 <+28412>:	movzwl (%r15),%r12d
0x000000000057f7b8 <+28416>:	mov    %r12d,%eax
0x000000000057f7bb <+28419>:	shr    $0x8,%ax
0x000000000057f7bf <+28423>:	movzwl %ax,%eax
0x000000000057f7c2 <+28426>:	mov    %eax,0x8(%rsp)
0x000000000057f7c6 <+28430>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f7cb <+28435>:	jne    0x57f81e <_PyEval_EvalFrameDefault+28518>
0x000000000057f7cd <+28437>:	movzbl 0xc0(%rsp),%eax
0x000000000057f7d5 <+28445>:	lea    -0x1(%rax),%edx
0x000000000057f7d8 <+28448>:	cmp    $0xfd,%dl
0x000000000057f7db <+28451>:	jbe    0x57f82e <_PyEval_EvalFrameDefault+28534>
0x000000000057f7dd <+28453>:	cmpw   $0x0,0x53fc67(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f7e5 <+28461>:	jne    0x57f847 <_PyEval_EvalFrameDefault+28559>
0x000000000057f7e7 <+28463>:	mov    $0x0,%edx
0x000000000057f7ec <+28468>:	or     %edx,%eax
0x000000000057f7ee <+28470>:	or     %eax,%r12d
0x000000000057f7f1 <+28473>:	movzbl %r12b,%eax
0x000000000057f7f5 <+28477>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f7fd <+28485>:	mov    %r15,%r13
0x000000000057f800 <+28488>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f805 <+28493>:	mov    $0x7444e0,%ecx
0x000000000057f80a <+28498>:	mov    $0xcd9,%edx
0x000000000057f80f <+28503>:	mov    $0x74045c,%esi
0x000000000057f814 <+28508>:	mov    $0x7408da,%edi
0x000000000057f819 <+28513>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f81e <+28518>:	mov    %r15,%rdx
0x000000000057f821 <+28521>:	mov    %rbx,%rsi
0x000000000057f824 <+28524>:	mov    %rbp,%rdi
0x000000000057f827 <+28527>:	call   0x573f7b <lltrace_instruction>
0x000000000057f82c <+28532>:	jmp    0x57f7cd <_PyEval_EvalFrameDefault+28437>
0x000000000057f82e <+28534>:	mov    $0x7444e0,%ecx
0x000000000057f833 <+28539>:	mov    $0xce0,%edx
0x000000000057f838 <+28544>:	mov    $0x74045c,%esi
0x000000000057f83d <+28549>:	mov    $0x742a50,%edi
0x000000000057f842 <+28554>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f847 <+28559>:	mov    $0xffffffff,%edx
0x000000000057f84c <+28564>:	jmp    0x57f7ec <_PyEval_EvalFrameDefault+28468>
0x000000000057f84e <+28566>:	lea    0x2(%r13),%r15
0x000000000057f852 <+28570>:	mov    %r13,0x38(%rbp)
0x000000000057f856 <+28574>:	mov    $0x0,%edi
0x000000000057f85b <+28579>:	call   0x4fb852 <PySet_New>
0x000000000057f860 <+28584>:	test   %rax,%rax
0x000000000057f863 <+28587>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f869 <+28593>:	mov    0x8(%rsp),%r12d
0x000000000057f86e <+28598>:	mov    $0x0,%r13d
0x000000000057f874 <+28604>:	mov    %r15,0x48(%rsp)
0x000000000057f879 <+28609>:	mov    %rax,%r15
0x000000000057f87c <+28612>:	jmp    0x57f894 <_PyEval_EvalFrameDefault+28636>
0x000000000057f87e <+28614>:	mov    %r14,%rdx
0x000000000057f881 <+28617>:	mov    $0xced,%esi
0x000000000057f886 <+28622>:	mov    $0x74045c,%edi
0x000000000057f88b <+28627>:	call   0x573c83 <Py_DECREF>
0x000000000057f890 <+28632>:	sub    $0x1,%r12d
0x000000000057f894 <+28636>:	test   %r12d,%r12d
0x000000000057f897 <+28639>:	jle    0x57f8b9 <_PyEval_EvalFrameDefault+28673>
0x000000000057f899 <+28641>:	mov    %r12d,%eax
0x000000000057f89c <+28644>:	neg    %eax
0x000000000057f89e <+28646>:	cltq
0x000000000057f8a0 <+28648>:	mov    (%rbx,%rax,8),%r14
0x000000000057f8a4 <+28652>:	test   %r13d,%r13d
0x000000000057f8a7 <+28655>:	jne    0x57f87e <_PyEval_EvalFrameDefault+28614>
0x000000000057f8a9 <+28657>:	mov    %r14,%rsi
0x000000000057f8ac <+28660>:	mov    %r15,%rdi
0x000000000057f8af <+28663>:	call   0x4fba1d <PySet_Add>
0x000000000057f8b4 <+28668>:	mov    %eax,%r13d
0x000000000057f8b7 <+28671>:	jmp    0x57f87e <_PyEval_EvalFrameDefault+28614>
0x000000000057f8b9 <+28673>:	mov    %r15,%rsi
0x000000000057f8bc <+28676>:	mov    0x48(%rsp),%r15
0x000000000057f8c1 <+28681>:	cmpl   $0x0,0x8(%rsp)
0x000000000057f8c6 <+28686>:	js     0x57f98c <_PyEval_EvalFrameDefault+28884>
0x000000000057f8cc <+28692>:	lea    0x48(%rbp),%rcx
0x000000000057f8d0 <+28696>:	mov    0x20(%rbp),%rax
0x000000000057f8d4 <+28700>:	movslq 0x4c(%rax),%rax
0x000000000057f8d8 <+28704>:	lea    (%rcx,%rax,8),%rdx
0x000000000057f8dc <+28708>:	mov    %rbx,%rax
0x000000000057f8df <+28711>:	sub    %rdx,%rax
0x000000000057f8e2 <+28714>:	sar    $0x3,%rax
0x000000000057f8e6 <+28718>:	mov    0x8(%rsp),%edi
0x000000000057f8ea <+28722>:	cmp    %edi,%eax
0x000000000057f8ec <+28724>:	jl     0x57f9a5 <_PyEval_EvalFrameDefault+28909>
0x000000000057f8f2 <+28730>:	mov    0x8(%rsp),%eax
0x000000000057f8f6 <+28734>:	neg    %eax
0x000000000057f8f8 <+28736>:	cltq
0x000000000057f8fa <+28738>:	lea    (%rbx,%rax,8),%r12
0x000000000057f8fe <+28742>:	test   %r13d,%r13d
0x000000000057f901 <+28745>:	jne    0x57f9be <_PyEval_EvalFrameDefault+28934>
0x000000000057f907 <+28751>:	lea    0x8(%r12),%rbx
0x000000000057f90c <+28756>:	mov    %rsi,(%r12)
0x000000000057f910 <+28760>:	mov    0x20(%rbp),%rdx
0x000000000057f914 <+28764>:	movslq 0x4c(%rdx),%rax
0x000000000057f918 <+28768>:	lea    (%rcx,%rax,8),%rcx
0x000000000057f91c <+28772>:	mov    %rbx,%rax
0x000000000057f91f <+28775>:	sub    %rcx,%rax
0x000000000057f922 <+28778>:	sar    $0x3,%rax
0x000000000057f926 <+28782>:	cmp    %eax,0x44(%rdx)
0x000000000057f929 <+28785>:	jl     0x57f9d8 <_PyEval_EvalFrameDefault+28960>
0x000000000057f92f <+28791>:	movzwl (%r15),%r12d
0x000000000057f933 <+28795>:	mov    %r12d,%eax
0x000000000057f936 <+28798>:	shr    $0x8,%ax
0x000000000057f93a <+28802>:	movzwl %ax,%eax
0x000000000057f93d <+28805>:	mov    %eax,0x8(%rsp)
0x000000000057f941 <+28809>:	cmpl   $0x0,0x14(%rsp)
0x000000000057f946 <+28814>:	jne    0x57f9f1 <_PyEval_EvalFrameDefault+28985>
0x000000000057f94c <+28820>:	movzbl 0xc0(%rsp),%eax
0x000000000057f954 <+28828>:	lea    -0x1(%rax),%edx
0x000000000057f957 <+28831>:	cmp    $0xfd,%dl
0x000000000057f95a <+28834>:	jbe    0x57fa04 <_PyEval_EvalFrameDefault+29004>
0x000000000057f960 <+28840>:	cmpw   $0x0,0x53fae4(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057f968 <+28848>:	jne    0x57fa1d <_PyEval_EvalFrameDefault+29029>
0x000000000057f96e <+28854>:	mov    $0x0,%edx
0x000000000057f973 <+28859>:	or     %edx,%eax
0x000000000057f975 <+28861>:	or     %eax,%r12d
0x000000000057f978 <+28864>:	movzbl %r12b,%eax
0x000000000057f97c <+28868>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057f984 <+28876>:	mov    %r15,%r13
0x000000000057f987 <+28879>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057f98c <+28884>:	mov    $0x7444e0,%ecx
0x000000000057f991 <+28889>:	mov    $0xcef,%edx
0x000000000057f996 <+28894>:	mov    $0x74045c,%esi
0x000000000057f99b <+28899>:	mov    $0x740a70,%edi
0x000000000057f9a0 <+28904>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f9a5 <+28909>:	mov    $0x7444e0,%ecx
0x000000000057f9aa <+28914>:	mov    $0xcef,%edx
0x000000000057f9af <+28919>:	mov    $0x74045c,%esi
0x000000000057f9b4 <+28924>:	mov    $0x740b0a,%edi
0x000000000057f9b9 <+28929>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f9be <+28934>:	mov    %rsi,%rdx
0x000000000057f9c1 <+28937>:	mov    $0xcf1,%esi
0x000000000057f9c6 <+28942>:	mov    $0x74045c,%edi
0x000000000057f9cb <+28947>:	call   0x573c83 <Py_DECREF>
0x000000000057f9d0 <+28952>:	mov    %r12,%rbx
0x000000000057f9d3 <+28955>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057f9d8 <+28960>:	mov    $0x7444e0,%ecx
0x000000000057f9dd <+28965>:	mov    $0xcf4,%edx
0x000000000057f9e2 <+28970>:	mov    $0x74045c,%esi
0x000000000057f9e7 <+28975>:	mov    $0x7408bc,%edi
0x000000000057f9ec <+28980>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057f9f1 <+28985>:	mov    %r15,%rdx
0x000000000057f9f4 <+28988>:	mov    %rbx,%rsi
0x000000000057f9f7 <+28991>:	mov    %rbp,%rdi
0x000000000057f9fa <+28994>:	call   0x573f7b <lltrace_instruction>
0x000000000057f9ff <+28999>:	jmp    0x57f94c <_PyEval_EvalFrameDefault+28820>
0x000000000057fa04 <+29004>:	mov    $0x7444e0,%ecx
0x000000000057fa09 <+29009>:	mov    $0xcf5,%edx
0x000000000057fa0e <+29014>:	mov    $0x74045c,%esi
0x000000000057fa13 <+29019>:	mov    $0x742a50,%edi
0x000000000057fa18 <+29024>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fa1d <+29029>:	mov    $0xffffffff,%edx
0x000000000057fa22 <+29034>:	jmp    0x57f973 <_PyEval_EvalFrameDefault+28859>
0x000000000057fa27 <+29039>:	lea    0x2(%r13),%r15
0x000000000057fa2b <+29043>:	mov    %r13,0x38(%rbp)
0x000000000057fa2f <+29047>:	mov    0x8(%rsp),%ecx
0x000000000057fa33 <+29051>:	lea    (%rcx,%rcx,1),%eax
0x000000000057fa36 <+29054>:	mov    $0x1,%edx
0x000000000057fa3b <+29059>:	sub    %eax,%edx
0x000000000057fa3d <+29061>:	movslq %edx,%rdx
0x000000000057fa40 <+29064>:	lea    (%rbx,%rdx,8),%rdx
0x000000000057fa44 <+29068>:	neg    %eax
0x000000000057fa46 <+29070>:	cltq
0x000000000057fa48 <+29072>:	lea    (%rbx,%rax,8),%rdi
0x000000000057fa4c <+29076>:	movslq %ecx,%r8
0x000000000057fa4f <+29079>:	mov    $0x2,%ecx
0x000000000057fa54 <+29084>:	mov    $0x2,%esi
0x000000000057fa59 <+29089>:	call   0x4e12a4 <_PyDict_FromItems>
0x000000000057fa5e <+29094>:	mov    %rax,%r12
0x000000000057fa61 <+29097>:	test   %rax,%rax
0x000000000057fa64 <+29100>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fa6a <+29106>:	mov    0x8(%rsp),%eax
0x000000000057fa6e <+29110>:	mov    %r15,0x8(%rsp)
0x000000000057fa73 <+29115>:	jmp    0x57faab <_PyEval_EvalFrameDefault+29171>
0x000000000057fa75 <+29117>:	mov    $0x7444e0,%ecx
0x000000000057fa7a <+29122>:	mov    $0xd01,%edx
0x000000000057fa7f <+29127>:	mov    $0x74045c,%esi
0x000000000057fa84 <+29132>:	mov    $0x7408da,%edi
0x000000000057fa89 <+29137>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fa8e <+29142>:	lea    -0x10(%rbx),%r13
0x000000000057fa92 <+29146>:	mov    -0x10(%rbx),%rdx
0x000000000057fa96 <+29150>:	mov    $0xd02,%esi
0x000000000057fa9b <+29155>:	mov    $0x74045c,%edi
0x000000000057faa0 <+29160>:	call   0x573c83 <Py_DECREF>
0x000000000057faa5 <+29165>:	mov    %r13,%rbx
0x000000000057faa8 <+29168>:	mov    %r15d,%eax
0x000000000057faab <+29171>:	lea    -0x1(%rax),%r15d
0x000000000057faaf <+29175>:	test   %eax,%eax
0x000000000057fab1 <+29177>:	je     0x57fb19 <_PyEval_EvalFrameDefault+29281>
0x000000000057fab3 <+29179>:	lea    0x48(%rbp),%r14
0x000000000057fab7 <+29183>:	mov    0x20(%rbp),%rax
0x000000000057fabb <+29187>:	movslq 0x4c(%rax),%rax
0x000000000057fabf <+29191>:	lea    (%r14,%rax,8),%rdx
0x000000000057fac3 <+29195>:	mov    %rbx,%rax
0x000000000057fac6 <+29198>:	sub    %rdx,%rax
0x000000000057fac9 <+29201>:	sar    $0x3,%rax
0x000000000057facd <+29205>:	test   %eax,%eax
0x000000000057facf <+29207>:	jle    0x57fa75 <_PyEval_EvalFrameDefault+29117>
0x000000000057fad1 <+29209>:	lea    -0x8(%rbx),%r13
0x000000000057fad5 <+29213>:	mov    -0x8(%rbx),%rdx
0x000000000057fad9 <+29217>:	mov    $0xd01,%esi
0x000000000057fade <+29222>:	mov    $0x74045c,%edi
0x000000000057fae3 <+29227>:	call   0x573c83 <Py_DECREF>
0x000000000057fae8 <+29232>:	mov    0x20(%rbp),%rax
0x000000000057faec <+29236>:	movslq 0x4c(%rax),%rax
0x000000000057faf0 <+29240>:	lea    (%r14,%rax,8),%rax
0x000000000057faf4 <+29244>:	sub    %rax,%r13
0x000000000057faf7 <+29247>:	sar    $0x3,%r13
0x000000000057fafb <+29251>:	test   %r13d,%r13d
0x000000000057fafe <+29254>:	jg     0x57fa8e <_PyEval_EvalFrameDefault+29142>
0x000000000057fb00 <+29256>:	mov    $0x7444e0,%ecx
0x000000000057fb05 <+29261>:	mov    $0xd02,%edx
0x000000000057fb0a <+29266>:	mov    $0x74045c,%esi
0x000000000057fb0f <+29271>:	mov    $0x7408da,%edi
0x000000000057fb14 <+29276>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fb19 <+29281>:	mov    0x8(%rsp),%r15
0x000000000057fb1e <+29286>:	lea    0x8(%rbx),%r13
0x000000000057fb22 <+29290>:	mov    %r12,(%rbx)
0x000000000057fb25 <+29293>:	mov    0x20(%rbp),%rdx
0x000000000057fb29 <+29297>:	movslq 0x4c(%rdx),%rax
0x000000000057fb2d <+29301>:	lea    0x48(%rbp,%rax,8),%rcx
0x000000000057fb32 <+29306>:	mov    %r13,%rax
0x000000000057fb35 <+29309>:	sub    %rcx,%rax
0x000000000057fb38 <+29312>:	sar    $0x3,%rax
0x000000000057fb3c <+29316>:	cmp    %eax,0x44(%rdx)
0x000000000057fb3f <+29319>:	jl     0x57fb95 <_PyEval_EvalFrameDefault+29405>
0x000000000057fb41 <+29321>:	movzwl (%r15),%r12d
0x000000000057fb45 <+29325>:	mov    %r12d,%eax
0x000000000057fb48 <+29328>:	shr    $0x8,%ax
0x000000000057fb4c <+29332>:	movzwl %ax,%eax
0x000000000057fb4f <+29335>:	mov    %eax,0x8(%rsp)
0x000000000057fb53 <+29339>:	cmpl   $0x0,0x14(%rsp)
0x000000000057fb58 <+29344>:	jne    0x57fbae <_PyEval_EvalFrameDefault+29430>
0x000000000057fb5a <+29346>:	movzbl 0xc0(%rsp),%eax
0x000000000057fb62 <+29354>:	lea    -0x1(%rax),%edx
0x000000000057fb65 <+29357>:	cmp    $0xfd,%dl
0x000000000057fb68 <+29360>:	jbe    0x57fbbe <_PyEval_EvalFrameDefault+29446>
0x000000000057fb6a <+29362>:	cmpw   $0x0,0x53f8da(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057fb72 <+29370>:	jne    0x57fbd7 <_PyEval_EvalFrameDefault+29471>
0x000000000057fb74 <+29372>:	mov    $0x0,%edx
0x000000000057fb79 <+29377>:	or     %edx,%eax
0x000000000057fb7b <+29379>:	or     %eax,%r12d
0x000000000057fb7e <+29382>:	movzbl %r12b,%eax
0x000000000057fb82 <+29386>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057fb8a <+29394>:	mov    %r13,%rbx
0x000000000057fb8d <+29397>:	mov    %r15,%r13
0x000000000057fb90 <+29400>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057fb95 <+29405>:	mov    $0x7444e0,%ecx
0x000000000057fb9a <+29410>:	mov    $0xd04,%edx
0x000000000057fb9f <+29415>:	mov    $0x74045c,%esi
0x000000000057fba4 <+29420>:	mov    $0x7408bc,%edi
0x000000000057fba9 <+29425>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fbae <+29430>:	mov    %r15,%rdx
0x000000000057fbb1 <+29433>:	mov    %r13,%rsi
0x000000000057fbb4 <+29436>:	mov    %rbp,%rdi
0x000000000057fbb7 <+29439>:	call   0x573f7b <lltrace_instruction>
0x000000000057fbbc <+29444>:	jmp    0x57fb5a <_PyEval_EvalFrameDefault+29346>
0x000000000057fbbe <+29446>:	mov    $0x7444e0,%ecx
0x000000000057fbc3 <+29451>:	mov    $0xd05,%edx
0x000000000057fbc8 <+29456>:	mov    $0x74045c,%esi
0x000000000057fbcd <+29461>:	mov    $0x742a50,%edi
0x000000000057fbd2 <+29466>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fbd7 <+29471>:	mov    $0xffffffff,%edx
0x000000000057fbdc <+29476>:	jmp    0x57fb79 <_PyEval_EvalFrameDefault+29377>
0x000000000057fbde <+29478>:	lea    0x2(%r13),%r15
0x000000000057fbe2 <+29482>:	mov    %r13,0x38(%rbp)
0x000000000057fbe6 <+29486>:	mov    0x18(%rbp),%rdi
0x000000000057fbea <+29490>:	test   %rdi,%rdi
0x000000000057fbed <+29493>:	je     0x57fc83 <_PyEval_EvalFrameDefault+29643>
0x000000000057fbf3 <+29499>:	cmpq   $0x994540,0x8(%rdi)
0x000000000057fbfb <+29507>:	je     0x57fca3 <_PyEval_EvalFrameDefault+29675>
0x000000000057fc01 <+29513>:	mov    $0xa9c5a8,%esi
0x000000000057fc06 <+29518>:	call   0x492ead <PyObject_GetItem>
0x000000000057fc0b <+29523>:	mov    %rax,%rdx
0x000000000057fc0e <+29526>:	test   %rax,%rax
0x000000000057fc11 <+29529>:	je     0x57fd0e <_PyEval_EvalFrameDefault+29782>
0x000000000057fc17 <+29535>:	mov    $0xd39,%esi
0x000000000057fc1c <+29540>:	mov    $0x74045c,%edi
0x000000000057fc21 <+29545>:	call   0x573c83 <Py_DECREF>
0x000000000057fc26 <+29550>:	movzwl (%r15),%r12d
0x000000000057fc2a <+29554>:	mov    %r12d,%eax
0x000000000057fc2d <+29557>:	shr    $0x8,%ax
0x000000000057fc31 <+29561>:	movzwl %ax,%eax
0x000000000057fc34 <+29564>:	mov    %eax,0x8(%rsp)
0x000000000057fc38 <+29568>:	cmpl   $0x0,0x14(%rsp)
0x000000000057fc3d <+29573>:	jne    0x57fd77 <_PyEval_EvalFrameDefault+29887>
0x000000000057fc43 <+29579>:	movzbl 0xc0(%rsp),%eax
0x000000000057fc4b <+29587>:	lea    -0x1(%rax),%edx
0x000000000057fc4e <+29590>:	cmp    $0xfd,%dl
0x000000000057fc51 <+29593>:	jbe    0x57fd8a <_PyEval_EvalFrameDefault+29906>
0x000000000057fc57 <+29599>:	cmpw   $0x0,0x53f7ed(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057fc5f <+29607>:	jne    0x57fda3 <_PyEval_EvalFrameDefault+29931>
0x000000000057fc65 <+29613>:	mov    $0x0,%edx
0x000000000057fc6a <+29618>:	or     %edx,%eax
0x000000000057fc6c <+29620>:	or     %eax,%r12d
0x000000000057fc6f <+29623>:	movzbl %r12b,%eax
0x000000000057fc73 <+29627>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057fc7b <+29635>:	mov    %r15,%r13
0x000000000057fc7e <+29638>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057fc83 <+29643>:	mov    $0x742d80,%edx
0x000000000057fc88 <+29648>:	mov    0x408f29(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x000000000057fc8f <+29655>:	mov    0x18(%rsp),%rdi
0x000000000057fc94 <+29660>:	mov    $0x0,%eax
0x000000000057fc99 <+29665>:	call   0x5a3574 <_PyErr_Format>
0x000000000057fc9e <+29670>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fca3 <+29675>:	mov    $0xa9c5a8,%esi
0x000000000057fca8 <+29680>:	call   0x4e0f48 <_PyDict_GetItemWithError>
0x000000000057fcad <+29685>:	test   %rax,%rax
0x000000000057fcb0 <+29688>:	jne    0x57fc26 <_PyEval_EvalFrameDefault+29550>
0x000000000057fcb6 <+29694>:	mov    0x18(%rsp),%rdi
0x000000000057fcbb <+29699>:	call   0x573630 <_PyErr_Occurred>
0x000000000057fcc0 <+29704>:	test   %rax,%rax
0x000000000057fcc3 <+29707>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fcc9 <+29713>:	call   0x4dfd7c <PyDict_New>
0x000000000057fcce <+29718>:	mov    %rax,%r12
0x000000000057fcd1 <+29721>:	test   %rax,%rax
0x000000000057fcd4 <+29724>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fcda <+29730>:	mov    0x18(%rbp),%rdi
0x000000000057fcde <+29734>:	mov    %rax,%rdx
0x000000000057fce1 <+29737>:	mov    $0xa9c5a8,%esi
0x000000000057fce6 <+29742>:	call   0x4e1213 <PyDict_SetItem>
0x000000000057fceb <+29747>:	mov    %eax,%r13d
0x000000000057fcee <+29750>:	mov    %r12,%rdx
0x000000000057fcf1 <+29753>:	mov    $0xd1f,%esi
0x000000000057fcf6 <+29758>:	mov    $0x74045c,%edi
0x000000000057fcfb <+29763>:	call   0x573c83 <Py_DECREF>
0x000000000057fd00 <+29768>:	test   %r13d,%r13d
0x000000000057fd03 <+29771>:	je     0x57fc26 <_PyEval_EvalFrameDefault+29550>
0x000000000057fd09 <+29777>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fd0e <+29782>:	mov    0x40a183(%rip),%rsi        # 0x989e98 <PyExc_KeyError>
0x000000000057fd15 <+29789>:	mov    0x18(%rsp),%r14
0x000000000057fd1a <+29794>:	mov    %r14,%rdi
0x000000000057fd1d <+29797>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x000000000057fd22 <+29802>:	test   %eax,%eax
0x000000000057fd24 <+29804>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fd2a <+29810>:	mov    %r14,%rdi
0x000000000057fd2d <+29813>:	call   0x5a273b <_PyErr_Clear>
0x000000000057fd32 <+29818>:	call   0x4dfd7c <PyDict_New>
0x000000000057fd37 <+29823>:	mov    %rax,%r12
0x000000000057fd3a <+29826>:	test   %rax,%rax
0x000000000057fd3d <+29829>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fd43 <+29835>:	mov    0x18(%rbp),%rdi
0x000000000057fd47 <+29839>:	mov    %rax,%rdx
0x000000000057fd4a <+29842>:	mov    $0xa9c5a8,%esi
0x000000000057fd4f <+29847>:	call   0x493232 <PyObject_SetItem>
0x000000000057fd54 <+29852>:	mov    %eax,%r13d
0x000000000057fd57 <+29855>:	mov    %r12,%rdx
0x000000000057fd5a <+29858>:	mov    $0xd33,%esi
0x000000000057fd5f <+29863>:	mov    $0x74045c,%edi
0x000000000057fd64 <+29868>:	call   0x573c83 <Py_DECREF>
0x000000000057fd69 <+29873>:	test   %r13d,%r13d
0x000000000057fd6c <+29876>:	je     0x57fc26 <_PyEval_EvalFrameDefault+29550>
0x000000000057fd72 <+29882>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fd77 <+29887>:	mov    %r15,%rdx
0x000000000057fd7a <+29890>:	mov    %rbx,%rsi
0x000000000057fd7d <+29893>:	mov    %rbp,%rdi
0x000000000057fd80 <+29896>:	call   0x573f7b <lltrace_instruction>
0x000000000057fd85 <+29901>:	jmp    0x57fc43 <_PyEval_EvalFrameDefault+29579>
0x000000000057fd8a <+29906>:	mov    $0x7444e0,%ecx
0x000000000057fd8f <+29911>:	mov    $0xd3c,%edx
0x000000000057fd94 <+29916>:	mov    $0x74045c,%esi
0x000000000057fd99 <+29921>:	mov    $0x742a50,%edi
0x000000000057fd9e <+29926>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fda3 <+29931>:	mov    $0xffffffff,%edx
0x000000000057fda8 <+29936>:	jmp    0x57fc6a <_PyEval_EvalFrameDefault+29618>
0x000000000057fdad <+29941>:	lea    0x2(%r13),%r15
0x000000000057fdb1 <+29945>:	mov    %r13,0x38(%rbp)
0x000000000057fdb5 <+29949>:	mov    -0x8(%rbx),%r12
0x000000000057fdb9 <+29953>:	mov    0x8(%r12),%r13
0x000000000057fdbe <+29958>:	cmp    $0x999820,%r13
0x000000000057fdc5 <+29965>:	jne    0x57fe9a <_PyEval_EvalFrameDefault+30178>
0x000000000057fdcb <+29971>:	mov    %r12,%rdi
0x000000000057fdce <+29974>:	call   0x573476 <PyTuple_GET_SIZE>
0x000000000057fdd3 <+29979>:	movslq 0x8(%rsp),%r8
0x000000000057fdd8 <+29984>:	cmp    %r8,%rax
0x000000000057fddb <+29987>:	jne    0x57fe9a <_PyEval_EvalFrameDefault+30178>
0x000000000057fde1 <+29993>:	mov    0x8(%rsp),%eax
0x000000000057fde5 <+29997>:	not    %eax
0x000000000057fde7 <+29999>:	cltq
0x000000000057fde9 <+30001>:	lea    (%rbx,%rax,8),%rdx
0x000000000057fded <+30005>:	testb  $0x4,0xab(%r13)
0x000000000057fdf5 <+30013>:	je     0x57feb5 <_PyEval_EvalFrameDefault+30205>
0x000000000057fdfb <+30019>:	lea    0x18(%r12),%rdi
0x000000000057fe00 <+30024>:	mov    $0x1,%ecx
0x000000000057fe05 <+30029>:	mov    $0x1,%esi
0x000000000057fe0a <+30034>:	call   0x4e12a4 <_PyDict_FromItems>
0x000000000057fe0f <+30039>:	mov    %rax,%r14
0x000000000057fe12 <+30042>:	test   %rax,%rax
0x000000000057fe15 <+30045>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057fe1b <+30051>:	lea    0x48(%rbp),%r13
0x000000000057fe1f <+30055>:	mov    0x20(%rbp),%rax
0x000000000057fe23 <+30059>:	movslq 0x4c(%rax),%rax
0x000000000057fe27 <+30063>:	lea    0x0(%r13,%rax,8),%rdx
0x000000000057fe2c <+30068>:	mov    %rbx,%rax
0x000000000057fe2f <+30071>:	sub    %rdx,%rax
0x000000000057fe32 <+30074>:	sar    $0x3,%rax
0x000000000057fe36 <+30078>:	test   %eax,%eax
0x000000000057fe38 <+30080>:	jle    0x57fece <_PyEval_EvalFrameDefault+30230>
0x000000000057fe3e <+30086>:	lea    -0x8(%rbx),%r12
0x000000000057fe42 <+30090>:	mov    -0x8(%rbx),%rdx
0x000000000057fe46 <+30094>:	mov    $0xd4f,%esi
0x000000000057fe4b <+30099>:	mov    $0x74045c,%edi
0x000000000057fe50 <+30104>:	call   0x573c83 <Py_DECREF>
0x000000000057fe55 <+30109>:	mov    0x8(%rsp),%eax
0x000000000057fe59 <+30113>:	lea    -0x1(%rax),%ebx
0x000000000057fe5c <+30116>:	test   %eax,%eax
0x000000000057fe5e <+30118>:	je     0x57ff00 <_PyEval_EvalFrameDefault+30280>
0x000000000057fe64 <+30124>:	mov    0x20(%rbp),%rax
0x000000000057fe68 <+30128>:	movslq 0x4c(%rax),%rax
0x000000000057fe6c <+30132>:	lea    0x0(%r13,%rax,8),%rdx
0x000000000057fe71 <+30137>:	mov    %r12,%rax
0x000000000057fe74 <+30140>:	sub    %rdx,%rax
0x000000000057fe77 <+30143>:	sar    $0x3,%rax
0x000000000057fe7b <+30147>:	test   %eax,%eax
0x000000000057fe7d <+30149>:	jle    0x57fee7 <_PyEval_EvalFrameDefault+30255>
0x000000000057fe7f <+30151>:	sub    $0x8,%r12
0x000000000057fe83 <+30155>:	mov    (%r12),%rdx
0x000000000057fe87 <+30159>:	mov    $0xd51,%esi
0x000000000057fe8c <+30164>:	mov    $0x74045c,%edi
0x000000000057fe91 <+30169>:	call   0x573c83 <Py_DECREF>
0x000000000057fe96 <+30174>:	mov    %ebx,%eax
0x000000000057fe98 <+30176>:	jmp    0x57fe59 <_PyEval_EvalFrameDefault+30113>
0x000000000057fe9a <+30178>:	mov    $0x742db0,%edx
0x000000000057fe9f <+30183>:	mov    0x408d12(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x000000000057fea6 <+30190>:	mov    0x18(%rsp),%rdi
0x000000000057feab <+30195>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000057feb0 <+30200>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000057feb5 <+30205>:	mov    $0x7444e0,%ecx
0x000000000057feba <+30210>:	mov    $0xd49,%edx
0x000000000057febf <+30215>:	mov    $0x74045c,%esi
0x000000000057fec4 <+30220>:	mov    $0x7406c1,%edi
0x000000000057fec9 <+30225>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fece <+30230>:	mov    $0x7444e0,%ecx
0x000000000057fed3 <+30235>:	mov    $0xd4f,%edx
0x000000000057fed8 <+30240>:	mov    $0x74045c,%esi
0x000000000057fedd <+30245>:	mov    $0x7408da,%edi
0x000000000057fee2 <+30250>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057fee7 <+30255>:	mov    $0x7444e0,%ecx
0x000000000057feec <+30260>:	mov    $0xd51,%edx
0x000000000057fef1 <+30265>:	mov    $0x74045c,%esi
0x000000000057fef6 <+30270>:	mov    $0x7408da,%edi
0x000000000057fefb <+30275>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ff00 <+30280>:	lea    0x8(%r12),%rbx
0x000000000057ff05 <+30285>:	mov    %r14,(%r12)
0x000000000057ff09 <+30289>:	mov    0x20(%rbp),%rdx
0x000000000057ff0d <+30293>:	movslq 0x4c(%rdx),%rax
0x000000000057ff11 <+30297>:	lea    0x0(%r13,%rax,8),%rcx
0x000000000057ff16 <+30302>:	mov    %rbx,%rax
0x000000000057ff19 <+30305>:	sub    %rcx,%rax
0x000000000057ff1c <+30308>:	sar    $0x3,%rax
0x000000000057ff20 <+30312>:	cmp    %eax,0x44(%rdx)
0x000000000057ff23 <+30315>:	jl     0x57ff76 <_PyEval_EvalFrameDefault+30398>
0x000000000057ff25 <+30317>:	movzwl (%r15),%r12d
0x000000000057ff29 <+30321>:	mov    %r12d,%eax
0x000000000057ff2c <+30324>:	shr    $0x8,%ax
0x000000000057ff30 <+30328>:	movzwl %ax,%eax
0x000000000057ff33 <+30331>:	mov    %eax,0x8(%rsp)
0x000000000057ff37 <+30335>:	cmpl   $0x0,0x14(%rsp)
0x000000000057ff3c <+30340>:	jne    0x57ff8f <_PyEval_EvalFrameDefault+30423>
0x000000000057ff3e <+30342>:	movzbl 0xc0(%rsp),%eax
0x000000000057ff46 <+30350>:	lea    -0x1(%rax),%edx
0x000000000057ff49 <+30353>:	cmp    $0xfd,%dl
0x000000000057ff4c <+30356>:	jbe    0x57ff9f <_PyEval_EvalFrameDefault+30439>
0x000000000057ff4e <+30358>:	cmpw   $0x0,0x53f4f6(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000057ff56 <+30366>:	jne    0x57ffb8 <_PyEval_EvalFrameDefault+30464>
0x000000000057ff58 <+30368>:	mov    $0x0,%edx
0x000000000057ff5d <+30373>:	or     %edx,%eax
0x000000000057ff5f <+30375>:	or     %eax,%r12d
0x000000000057ff62 <+30378>:	movzbl %r12b,%eax
0x000000000057ff66 <+30382>:	mov    0x743ce0(,%rax,8),%rax
0x000000000057ff6e <+30390>:	mov    %r15,%r13
0x000000000057ff71 <+30393>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000057ff76 <+30398>:	mov    $0x7444e0,%ecx
0x000000000057ff7b <+30403>:	mov    $0xd53,%edx
0x000000000057ff80 <+30408>:	mov    $0x74045c,%esi
0x000000000057ff85 <+30413>:	mov    $0x7408bc,%edi
0x000000000057ff8a <+30418>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ff8f <+30423>:	mov    %r15,%rdx
0x000000000057ff92 <+30426>:	mov    %rbx,%rsi
0x000000000057ff95 <+30429>:	mov    %rbp,%rdi
0x000000000057ff98 <+30432>:	call   0x573f7b <lltrace_instruction>
0x000000000057ff9d <+30437>:	jmp    0x57ff3e <_PyEval_EvalFrameDefault+30342>
0x000000000057ff9f <+30439>:	mov    $0x7444e0,%ecx
0x000000000057ffa4 <+30444>:	mov    $0xd54,%edx
0x000000000057ffa9 <+30449>:	mov    $0x74045c,%esi
0x000000000057ffae <+30454>:	mov    $0x742a50,%edi
0x000000000057ffb3 <+30459>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000057ffb8 <+30464>:	mov    $0xffffffff,%edx
0x000000000057ffbd <+30469>:	jmp    0x57ff5d <_PyEval_EvalFrameDefault+30373>
0x000000000057ffbf <+30471>:	lea    0x2(%r13),%r15
0x000000000057ffc3 <+30475>:	mov    %r13,0x38(%rbp)
0x000000000057ffc7 <+30479>:	mov    0x20(%rbp),%rax
0x000000000057ffcb <+30483>:	movslq 0x4c(%rax),%rax
0x000000000057ffcf <+30487>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000057ffd4 <+30492>:	mov    %rbx,%rax
0x000000000057ffd7 <+30495>:	sub    %rdx,%rax
0x000000000057ffda <+30498>:	sar    $0x3,%rax
0x000000000057ffde <+30502>:	test   %eax,%eax
0x000000000057ffe0 <+30504>:	jle    0x580078 <_PyEval_EvalFrameDefault+30656>
0x000000000057ffe6 <+30510>:	sub    $0x8,%rbx
0x000000000057ffea <+30514>:	mov    (%rbx),%r12
0x000000000057ffed <+30517>:	mov    0x8(%rsp),%eax
0x000000000057fff1 <+30521>:	neg    %eax
0x000000000057fff3 <+30523>:	cltq
0x000000000057fff5 <+30525>:	mov    (%rbx,%rax,8),%rdi
0x000000000057fff9 <+30529>:	mov    %r12,%rsi
0x000000000057fffc <+30532>:	call   0x4e3995 <PyDict_Update>
0x0000000000580001 <+30537>:	test   %eax,%eax
0x0000000000580003 <+30539>:	js     0x580091 <_PyEval_EvalFrameDefault+30681>
0x0000000000580009 <+30545>:	mov    %r12,%rdx
0x000000000058000c <+30548>:	mov    $0xd63,%esi
0x0000000000580011 <+30553>:	mov    $0x74045c,%edi
0x0000000000580016 <+30558>:	call   0x573c83 <Py_DECREF>
0x000000000058001b <+30563>:	movzwl (%r15),%r12d
0x000000000058001f <+30567>:	mov    %r12d,%eax
0x0000000000580022 <+30570>:	shr    $0x8,%ax
0x0000000000580026 <+30574>:	movzwl %ax,%eax
0x0000000000580029 <+30577>:	mov    %eax,0x8(%rsp)
0x000000000058002d <+30581>:	cmpl   $0x0,0x14(%rsp)
0x0000000000580032 <+30586>:	jne    0x5800e3 <_PyEval_EvalFrameDefault+30763>
0x0000000000580038 <+30592>:	movzbl 0xc0(%rsp),%eax
0x0000000000580040 <+30600>:	lea    -0x1(%rax),%edx
0x0000000000580043 <+30603>:	cmp    $0xfd,%dl
0x0000000000580046 <+30606>:	jbe    0x5800f6 <_PyEval_EvalFrameDefault+30782>
0x000000000058004c <+30612>:	cmpw   $0x0,0x53f3f8(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000580054 <+30620>:	jne    0x58010f <_PyEval_EvalFrameDefault+30807>
0x000000000058005a <+30626>:	mov    $0x0,%edx
0x000000000058005f <+30631>:	or     %edx,%eax
0x0000000000580061 <+30633>:	or     %eax,%r12d
0x0000000000580064 <+30636>:	movzbl %r12b,%eax
0x0000000000580068 <+30640>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000580070 <+30648>:	mov    %r15,%r13
0x0000000000580073 <+30651>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000580078 <+30656>:	mov    $0x7444e0,%ecx
0x000000000058007d <+30661>:	mov    $0xd58,%edx
0x0000000000580082 <+30666>:	mov    $0x74045c,%esi
0x0000000000580087 <+30671>:	mov    $0x7408da,%edi
0x000000000058008c <+30676>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580091 <+30681>:	mov    0x40a930(%rip),%rsi        # 0x98a9c8 <PyExc_AttributeError>
0x0000000000580098 <+30688>:	mov    0x18(%rsp),%rdi
0x000000000058009d <+30693>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x00000000005800a2 <+30698>:	test   %eax,%eax
0x00000000005800a4 <+30700>:	jne    0x5800bd <_PyEval_EvalFrameDefault+30725>
0x00000000005800a6 <+30702>:	mov    %r12,%rdx
0x00000000005800a9 <+30705>:	mov    $0xd60,%esi
0x00000000005800ae <+30710>:	mov    $0x74045c,%edi
0x00000000005800b3 <+30715>:	call   0x573c83 <Py_DECREF>
0x00000000005800b8 <+30720>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005800bd <+30725>:	mov    0x8(%r12),%rax
0x00000000005800c2 <+30730>:	mov    0x18(%rax),%rcx
0x00000000005800c6 <+30734>:	mov    $0x742dd8,%edx
0x00000000005800cb <+30739>:	mov    0x40e0a6(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x00000000005800d2 <+30746>:	mov    0x18(%rsp),%rdi
0x00000000005800d7 <+30751>:	mov    $0x0,%eax
0x00000000005800dc <+30756>:	call   0x5a3574 <_PyErr_Format>
0x00000000005800e1 <+30761>:	jmp    0x5800a6 <_PyEval_EvalFrameDefault+30702>
0x00000000005800e3 <+30763>:	mov    %r15,%rdx
0x00000000005800e6 <+30766>:	mov    %rbx,%rsi
0x00000000005800e9 <+30769>:	mov    %rbp,%rdi
0x00000000005800ec <+30772>:	call   0x573f7b <lltrace_instruction>
0x00000000005800f1 <+30777>:	jmp    0x580038 <_PyEval_EvalFrameDefault+30592>
0x00000000005800f6 <+30782>:	mov    $0x7444e0,%ecx
0x00000000005800fb <+30787>:	mov    $0xd64,%edx
0x0000000000580100 <+30792>:	mov    $0x74045c,%esi
0x0000000000580105 <+30797>:	mov    $0x742a50,%edi
0x000000000058010a <+30802>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058010f <+30807>:	mov    $0xffffffff,%edx
0x0000000000580114 <+30812>:	jmp    0x58005f <_PyEval_EvalFrameDefault+30631>
0x0000000000580119 <+30817>:	lea    0x2(%r13),%r15
0x000000000058011d <+30821>:	mov    %r13,0x38(%rbp)
0x0000000000580121 <+30825>:	mov    0x20(%rbp),%rax
0x0000000000580125 <+30829>:	movslq 0x4c(%rax),%rax
0x0000000000580129 <+30833>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058012e <+30838>:	mov    %rbx,%rax
0x0000000000580131 <+30841>:	sub    %rdx,%rax
0x0000000000580134 <+30844>:	sar    $0x3,%rax
0x0000000000580138 <+30848>:	test   %eax,%eax
0x000000000058013a <+30850>:	jle    0x5801d7 <_PyEval_EvalFrameDefault+31007>
0x0000000000580140 <+30856>:	sub    $0x8,%rbx
0x0000000000580144 <+30860>:	mov    (%rbx),%r12
0x0000000000580147 <+30863>:	mov    0x8(%rsp),%eax
0x000000000058014b <+30867>:	neg    %eax
0x000000000058014d <+30869>:	cltq
0x000000000058014f <+30871>:	mov    (%rbx,%rax,8),%rdi
0x0000000000580153 <+30875>:	mov    $0x2,%edx
0x0000000000580158 <+30880>:	mov    %r12,%rsi
0x000000000058015b <+30883>:	call   0x4e3cb3 <_PyDict_MergeEx>
0x0000000000580160 <+30888>:	test   %eax,%eax
0x0000000000580162 <+30890>:	js     0x5801f0 <_PyEval_EvalFrameDefault+31032>
0x0000000000580168 <+30896>:	mov    %r12,%rdx
0x000000000058016b <+30899>:	mov    $0xd70,%esi
0x0000000000580170 <+30904>:	mov    $0x74045c,%edi
0x0000000000580175 <+30909>:	call   0x573c83 <Py_DECREF>
0x000000000058017a <+30914>:	movzwl (%r15),%r12d
0x000000000058017e <+30918>:	mov    %r12d,%eax
0x0000000000580181 <+30921>:	shr    $0x8,%ax
0x0000000000580185 <+30925>:	movzwl %ax,%eax
0x0000000000580188 <+30928>:	mov    %eax,0x8(%rsp)
0x000000000058018c <+30932>:	cmpl   $0x0,0x14(%rsp)
0x0000000000580191 <+30937>:	jne    0x580225 <_PyEval_EvalFrameDefault+31085>
0x0000000000580197 <+30943>:	movzbl 0xc0(%rsp),%eax
0x000000000058019f <+30951>:	lea    -0x1(%rax),%edx
0x00000000005801a2 <+30954>:	cmp    $0xfd,%dl
0x00000000005801a5 <+30957>:	jbe    0x580238 <_PyEval_EvalFrameDefault+31104>
0x00000000005801ab <+30963>:	cmpw   $0x0,0x53f299(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005801b3 <+30971>:	jne    0x580251 <_PyEval_EvalFrameDefault+31129>
0x00000000005801b9 <+30977>:	mov    $0x0,%edx
0x00000000005801be <+30982>:	or     %edx,%eax
0x00000000005801c0 <+30984>:	or     %eax,%r12d
0x00000000005801c3 <+30987>:	movzbl %r12b,%eax
0x00000000005801c7 <+30991>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005801cf <+30999>:	mov    %r15,%r13
0x00000000005801d2 <+31002>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005801d7 <+31007>:	mov    $0x7444e0,%ecx
0x00000000005801dc <+31012>:	mov    $0xd68,%edx
0x00000000005801e1 <+31017>:	mov    $0x74045c,%esi
0x00000000005801e6 <+31022>:	mov    $0x7408da,%edi
0x00000000005801eb <+31027>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005801f0 <+31032>:	mov    $0xfffffffe,%eax
0x00000000005801f5 <+31037>:	mov    0x8(%rsp),%ecx
0x00000000005801f9 <+31041>:	sub    %ecx,%eax
0x00000000005801fb <+31043>:	cltq
0x00000000005801fd <+31045>:	mov    (%rbx,%rax,8),%rsi
0x0000000000580201 <+31049>:	mov    %r12,%rdx
0x0000000000580204 <+31052>:	mov    0x18(%rsp),%rdi
0x0000000000580209 <+31057>:	call   0x576abb <format_kwargs_error>
0x000000000058020e <+31062>:	mov    %r12,%rdx
0x0000000000580211 <+31065>:	mov    $0xd6d,%esi
0x0000000000580216 <+31070>:	mov    $0x74045c,%edi
0x000000000058021b <+31075>:	call   0x573c83 <Py_DECREF>
0x0000000000580220 <+31080>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000580225 <+31085>:	mov    %r15,%rdx
0x0000000000580228 <+31088>:	mov    %rbx,%rsi
0x000000000058022b <+31091>:	mov    %rbp,%rdi
0x000000000058022e <+31094>:	call   0x573f7b <lltrace_instruction>
0x0000000000580233 <+31099>:	jmp    0x580197 <_PyEval_EvalFrameDefault+30943>
0x0000000000580238 <+31104>:	mov    $0x7444e0,%ecx
0x000000000058023d <+31109>:	mov    $0xd72,%edx
0x0000000000580242 <+31114>:	mov    $0x74045c,%esi
0x0000000000580247 <+31119>:	mov    $0x742a50,%edi
0x000000000058024c <+31124>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580251 <+31129>:	mov    $0xffffffff,%edx
0x0000000000580256 <+31134>:	jmp    0x5801be <_PyEval_EvalFrameDefault+30982>
0x000000000058025b <+31139>:	lea    0x2(%r13),%r15
0x000000000058025f <+31143>:	mov    %r13,0x38(%rbp)
0x0000000000580263 <+31147>:	mov    -0x8(%rbx),%rdx
0x0000000000580267 <+31151>:	mov    -0x10(%rbx),%rsi
0x000000000058026b <+31155>:	mov    0x20(%rbp),%rax
0x000000000058026f <+31159>:	movslq 0x4c(%rax),%rax
0x0000000000580273 <+31163>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000580278 <+31168>:	mov    %rbx,%rax
0x000000000058027b <+31171>:	sub    %rcx,%rax
0x000000000058027e <+31174>:	sar    $0x3,%rax
0x0000000000580282 <+31178>:	cmp    $0x1,%eax
0x0000000000580285 <+31181>:	jle    0x5802ff <_PyEval_EvalFrameDefault+31303>
0x0000000000580287 <+31183>:	sub    $0x10,%rbx
0x000000000058028b <+31187>:	mov    0x8(%rsp),%eax
0x000000000058028f <+31191>:	neg    %eax
0x0000000000580291 <+31193>:	cltq
0x0000000000580293 <+31195>:	mov    (%rbx,%rax,8),%rdi
0x0000000000580297 <+31199>:	cmpq   $0x994540,0x8(%rdi)
0x000000000058029f <+31207>:	jne    0x580318 <_PyEval_EvalFrameDefault+31328>
0x00000000005802a1 <+31209>:	call   0x4e1109 <_PyDict_SetItem_Take2>
0x00000000005802a6 <+31214>:	test   %eax,%eax
0x00000000005802a8 <+31216>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005802ae <+31222>:	movzwl (%r15),%r12d
0x00000000005802b2 <+31226>:	mov    %r12d,%eax
0x00000000005802b5 <+31229>:	shr    $0x8,%ax
0x00000000005802b9 <+31233>:	movzwl %ax,%eax
0x00000000005802bc <+31236>:	mov    %eax,0x8(%rsp)
0x00000000005802c0 <+31240>:	cmpl   $0x0,0x14(%rsp)
0x00000000005802c5 <+31245>:	jne    0x580331 <_PyEval_EvalFrameDefault+31353>
0x00000000005802c7 <+31247>:	movzbl 0xc0(%rsp),%eax
0x00000000005802cf <+31255>:	lea    -0x1(%rax),%edx
0x00000000005802d2 <+31258>:	cmp    $0xfd,%dl
0x00000000005802d5 <+31261>:	jbe    0x580341 <_PyEval_EvalFrameDefault+31369>
0x00000000005802d7 <+31263>:	cmpw   $0x0,0x53f16d(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005802df <+31271>:	jne    0x58035a <_PyEval_EvalFrameDefault+31394>
0x00000000005802e1 <+31273>:	mov    $0x0,%edx
0x00000000005802e6 <+31278>:	or     %edx,%eax
0x00000000005802e8 <+31280>:	or     %eax,%r12d
0x00000000005802eb <+31283>:	movzbl %r12b,%eax
0x00000000005802ef <+31287>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005802f7 <+31295>:	mov    %r15,%r13
0x00000000005802fa <+31298>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005802ff <+31303>:	mov    $0x7444e0,%ecx
0x0000000000580304 <+31308>:	mov    $0xd79,%edx
0x0000000000580309 <+31313>:	mov    $0x74045c,%esi
0x000000000058030e <+31318>:	mov    $0x74092c,%edi
0x0000000000580313 <+31323>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580318 <+31328>:	mov    $0x7444e0,%ecx
0x000000000058031d <+31333>:	mov    $0xd7b,%edx
0x0000000000580322 <+31338>:	mov    $0x74045c,%esi
0x0000000000580327 <+31343>:	mov    $0x740b21,%edi
0x000000000058032c <+31348>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580331 <+31353>:	mov    %r15,%rdx
0x0000000000580334 <+31356>:	mov    %rbx,%rsi
0x0000000000580337 <+31359>:	mov    %rbp,%rdi
0x000000000058033a <+31362>:	call   0x573f7b <lltrace_instruction>
0x000000000058033f <+31367>:	jmp    0x5802c7 <_PyEval_EvalFrameDefault+31247>
0x0000000000580341 <+31369>:	mov    $0x7444e0,%ecx
0x0000000000580346 <+31374>:	mov    $0xd81,%edx
0x000000000058034b <+31379>:	mov    $0x74045c,%esi
0x0000000000580350 <+31384>:	mov    $0x742a50,%edi
0x0000000000580355 <+31389>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058035a <+31394>:	mov    $0xffffffff,%edx
0x000000000058035f <+31399>:	jmp    0x5802e6 <_PyEval_EvalFrameDefault+31278>
0x0000000000580361 <+31401>:	lea    0x2(%r13),%r15
0x0000000000580365 <+31405>:	mov    %r13,0x38(%rbp)
0x0000000000580369 <+31409>:	movslq 0x8(%rsp),%rsi
0x000000000058036e <+31414>:	mov    0x30(%rsp),%rdi
0x0000000000580373 <+31419>:	call   0x500470 <PyTuple_GetItem>
0x0000000000580378 <+31424>:	mov    %rax,%rsi
0x000000000058037b <+31427>:	mov    -0x8(%rbx),%r13
0x000000000058037f <+31431>:	mov    %r13,%rdi
0x0000000000580382 <+31434>:	call   0x4f1795 <PyObject_GetAttr>
0x0000000000580387 <+31439>:	mov    %rax,%r12
0x000000000058038a <+31442>:	test   %rax,%rax
0x000000000058038d <+31445>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000580393 <+31451>:	mov    %r13,%rdx
0x0000000000580396 <+31454>:	mov    $0xd8c,%esi
0x000000000058039b <+31459>:	mov    $0x74045c,%edi
0x00000000005803a0 <+31464>:	call   0x573c83 <Py_DECREF>
0x00000000005803a5 <+31469>:	mov    %r12,-0x8(%rbx)
0x00000000005803a9 <+31473>:	lea    0x8(%r15),%r13
0x00000000005803ad <+31477>:	movzwl 0x8(%r15),%r12d
0x00000000005803b2 <+31482>:	mov    %r12d,%eax
0x00000000005803b5 <+31485>:	shr    $0x8,%ax
0x00000000005803b9 <+31489>:	movzwl %ax,%eax
0x00000000005803bc <+31492>:	mov    %eax,0x8(%rsp)
0x00000000005803c0 <+31496>:	cmpl   $0x0,0x14(%rsp)
0x00000000005803c5 <+31501>:	jne    0x5803fc <_PyEval_EvalFrameDefault+31556>
0x00000000005803c7 <+31503>:	movzbl 0xc0(%rsp),%eax
0x00000000005803cf <+31511>:	lea    -0x1(%rax),%edx
0x00000000005803d2 <+31514>:	cmp    $0xfd,%dl
0x00000000005803d5 <+31517>:	jbe    0x58040c <_PyEval_EvalFrameDefault+31572>
0x00000000005803d7 <+31519>:	cmpw   $0x0,0x53f06d(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005803df <+31527>:	jne    0x580425 <_PyEval_EvalFrameDefault+31597>
0x00000000005803e1 <+31529>:	mov    $0x0,%edx
0x00000000005803e6 <+31534>:	or     %edx,%eax
0x00000000005803e8 <+31536>:	or     %eax,%r12d
0x00000000005803eb <+31539>:	movzbl %r12b,%eax
0x00000000005803ef <+31543>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005803f7 <+31551>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005803fc <+31556>:	mov    %r13,%rdx
0x00000000005803ff <+31559>:	mov    %rbx,%rsi
0x0000000000580402 <+31562>:	mov    %rbp,%rdi
0x0000000000580405 <+31565>:	call   0x573f7b <lltrace_instruction>
0x000000000058040a <+31570>:	jmp    0x5803c7 <_PyEval_EvalFrameDefault+31503>
0x000000000058040c <+31572>:	mov    $0x7444e0,%ecx
0x0000000000580411 <+31577>:	mov    $0xd8f,%edx
0x0000000000580416 <+31582>:	mov    $0x74045c,%esi
0x000000000058041b <+31587>:	mov    $0x742a50,%edi
0x0000000000580420 <+31592>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580425 <+31597>:	mov    $0xffffffff,%edx
0x000000000058042a <+31602>:	jmp    0x5803e6 <_PyEval_EvalFrameDefault+31534>
0x000000000058042c <+31604>:	lea    0x2(%r13),%r15
0x0000000000580430 <+31608>:	mov    %r13,0x38(%rbp)
0x0000000000580434 <+31612>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058043c <+31620>:	jne    0x580456 <_PyEval_EvalFrameDefault+31646>
0x000000000058043e <+31622>:	movzwl 0x2(%r13),%eax
0x0000000000580443 <+31627>:	cmp    $0xf,%ax
0x0000000000580447 <+31631>:	jbe    0x58046f <_PyEval_EvalFrameDefault+31671>
0x0000000000580449 <+31633>:	sub    $0x10,%eax
0x000000000058044c <+31636>:	mov    %ax,0x2(%r13)
0x0000000000580451 <+31641>:	jmp    0x580369 <_PyEval_EvalFrameDefault+31409>
0x0000000000580456 <+31646>:	mov    $0x7444e0,%ecx
0x000000000058045b <+31651>:	mov    $0xd93,%edx
0x0000000000580460 <+31656>:	mov    $0x74045c,%esi
0x0000000000580465 <+31661>:	mov    $0x7408ff,%edi
0x000000000058046a <+31666>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058046f <+31671>:	mov    -0x8(%rbx),%r12
0x0000000000580473 <+31675>:	movslq 0x8(%rsp),%rsi
0x0000000000580478 <+31680>:	mov    0x30(%rsp),%rdi
0x000000000058047d <+31685>:	call   0x500470 <PyTuple_GetItem>
0x0000000000580482 <+31690>:	mov    %rax,%rdx
0x0000000000580485 <+31693>:	mov    %r13,%rsi
0x0000000000580488 <+31696>:	mov    %r12,%rdi
0x000000000058048b <+31699>:	call   0x5cf6b5 <_Py_Specialize_LoadAttr>
0x0000000000580490 <+31704>:	test   %eax,%eax
0x0000000000580492 <+31706>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000580498 <+31712>:	movzwl 0x0(%r13),%r14d
0x000000000058049d <+31717>:	cmpl   $0x0,0x14(%rsp)
0x00000000005804a2 <+31722>:	jne    0x5804d3 <_PyEval_EvalFrameDefault+31771>
0x00000000005804a4 <+31724>:	movzbl 0xc0(%rsp),%r12d
0x00000000005804ad <+31733>:	cmpw   $0x0,0x53ef97(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005804b5 <+31741>:	jne    0x5804e3 <_PyEval_EvalFrameDefault+31787>
0x00000000005804b7 <+31743>:	mov    $0x0,%eax
0x00000000005804bc <+31748>:	or     %eax,%r12d
0x00000000005804bf <+31751>:	or     %r14d,%r12d
0x00000000005804c2 <+31754>:	movzbl %r12b,%eax
0x00000000005804c6 <+31758>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005804ce <+31766>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005804d3 <+31771>:	mov    %r13,%rdx
0x00000000005804d6 <+31774>:	mov    %rbx,%rsi
0x00000000005804d9 <+31777>:	mov    %rbp,%rdi
0x00000000005804dc <+31780>:	call   0x573f7b <lltrace_instruction>
0x00000000005804e1 <+31785>:	jmp    0x5804a4 <_PyEval_EvalFrameDefault+31724>
0x00000000005804e3 <+31787>:	mov    $0xffffffff,%eax
0x00000000005804e8 <+31792>:	jmp    0x5804bc <_PyEval_EvalFrameDefault+31748>
0x00000000005804ea <+31794>:	lea    0x2(%r13),%r15
0x00000000005804ee <+31798>:	mov    %r13,0x38(%rbp)
0x00000000005804f2 <+31802>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005804fa <+31810>:	jne    0x5805f4 <_PyEval_EvalFrameDefault+32060>
0x0000000000580500 <+31816>:	mov    -0x8(%rbx),%r14
0x0000000000580504 <+31820>:	mov    0x8(%r14),%rcx
0x0000000000580508 <+31824>:	movzwl 0x4(%r13),%eax
0x000000000058050d <+31829>:	movzwl 0x6(%r13),%edx
0x0000000000580512 <+31834>:	shl    $0x10,%edx
0x0000000000580515 <+31837>:	or     %edx,%eax
0x0000000000580517 <+31839>:	je     0x58060d <_PyEval_EvalFrameDefault+32085>
0x000000000058051d <+31845>:	cmp    %eax,0x180(%rcx)
0x0000000000580523 <+31851>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580529 <+31857>:	cmpq   $0x0,0x120(%rcx)
0x0000000000580531 <+31865>:	jns    0x580626 <_PyEval_EvalFrameDefault+32110>
0x0000000000580537 <+31871>:	testb  $0x10,0xa8(%rcx)
0x000000000058053e <+31878>:	je     0x58063f <_PyEval_EvalFrameDefault+32135>
0x0000000000580544 <+31884>:	mov    %r14,%rdi
0x0000000000580547 <+31887>:	call   0x573066 <_PyObject_ValuesPointer>
0x000000000058054c <+31892>:	mov    (%rax),%rax
0x000000000058054f <+31895>:	test   %rax,%rax
0x0000000000580552 <+31898>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580558 <+31904>:	movzwl 0x8(%r13),%edx
0x000000000058055d <+31909>:	mov    (%rax,%rdx,8),%rax
0x0000000000580561 <+31913>:	test   %rax,%rax
0x0000000000580564 <+31916>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058056a <+31922>:	addq   $0x1,0x543516(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000580572 <+31930>:	mov    (%rax),%rcx
0x0000000000580575 <+31933>:	lea    0x1(%rcx),%rdx
0x0000000000580579 <+31937>:	mov    %rdx,(%rax)
0x000000000058057c <+31940>:	mov    %rax,-0x8(%rbx)
0x0000000000580580 <+31944>:	mov    %r14,%rdx
0x0000000000580583 <+31947>:	mov    $0xdb8,%esi
0x0000000000580588 <+31952>:	mov    $0x74045c,%edi
0x000000000058058d <+31957>:	call   0x573c83 <Py_DECREF>
0x0000000000580592 <+31962>:	lea    0xa(%r13),%r14
0x0000000000580596 <+31966>:	movzwl 0xa(%r13),%r12d
0x000000000058059b <+31971>:	mov    %r12d,%eax
0x000000000058059e <+31974>:	shr    $0x8,%ax
0x00000000005805a2 <+31978>:	movzwl %ax,%eax
0x00000000005805a5 <+31981>:	mov    %eax,0x8(%rsp)
0x00000000005805a9 <+31985>:	cmpl   $0x0,0x14(%rsp)
0x00000000005805ae <+31990>:	jne    0x580658 <_PyEval_EvalFrameDefault+32160>
0x00000000005805b4 <+31996>:	movzbl 0xc0(%rsp),%eax
0x00000000005805bc <+32004>:	lea    -0x1(%rax),%edx
0x00000000005805bf <+32007>:	cmp    $0xfd,%dl
0x00000000005805c2 <+32010>:	jbe    0x58066b <_PyEval_EvalFrameDefault+32179>
0x00000000005805c8 <+32016>:	cmpw   $0x0,0x53ee7c(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005805d0 <+32024>:	jne    0x580684 <_PyEval_EvalFrameDefault+32204>
0x00000000005805d6 <+32030>:	mov    $0x0,%edx
0x00000000005805db <+32035>:	or     %edx,%eax
0x00000000005805dd <+32037>:	or     %eax,%r12d
0x00000000005805e0 <+32040>:	movzbl %r12b,%eax
0x00000000005805e4 <+32044>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005805ec <+32052>:	mov    %r14,%r13
0x00000000005805ef <+32055>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005805f4 <+32060>:	mov    $0x7444e0,%ecx
0x00000000005805f9 <+32065>:	mov    $0xda7,%edx
0x00000000005805fe <+32070>:	mov    $0x74045c,%esi
0x0000000000580603 <+32075>:	mov    $0x7408ff,%edi
0x0000000000580608 <+32080>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058060d <+32085>:	mov    $0x7444e0,%ecx
0x0000000000580612 <+32090>:	mov    $0xdad,%edx
0x0000000000580617 <+32095>:	mov    $0x74045c,%esi
0x000000000058061c <+32100>:	mov    $0x740b38,%edi
0x0000000000580621 <+32105>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580626 <+32110>:	mov    $0x7444e0,%ecx
0x000000000058062b <+32115>:	mov    $0xdaf,%edx
0x0000000000580630 <+32120>:	mov    $0x74045c,%esi
0x0000000000580635 <+32125>:	mov    $0x740b4a,%edi
0x000000000058063a <+32130>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058063f <+32135>:	mov    $0x7444e0,%ecx
0x0000000000580644 <+32140>:	mov    $0xdb0,%edx
0x0000000000580649 <+32145>:	mov    $0x74045c,%esi
0x000000000058064e <+32150>:	mov    $0x6ebf98,%edi
0x0000000000580653 <+32155>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580658 <+32160>:	mov    %r14,%rdx
0x000000000058065b <+32163>:	mov    %rbx,%rsi
0x000000000058065e <+32166>:	mov    %rbp,%rdi
0x0000000000580661 <+32169>:	call   0x573f7b <lltrace_instruction>
0x0000000000580666 <+32174>:	jmp    0x5805b4 <_PyEval_EvalFrameDefault+31996>
0x000000000058066b <+32179>:	mov    $0x7444e0,%ecx
0x0000000000580670 <+32184>:	mov    $0xdba,%edx
0x0000000000580675 <+32189>:	mov    $0x74045c,%esi
0x000000000058067a <+32194>:	mov    $0x742a50,%edi
0x000000000058067f <+32199>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580684 <+32204>:	mov    $0xffffffff,%edx
0x0000000000580689 <+32209>:	jmp    0x5805db <_PyEval_EvalFrameDefault+32035>
0x000000000058068e <+32214>:	lea    0x2(%r13),%r15
0x0000000000580692 <+32218>:	mov    %r13,0x38(%rbp)
0x0000000000580696 <+32222>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058069e <+32230>:	jne    0x5807b4 <_PyEval_EvalFrameDefault+32508>
0x00000000005806a4 <+32236>:	mov    -0x8(%rbx),%rsi
0x00000000005806a8 <+32240>:	cmpq   $0x996780,0x8(%rsi)
0x00000000005806b0 <+32248>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005806b6 <+32254>:	mov    0x10(%rsi),%rax
0x00000000005806ba <+32258>:	test   %rax,%rax
0x00000000005806bd <+32261>:	je     0x5807cd <_PyEval_EvalFrameDefault+32533>
0x00000000005806c3 <+32267>:	mov    0x20(%rax),%rdx
0x00000000005806c7 <+32271>:	movzwl 0x4(%r13),%eax
0x00000000005806cc <+32276>:	movzwl 0x6(%r13),%ecx
0x00000000005806d1 <+32281>:	shl    $0x10,%ecx
0x00000000005806d4 <+32284>:	or     %ecx,%eax
0x00000000005806d6 <+32286>:	cmp    %eax,0xc(%rdx)
0x00000000005806d9 <+32289>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005806df <+32295>:	movzbl 0xa(%rdx),%ecx
0x00000000005806e3 <+32299>:	cmp    $0x1,%cl
0x00000000005806e6 <+32302>:	jne    0x5807e6 <_PyEval_EvalFrameDefault+32558>
0x00000000005806ec <+32308>:	movzwl 0x8(%r13),%eax
0x00000000005806f1 <+32313>:	movzwl %ax,%edi
0x00000000005806f4 <+32316>:	cmp    0x18(%rdx),%rdi
0x00000000005806f8 <+32320>:	jge    0x5807ff <_PyEval_EvalFrameDefault+32583>
0x00000000005806fe <+32326>:	test   %cl,%cl
0x0000000000580700 <+32328>:	je     0x580818 <_PyEval_EvalFrameDefault+32608>
0x0000000000580706 <+32334>:	movzbl 0x9(%rdx),%ecx
0x000000000058070a <+32338>:	mov    $0x1,%edi
0x000000000058070f <+32343>:	shl    %cl,%rdi
0x0000000000580712 <+32346>:	movzwl %ax,%eax
0x0000000000580715 <+32349>:	shl    $0x4,%rax
0x0000000000580719 <+32353>:	add    %rdi,%rax
0x000000000058071c <+32356>:	mov    0x28(%rdx,%rax,1),%rax
0x0000000000580721 <+32361>:	test   %rax,%rax
0x0000000000580724 <+32364>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058072a <+32370>:	addq   $0x1,0x543356(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000580732 <+32378>:	mov    (%rax),%rcx
0x0000000000580735 <+32381>:	lea    0x1(%rcx),%rdx
0x0000000000580739 <+32385>:	mov    %rdx,(%rax)
0x000000000058073c <+32388>:	mov    %rax,-0x8(%rbx)
0x0000000000580740 <+32392>:	mov    %rsi,%rdx
0x0000000000580743 <+32395>:	mov    $0xdc4,%esi
0x0000000000580748 <+32400>:	mov    $0x74045c,%edi
0x000000000058074d <+32405>:	call   0x573c83 <Py_DECREF>
0x0000000000580752 <+32410>:	lea    0xa(%r13),%r14
0x0000000000580756 <+32414>:	movzwl 0xa(%r13),%r12d
0x000000000058075b <+32419>:	mov    %r12d,%eax
0x000000000058075e <+32422>:	shr    $0x8,%ax
0x0000000000580762 <+32426>:	movzwl %ax,%eax
0x0000000000580765 <+32429>:	mov    %eax,0x8(%rsp)
0x0000000000580769 <+32433>:	cmpl   $0x0,0x14(%rsp)
0x000000000058076e <+32438>:	jne    0x580831 <_PyEval_EvalFrameDefault+32633>
0x0000000000580774 <+32444>:	movzbl 0xc0(%rsp),%eax
0x000000000058077c <+32452>:	lea    -0x1(%rax),%edx
0x000000000058077f <+32455>:	cmp    $0xfd,%dl
0x0000000000580782 <+32458>:	jbe    0x580844 <_PyEval_EvalFrameDefault+32652>
0x0000000000580788 <+32464>:	cmpw   $0x0,0x53ecbc(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000580790 <+32472>:	jne    0x58085d <_PyEval_EvalFrameDefault+32677>
0x0000000000580796 <+32478>:	mov    $0x0,%edx
0x000000000058079b <+32483>:	or     %edx,%eax
0x000000000058079d <+32485>:	or     %eax,%r12d
0x00000000005807a0 <+32488>:	movzbl %r12b,%eax
0x00000000005807a4 <+32492>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005807ac <+32500>:	mov    %r14,%r13
0x00000000005807af <+32503>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005807b4 <+32508>:	mov    $0x7444e0,%ecx
0x00000000005807b9 <+32513>:	mov    $0xdbe,%edx
0x00000000005807be <+32518>:	mov    $0x74045c,%esi
0x00000000005807c3 <+32523>:	mov    $0x7408ff,%edi
0x00000000005807c8 <+32528>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005807cd <+32533>:	mov    $0x7444e0,%ecx
0x00000000005807d2 <+32538>:	mov    $0xdc2,%edx
0x00000000005807d7 <+32543>:	mov    $0x74045c,%esi
0x00000000005807dc <+32548>:	mov    $0x6f1275,%edi
0x00000000005807e1 <+32553>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005807e6 <+32558>:	mov    $0x7444e0,%ecx
0x00000000005807eb <+32563>:	mov    $0xdc2,%edx
0x00000000005807f0 <+32568>:	mov    $0x74045c,%esi
0x00000000005807f5 <+32573>:	mov    $0x742e00,%edi
0x00000000005807fa <+32578>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005807ff <+32583>:	mov    $0x7444e0,%ecx
0x0000000000580804 <+32588>:	mov    $0xdc2,%edx
0x0000000000580809 <+32593>:	mov    $0x74045c,%esi
0x000000000058080e <+32598>:	mov    $0x742e30,%edi
0x0000000000580813 <+32603>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580818 <+32608>:	mov    $0x7444e0,%ecx
0x000000000058081d <+32613>:	mov    $0xdc2,%edx
0x0000000000580822 <+32618>:	mov    $0x74045c,%esi
0x0000000000580827 <+32623>:	mov    $0x742e60,%edi
0x000000000058082c <+32628>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580831 <+32633>:	mov    %r14,%rdx
0x0000000000580834 <+32636>:	mov    %rbx,%rsi
0x0000000000580837 <+32639>:	mov    %rbp,%rdi
0x000000000058083a <+32642>:	call   0x573f7b <lltrace_instruction>
0x000000000058083f <+32647>:	jmp    0x580774 <_PyEval_EvalFrameDefault+32444>
0x0000000000580844 <+32652>:	mov    $0x7444e0,%ecx
0x0000000000580849 <+32657>:	mov    $0xdc6,%edx
0x000000000058084e <+32662>:	mov    $0x74045c,%esi
0x0000000000580853 <+32667>:	mov    $0x742a50,%edi
0x0000000000580858 <+32672>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058085d <+32677>:	mov    $0xffffffff,%edx
0x0000000000580862 <+32682>:	jmp    0x58079b <_PyEval_EvalFrameDefault+32483>
0x0000000000580867 <+32687>:	lea    0x2(%r13),%r15
0x000000000058086b <+32691>:	mov    %r13,0x38(%rbp)
0x000000000058086f <+32695>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000580877 <+32703>:	jne    0x5809c5 <_PyEval_EvalFrameDefault+33037>
0x000000000058087d <+32709>:	mov    -0x8(%rbx),%rax
0x0000000000580881 <+32713>:	mov    %rax,0x48(%rsp)
0x0000000000580886 <+32718>:	mov    0x8(%rax),%rcx
0x000000000058088a <+32722>:	movzwl 0x4(%r13),%eax
0x000000000058088f <+32727>:	movzwl 0x6(%r13),%edx
0x0000000000580894 <+32732>:	shl    $0x10,%edx
0x0000000000580897 <+32735>:	or     %edx,%eax
0x0000000000580899 <+32737>:	je     0x5809de <_PyEval_EvalFrameDefault+33062>
0x000000000058089f <+32743>:	cmp    %eax,0x180(%rcx)
0x00000000005808a5 <+32749>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005808ab <+32755>:	testb  $0x10,0xa8(%rcx)
0x00000000005808b2 <+32762>:	je     0x5809f7 <_PyEval_EvalFrameDefault+33087>
0x00000000005808b8 <+32768>:	mov    0x48(%rsp),%rdi
0x00000000005808bd <+32773>:	call   0x5733a2 <_PyObject_ManagedDictPointer>
0x00000000005808c2 <+32778>:	mov    (%rax),%r14
0x00000000005808c5 <+32781>:	test   %r14,%r14
0x00000000005808c8 <+32784>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005808ce <+32790>:	cmpq   $0x994540,0x8(%r14)
0x00000000005808d6 <+32798>:	jne    0x580a10 <_PyEval_EvalFrameDefault+33112>
0x00000000005808dc <+32804>:	movslq 0x8(%rsp),%rsi
0x00000000005808e1 <+32809>:	mov    0x30(%rsp),%rdi
0x00000000005808e6 <+32814>:	call   0x500470 <PyTuple_GetItem>
0x00000000005808eb <+32819>:	mov    %rax,%rdi
0x00000000005808ee <+32822>:	movzwl 0x8(%r13),%eax
0x00000000005808f3 <+32827>:	mov    0x20(%r14),%rsi
0x00000000005808f7 <+32831>:	cmp    0x18(%rsi),%rax
0x00000000005808fb <+32835>:	jae    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580901 <+32841>:	cmpb   $0x0,0xa(%rsi)
0x0000000000580905 <+32845>:	je     0x580a29 <_PyEval_EvalFrameDefault+33137>
0x000000000058090b <+32851>:	movzbl 0x9(%rsi),%ecx
0x000000000058090f <+32855>:	mov    $0x1,%edx
0x0000000000580914 <+32860>:	shl    %cl,%rdx
0x0000000000580917 <+32863>:	shl    $0x4,%rax
0x000000000058091b <+32867>:	add    %rdx,%rax
0x000000000058091e <+32870>:	lea    0x20(%rsi,%rax,1),%rax
0x0000000000580923 <+32875>:	cmp    %rdi,(%rax)
0x0000000000580926 <+32878>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058092c <+32884>:	mov    0x8(%rax),%rax
0x0000000000580930 <+32888>:	test   %rax,%rax
0x0000000000580933 <+32891>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580939 <+32897>:	addq   $0x1,0x543147(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000580941 <+32905>:	mov    (%rax),%rcx
0x0000000000580944 <+32908>:	lea    0x1(%rcx),%rdx
0x0000000000580948 <+32912>:	mov    %rdx,(%rax)
0x000000000058094b <+32915>:	mov    %rax,-0x8(%rbx)
0x000000000058094f <+32919>:	mov    0x48(%rsp),%rdx
0x0000000000580954 <+32924>:	mov    $0xde7,%esi
0x0000000000580959 <+32929>:	mov    $0x74045c,%edi
0x000000000058095e <+32934>:	call   0x573c83 <Py_DECREF>
0x0000000000580963 <+32939>:	lea    0xa(%r13),%r14
0x0000000000580967 <+32943>:	movzwl 0xa(%r13),%r12d
0x000000000058096c <+32948>:	mov    %r12d,%eax
0x000000000058096f <+32951>:	shr    $0x8,%ax
0x0000000000580973 <+32955>:	movzwl %ax,%eax
0x0000000000580976 <+32958>:	mov    %eax,0x8(%rsp)
0x000000000058097a <+32962>:	cmpl   $0x0,0x14(%rsp)
0x000000000058097f <+32967>:	jne    0x580a55 <_PyEval_EvalFrameDefault+33181>
0x0000000000580985 <+32973>:	movzbl 0xc0(%rsp),%eax
0x000000000058098d <+32981>:	lea    -0x1(%rax),%edx
0x0000000000580990 <+32984>:	cmp    $0xfd,%dl
0x0000000000580993 <+32987>:	jbe    0x580a68 <_PyEval_EvalFrameDefault+33200>
0x0000000000580999 <+32993>:	cmpw   $0x0,0x53eaab(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005809a1 <+33001>:	jne    0x580a81 <_PyEval_EvalFrameDefault+33225>
0x00000000005809a7 <+33007>:	mov    $0x0,%edx
0x00000000005809ac <+33012>:	or     %edx,%eax
0x00000000005809ae <+33014>:	or     %eax,%r12d
0x00000000005809b1 <+33017>:	movzbl %r12b,%eax
0x00000000005809b5 <+33021>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005809bd <+33029>:	mov    %r14,%r13
0x00000000005809c0 <+33032>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005809c5 <+33037>:	mov    $0x7444e0,%ecx
0x00000000005809ca <+33042>:	mov    $0xdca,%edx
0x00000000005809cf <+33047>:	mov    $0x74045c,%esi
0x00000000005809d4 <+33052>:	mov    $0x7408ff,%edi
0x00000000005809d9 <+33057>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005809de <+33062>:	mov    $0x7444e0,%ecx
0x00000000005809e3 <+33067>:	mov    $0xdd0,%edx
0x00000000005809e8 <+33072>:	mov    $0x74045c,%esi
0x00000000005809ed <+33077>:	mov    $0x740b38,%edi
0x00000000005809f2 <+33082>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005809f7 <+33087>:	mov    $0x7444e0,%ecx
0x00000000005809fc <+33092>:	mov    $0xdd2,%edx
0x0000000000580a01 <+33097>:	mov    $0x74045c,%esi
0x0000000000580a06 <+33102>:	mov    $0x6ebf98,%edi
0x0000000000580a0b <+33107>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580a10 <+33112>:	mov    $0x7444e0,%ecx
0x0000000000580a15 <+33117>:	mov    $0xdd5,%edx
0x0000000000580a1a <+33122>:	mov    $0x74045c,%esi
0x0000000000580a1f <+33127>:	mov    $0x742e90,%edi
0x0000000000580a24 <+33132>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580a29 <+33137>:	movzbl 0x9(%rsi),%ecx
0x0000000000580a2d <+33141>:	mov    $0x1,%edx
0x0000000000580a32 <+33146>:	shl    %cl,%rdx
0x0000000000580a35 <+33149>:	lea    (%rax,%rax,2),%rax
0x0000000000580a39 <+33153>:	lea    (%rdx,%rax,8),%rax
0x0000000000580a3d <+33157>:	lea    0x20(%rsi,%rax,1),%rax
0x0000000000580a42 <+33162>:	cmp    %rdi,0x8(%rax)
0x0000000000580a46 <+33166>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580a4c <+33172>:	mov    0x10(%rax),%rax
0x0000000000580a50 <+33176>:	jmp    0x580930 <_PyEval_EvalFrameDefault+32888>
0x0000000000580a55 <+33181>:	mov    %r14,%rdx
0x0000000000580a58 <+33184>:	mov    %rbx,%rsi
0x0000000000580a5b <+33187>:	mov    %rbp,%rdi
0x0000000000580a5e <+33190>:	call   0x573f7b <lltrace_instruction>
0x0000000000580a63 <+33195>:	jmp    0x580985 <_PyEval_EvalFrameDefault+32973>
0x0000000000580a68 <+33200>:	mov    $0x7444e0,%ecx
0x0000000000580a6d <+33205>:	mov    $0xde9,%edx
0x0000000000580a72 <+33210>:	mov    $0x74045c,%esi
0x0000000000580a77 <+33215>:	mov    $0x742a50,%edi
0x0000000000580a7c <+33220>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580a81 <+33225>:	mov    $0xffffffff,%edx
0x0000000000580a86 <+33230>:	jmp    0x5809ac <_PyEval_EvalFrameDefault+33012>
0x0000000000580a8b <+33235>:	lea    0x2(%r13),%r15
0x0000000000580a8f <+33239>:	mov    %r13,0x38(%rbp)
0x0000000000580a93 <+33243>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000580a9b <+33251>:	jne    0x580b5a <_PyEval_EvalFrameDefault+33442>
0x0000000000580aa1 <+33257>:	mov    -0x8(%rbx),%rcx
0x0000000000580aa5 <+33261>:	mov    0x8(%rcx),%rsi
0x0000000000580aa9 <+33265>:	movzwl 0x4(%r13),%eax
0x0000000000580aae <+33270>:	movzwl 0x6(%r13),%edx
0x0000000000580ab3 <+33275>:	shl    $0x10,%edx
0x0000000000580ab6 <+33278>:	or     %edx,%eax
0x0000000000580ab8 <+33280>:	je     0x580b73 <_PyEval_EvalFrameDefault+33467>
0x0000000000580abe <+33286>:	cmp    %eax,0x180(%rsi)
0x0000000000580ac4 <+33292>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580aca <+33298>:	movzwl 0x8(%r13),%eax
0x0000000000580acf <+33303>:	mov    (%rcx,%rax,1),%rax
0x0000000000580ad3 <+33307>:	test   %rax,%rax
0x0000000000580ad6 <+33310>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580adc <+33316>:	addq   $0x1,0x542fa4(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000580ae4 <+33324>:	mov    (%rax),%rsi
0x0000000000580ae7 <+33327>:	lea    0x1(%rsi),%rdx
0x0000000000580aeb <+33331>:	mov    %rdx,(%rax)
0x0000000000580aee <+33334>:	mov    %rax,-0x8(%rbx)
0x0000000000580af2 <+33338>:	mov    %rcx,%rdx
0x0000000000580af5 <+33341>:	mov    $0xdfb,%esi
0x0000000000580afa <+33346>:	mov    $0x74045c,%edi
0x0000000000580aff <+33351>:	call   0x573c83 <Py_DECREF>
0x0000000000580b04 <+33356>:	lea    0xa(%r13),%r14
0x0000000000580b08 <+33360>:	movzwl 0xa(%r13),%r12d
0x0000000000580b0d <+33365>:	mov    %r12d,%eax
0x0000000000580b10 <+33368>:	shr    $0x8,%ax
0x0000000000580b14 <+33372>:	movzwl %ax,%eax
0x0000000000580b17 <+33375>:	mov    %eax,0x8(%rsp)
0x0000000000580b1b <+33379>:	cmpl   $0x0,0x14(%rsp)
0x0000000000580b20 <+33384>:	jne    0x580b8c <_PyEval_EvalFrameDefault+33492>
0x0000000000580b22 <+33386>:	movzbl 0xc0(%rsp),%eax
0x0000000000580b2a <+33394>:	lea    -0x1(%rax),%edx
0x0000000000580b2d <+33397>:	cmp    $0xfd,%dl
0x0000000000580b30 <+33400>:	jbe    0x580b9c <_PyEval_EvalFrameDefault+33508>
0x0000000000580b32 <+33402>:	cmpw   $0x0,0x53e912(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000580b3a <+33410>:	jne    0x580bb5 <_PyEval_EvalFrameDefault+33533>
0x0000000000580b3c <+33412>:	mov    $0x0,%edx
0x0000000000580b41 <+33417>:	or     %edx,%eax
0x0000000000580b43 <+33419>:	or     %eax,%r12d
0x0000000000580b46 <+33422>:	movzbl %r12b,%eax
0x0000000000580b4a <+33426>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000580b52 <+33434>:	mov    %r14,%r13
0x0000000000580b55 <+33437>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000580b5a <+33442>:	mov    $0x7444e0,%ecx
0x0000000000580b5f <+33447>:	mov    $0xded,%edx
0x0000000000580b64 <+33452>:	mov    $0x74045c,%esi
0x0000000000580b69 <+33457>:	mov    $0x7408ff,%edi
0x0000000000580b6e <+33462>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580b73 <+33467>:	mov    $0x7444e0,%ecx
0x0000000000580b78 <+33472>:	mov    $0xdf3,%edx
0x0000000000580b7d <+33477>:	mov    $0x74045c,%esi
0x0000000000580b82 <+33482>:	mov    $0x740b38,%edi
0x0000000000580b87 <+33487>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580b8c <+33492>:	mov    %r14,%rdx
0x0000000000580b8f <+33495>:	mov    %rbx,%rsi
0x0000000000580b92 <+33498>:	mov    %rbp,%rdi
0x0000000000580b95 <+33501>:	call   0x573f7b <lltrace_instruction>
0x0000000000580b9a <+33506>:	jmp    0x580b22 <_PyEval_EvalFrameDefault+33386>
0x0000000000580b9c <+33508>:	mov    $0x7444e0,%ecx
0x0000000000580ba1 <+33513>:	mov    $0xdfd,%edx
0x0000000000580ba6 <+33518>:	mov    $0x74045c,%esi
0x0000000000580bab <+33523>:	mov    $0x742a50,%edi
0x0000000000580bb0 <+33528>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580bb5 <+33533>:	mov    $0xffffffff,%edx
0x0000000000580bba <+33538>:	jmp    0x580b41 <_PyEval_EvalFrameDefault+33417>
0x0000000000580bbc <+33540>:	lea    0x2(%r13),%r15
0x0000000000580bc0 <+33544>:	mov    %r13,0x38(%rbp)
0x0000000000580bc4 <+33548>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000580bcc <+33556>:	jne    0x580be6 <_PyEval_EvalFrameDefault+33582>
0x0000000000580bce <+33558>:	movzwl 0x2(%r13),%eax
0x0000000000580bd3 <+33563>:	cmp    $0xf,%ax
0x0000000000580bd7 <+33567>:	jbe    0x580bff <_PyEval_EvalFrameDefault+33607>
0x0000000000580bd9 <+33569>:	sub    $0x10,%eax
0x0000000000580bdc <+33572>:	mov    %ax,0x2(%r13)
0x0000000000580be1 <+33577>:	jmp    0x57dc72 <_PyEval_EvalFrameDefault+21434>
0x0000000000580be6 <+33582>:	mov    $0x7444e0,%ecx
0x0000000000580beb <+33587>:	mov    $0xe01,%edx
0x0000000000580bf0 <+33592>:	mov    $0x74045c,%esi
0x0000000000580bf5 <+33597>:	mov    $0x7408ff,%edi
0x0000000000580bfa <+33602>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580bff <+33607>:	mov    -0x8(%rbx),%r12
0x0000000000580c03 <+33611>:	movslq 0x8(%rsp),%rsi
0x0000000000580c08 <+33616>:	mov    0x30(%rsp),%rdi
0x0000000000580c0d <+33621>:	call   0x500470 <PyTuple_GetItem>
0x0000000000580c12 <+33626>:	mov    %rax,%rdx
0x0000000000580c15 <+33629>:	mov    %r13,%rsi
0x0000000000580c18 <+33632>:	mov    %r12,%rdi
0x0000000000580c1b <+33635>:	call   0x5cf8f5 <_Py_Specialize_StoreAttr>
0x0000000000580c20 <+33640>:	test   %eax,%eax
0x0000000000580c22 <+33642>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000580c28 <+33648>:	movzwl 0x0(%r13),%r14d
0x0000000000580c2d <+33653>:	cmpl   $0x0,0x14(%rsp)
0x0000000000580c32 <+33658>:	jne    0x580c63 <_PyEval_EvalFrameDefault+33707>
0x0000000000580c34 <+33660>:	movzbl 0xc0(%rsp),%r12d
0x0000000000580c3d <+33669>:	cmpw   $0x0,0x53e807(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000580c45 <+33677>:	jne    0x580c73 <_PyEval_EvalFrameDefault+33723>
0x0000000000580c47 <+33679>:	mov    $0x0,%eax
0x0000000000580c4c <+33684>:	or     %eax,%r12d
0x0000000000580c4f <+33687>:	or     %r14d,%r12d
0x0000000000580c52 <+33690>:	movzbl %r12b,%eax
0x0000000000580c56 <+33694>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000580c5e <+33702>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000580c63 <+33707>:	mov    %r13,%rdx
0x0000000000580c66 <+33710>:	mov    %rbx,%rsi
0x0000000000580c69 <+33713>:	mov    %rbp,%rdi
0x0000000000580c6c <+33716>:	call   0x573f7b <lltrace_instruction>
0x0000000000580c71 <+33721>:	jmp    0x580c34 <_PyEval_EvalFrameDefault+33660>
0x0000000000580c73 <+33723>:	mov    $0xffffffff,%eax
0x0000000000580c78 <+33728>:	jmp    0x580c4c <_PyEval_EvalFrameDefault+33684>
0x0000000000580c7a <+33730>:	lea    0x2(%r13),%r15
0x0000000000580c7e <+33734>:	mov    %r13,0x38(%rbp)
0x0000000000580c82 <+33738>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000580c8a <+33746>:	jne    0x580db0 <_PyEval_EvalFrameDefault+34040>
0x0000000000580c90 <+33752>:	mov    -0x8(%rbx),%r14
0x0000000000580c94 <+33756>:	mov    0x8(%r14),%rcx
0x0000000000580c98 <+33760>:	movzwl 0x4(%r13),%eax
0x0000000000580c9d <+33765>:	movzwl 0x6(%r13),%edx
0x0000000000580ca2 <+33770>:	shl    $0x10,%edx
0x0000000000580ca5 <+33773>:	or     %edx,%eax
0x0000000000580ca7 <+33775>:	je     0x580dc9 <_PyEval_EvalFrameDefault+34065>
0x0000000000580cad <+33781>:	cmp    %eax,0x180(%rcx)
0x0000000000580cb3 <+33787>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580cb9 <+33793>:	testb  $0x10,0xa8(%rcx)
0x0000000000580cc0 <+33800>:	je     0x580de2 <_PyEval_EvalFrameDefault+34090>
0x0000000000580cc6 <+33806>:	mov    %r14,%rdi
0x0000000000580cc9 <+33809>:	call   0x573066 <_PyObject_ValuesPointer>
0x0000000000580cce <+33814>:	mov    (%rax),%rdi
0x0000000000580cd1 <+33817>:	test   %rdi,%rdi
0x0000000000580cd4 <+33820>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580cda <+33826>:	movzwl 0x8(%r13),%esi
0x0000000000580cdf <+33831>:	mov    0x20(%rbp),%rax
0x0000000000580ce3 <+33835>:	movslq 0x4c(%rax),%rax
0x0000000000580ce7 <+33839>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000580cec <+33844>:	mov    %rbx,%rax
0x0000000000580cef <+33847>:	sub    %rdx,%rax
0x0000000000580cf2 <+33850>:	sar    $0x3,%rax
0x0000000000580cf6 <+33854>:	test   %eax,%eax
0x0000000000580cf8 <+33856>:	jle    0x580dfb <_PyEval_EvalFrameDefault+34115>
0x0000000000580cfe <+33862>:	lea    -0x8(%rbx),%rax
0x0000000000580d02 <+33866>:	sub    %rdx,%rax
0x0000000000580d05 <+33869>:	sar    $0x3,%rax
0x0000000000580d09 <+33873>:	test   %eax,%eax
0x0000000000580d0b <+33875>:	jle    0x580e14 <_PyEval_EvalFrameDefault+34140>
0x0000000000580d11 <+33881>:	lea    -0x10(%rbx),%r15
0x0000000000580d15 <+33885>:	mov    -0x10(%rbx),%rax
0x0000000000580d19 <+33889>:	mov    (%rdi,%rsi,8),%rdx
0x0000000000580d1d <+33893>:	mov    %rax,(%rdi,%rsi,8)
0x0000000000580d21 <+33897>:	test   %rdx,%rdx
0x0000000000580d24 <+33900>:	je     0x580e2d <_PyEval_EvalFrameDefault+34165>
0x0000000000580d2a <+33906>:	mov    $0xe29,%esi
0x0000000000580d2f <+33911>:	mov    $0x74045c,%edi
0x0000000000580d34 <+33916>:	call   0x573c83 <Py_DECREF>
0x0000000000580d39 <+33921>:	mov    %r14,%rdx
0x0000000000580d3c <+33924>:	mov    $0xe2b,%esi
0x0000000000580d41 <+33929>:	mov    $0x74045c,%edi
0x0000000000580d46 <+33934>:	call   0x573c83 <Py_DECREF>
0x0000000000580d4b <+33939>:	lea    0xa(%r13),%r14
0x0000000000580d4f <+33943>:	movzwl 0xa(%r13),%r12d
0x0000000000580d54 <+33948>:	mov    %r12d,%eax
0x0000000000580d57 <+33951>:	shr    $0x8,%ax
0x0000000000580d5b <+33955>:	movzwl %ax,%eax
0x0000000000580d5e <+33958>:	mov    %eax,0x8(%rsp)
0x0000000000580d62 <+33962>:	cmpl   $0x0,0x14(%rsp)
0x0000000000580d67 <+33967>:	jne    0x580e37 <_PyEval_EvalFrameDefault+34175>
0x0000000000580d6d <+33973>:	movzbl 0xc0(%rsp),%eax
0x0000000000580d75 <+33981>:	lea    -0x1(%rax),%edx
0x0000000000580d78 <+33984>:	cmp    $0xfd,%dl
0x0000000000580d7b <+33987>:	jbe    0x580e4a <_PyEval_EvalFrameDefault+34194>
0x0000000000580d81 <+33993>:	cmpw   $0x0,0x53e6c3(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000580d89 <+34001>:	jne    0x580e63 <_PyEval_EvalFrameDefault+34219>
0x0000000000580d8f <+34007>:	mov    $0x0,%edx
0x0000000000580d94 <+34012>:	or     %edx,%eax
0x0000000000580d96 <+34014>:	or     %eax,%r12d
0x0000000000580d99 <+34017>:	movzbl %r12b,%eax
0x0000000000580d9d <+34021>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000580da5 <+34029>:	mov    %r15,%rbx
0x0000000000580da8 <+34032>:	mov    %r14,%r13
0x0000000000580dab <+34035>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000580db0 <+34040>:	mov    $0x7444e0,%ecx
0x0000000000580db5 <+34045>:	mov    $0xe15,%edx
0x0000000000580dba <+34050>:	mov    $0x74045c,%esi
0x0000000000580dbf <+34055>:	mov    $0x7408ff,%edi
0x0000000000580dc4 <+34060>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580dc9 <+34065>:	mov    $0x7444e0,%ecx
0x0000000000580dce <+34070>:	mov    $0xe1a,%edx
0x0000000000580dd3 <+34075>:	mov    $0x74045c,%esi
0x0000000000580dd8 <+34080>:	mov    $0x740b38,%edi
0x0000000000580ddd <+34085>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580de2 <+34090>:	mov    $0x7444e0,%ecx
0x0000000000580de7 <+34095>:	mov    $0xe1c,%edx
0x0000000000580dec <+34100>:	mov    $0x74045c,%esi
0x0000000000580df1 <+34105>:	mov    $0x6ebf98,%edi
0x0000000000580df6 <+34110>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580dfb <+34115>:	mov    $0x7444e0,%ecx
0x0000000000580e00 <+34120>:	mov    $0xe21,%edx
0x0000000000580e05 <+34125>:	mov    $0x74045c,%esi
0x0000000000580e0a <+34130>:	mov    $0x7408ec,%edi
0x0000000000580e0f <+34135>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580e14 <+34140>:	mov    $0x7444e0,%ecx
0x0000000000580e19 <+34145>:	mov    $0xe22,%edx
0x0000000000580e1e <+34150>:	mov    $0x74045c,%esi
0x0000000000580e23 <+34155>:	mov    $0x7408da,%edi
0x0000000000580e28 <+34160>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580e2d <+34165>:	call   0x573095 <_PyDictValues_AddToInsertionOrder>
0x0000000000580e32 <+34170>:	jmp    0x580d39 <_PyEval_EvalFrameDefault+33921>
0x0000000000580e37 <+34175>:	mov    %r14,%rdx
0x0000000000580e3a <+34178>:	mov    %r15,%rsi
0x0000000000580e3d <+34181>:	mov    %rbp,%rdi
0x0000000000580e40 <+34184>:	call   0x573f7b <lltrace_instruction>
0x0000000000580e45 <+34189>:	jmp    0x580d6d <_PyEval_EvalFrameDefault+33973>
0x0000000000580e4a <+34194>:	mov    $0x7444e0,%ecx
0x0000000000580e4f <+34199>:	mov    $0xe2d,%edx
0x0000000000580e54 <+34204>:	mov    $0x74045c,%esi
0x0000000000580e59 <+34209>:	mov    $0x742a50,%edi
0x0000000000580e5e <+34214>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000580e63 <+34219>:	mov    $0xffffffff,%edx
0x0000000000580e68 <+34224>:	jmp    0x580d94 <_PyEval_EvalFrameDefault+34012>
0x0000000000580e6d <+34229>:	lea    0x2(%r13),%r15
0x0000000000580e71 <+34233>:	mov    %r13,0x38(%rbp)
0x0000000000580e75 <+34237>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000580e7d <+34245>:	jne    0x581023 <_PyEval_EvalFrameDefault+34667>
0x0000000000580e83 <+34251>:	mov    -0x8(%rbx),%rax
0x0000000000580e87 <+34255>:	mov    %rax,0x48(%rsp)
0x0000000000580e8c <+34260>:	mov    0x8(%rax),%rcx
0x0000000000580e90 <+34264>:	movzwl 0x4(%r13),%eax
0x0000000000580e95 <+34269>:	movzwl 0x6(%r13),%edx
0x0000000000580e9a <+34274>:	shl    $0x10,%edx
0x0000000000580e9d <+34277>:	or     %edx,%eax
0x0000000000580e9f <+34279>:	je     0x58103c <_PyEval_EvalFrameDefault+34692>
0x0000000000580ea5 <+34285>:	cmp    %eax,0x180(%rcx)
0x0000000000580eab <+34291>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580eb1 <+34297>:	testb  $0x10,0xa8(%rcx)
0x0000000000580eb8 <+34304>:	je     0x581055 <_PyEval_EvalFrameDefault+34717>
0x0000000000580ebe <+34310>:	mov    0x48(%rsp),%rdi
0x0000000000580ec3 <+34315>:	call   0x5733a2 <_PyObject_ManagedDictPointer>
0x0000000000580ec8 <+34320>:	mov    (%rax),%r14
0x0000000000580ecb <+34323>:	test   %r14,%r14
0x0000000000580ece <+34326>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580ed4 <+34332>:	cmpq   $0x994540,0x8(%r14)
0x0000000000580edc <+34340>:	jne    0x58106e <_PyEval_EvalFrameDefault+34742>
0x0000000000580ee2 <+34346>:	movslq 0x8(%rsp),%rsi
0x0000000000580ee7 <+34351>:	mov    0x30(%rsp),%rdi
0x0000000000580eec <+34356>:	call   0x500470 <PyTuple_GetItem>
0x0000000000580ef1 <+34361>:	mov    %rax,%rdi
0x0000000000580ef4 <+34364>:	movzwl 0x8(%r13),%eax
0x0000000000580ef9 <+34369>:	mov    0x20(%r14),%rsi
0x0000000000580efd <+34373>:	cmp    0x18(%rsi),%rax
0x0000000000580f01 <+34377>:	jae    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580f07 <+34383>:	cmpb   $0x0,0xa(%rsi)
0x0000000000580f0b <+34387>:	je     0x5810b9 <_PyEval_EvalFrameDefault+34817>
0x0000000000580f11 <+34393>:	movzbl 0x9(%rsi),%ecx
0x0000000000580f15 <+34397>:	mov    $0x1,%edx
0x0000000000580f1a <+34402>:	shl    %cl,%rdx
0x0000000000580f1d <+34405>:	shl    $0x4,%rax
0x0000000000580f21 <+34409>:	add    %rdx,%rax
0x0000000000580f24 <+34412>:	lea    0x20(%rsi,%rax,1),%rcx
0x0000000000580f29 <+34417>:	cmp    %rdi,(%rcx)
0x0000000000580f2c <+34420>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580f32 <+34426>:	mov    0x8(%rcx),%rdx
0x0000000000580f36 <+34430>:	test   %rdx,%rdx
0x0000000000580f39 <+34433>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000580f3f <+34439>:	mov    0x20(%rbp),%rax
0x0000000000580f43 <+34443>:	movslq 0x4c(%rax),%rax
0x0000000000580f47 <+34447>:	lea    0x48(%rbp,%rax,8),%rsi
0x0000000000580f4c <+34452>:	mov    %rbx,%rax
0x0000000000580f4f <+34455>:	sub    %rsi,%rax
0x0000000000580f52 <+34458>:	sar    $0x3,%rax
0x0000000000580f56 <+34462>:	test   %eax,%eax
0x0000000000580f58 <+34464>:	jle    0x581087 <_PyEval_EvalFrameDefault+34767>
0x0000000000580f5e <+34470>:	lea    -0x8(%rbx),%rax
0x0000000000580f62 <+34474>:	sub    %rsi,%rax
0x0000000000580f65 <+34477>:	sar    $0x3,%rax
0x0000000000580f69 <+34481>:	test   %eax,%eax
0x0000000000580f6b <+34483>:	jle    0x5810a0 <_PyEval_EvalFrameDefault+34792>
0x0000000000580f71 <+34489>:	mov    -0x10(%rbx),%r12
0x0000000000580f75 <+34493>:	mov    %r12,0x8(%rcx)
0x0000000000580f79 <+34497>:	lea    -0x10(%rbx),%rbx
0x0000000000580f7d <+34501>:	mov    $0xe52,%esi
0x0000000000580f82 <+34506>:	mov    $0x74045c,%edi
0x0000000000580f87 <+34511>:	call   0x573c83 <Py_DECREF>
0x0000000000580f8c <+34516>:	cmpq   $0x0,-0x10(%r14)
0x0000000000580f91 <+34521>:	je     0x581156 <_PyEval_EvalFrameDefault+34974>
0x0000000000580f97 <+34527>:	mov    0x542ada(%rip),%rax        # 0xac3a78 <_pydict_global_version>
0x0000000000580f9e <+34534>:	add    $0x1,%rax
0x0000000000580fa2 <+34538>:	mov    %rax,0x542acf(%rip)        # 0xac3a78 <_pydict_global_version>
0x0000000000580fa9 <+34545>:	mov    %rax,0x18(%r14)
0x0000000000580fad <+34549>:	mov    0x48(%rsp),%rdx
0x0000000000580fb2 <+34554>:	mov    $0xe5a,%esi
0x0000000000580fb7 <+34559>:	mov    $0x74045c,%edi
0x0000000000580fbc <+34564>:	call   0x573c83 <Py_DECREF>
0x0000000000580fc1 <+34569>:	lea    0xa(%r13),%r14
0x0000000000580fc5 <+34573>:	movzwl 0xa(%r13),%r12d
0x0000000000580fca <+34578>:	mov    %r12d,%eax
0x0000000000580fcd <+34581>:	shr    $0x8,%ax
0x0000000000580fd1 <+34585>:	movzwl %ax,%eax
0x0000000000580fd4 <+34588>:	mov    %eax,0x8(%rsp)
0x0000000000580fd8 <+34592>:	cmpl   $0x0,0x14(%rsp)
0x0000000000580fdd <+34597>:	jne    0x581196 <_PyEval_EvalFrameDefault+35038>
0x0000000000580fe3 <+34603>:	movzbl 0xc0(%rsp),%eax
0x0000000000580feb <+34611>:	lea    -0x1(%rax),%edx
0x0000000000580fee <+34614>:	cmp    $0xfd,%dl
0x0000000000580ff1 <+34617>:	jbe    0x5811a9 <_PyEval_EvalFrameDefault+35057>
0x0000000000580ff7 <+34623>:	cmpw   $0x0,0x53e44d(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000580fff <+34631>:	jne    0x5811c2 <_PyEval_EvalFrameDefault+35082>
0x0000000000581005 <+34637>:	mov    $0x0,%edx
0x000000000058100a <+34642>:	or     %edx,%eax
0x000000000058100c <+34644>:	or     %eax,%r12d
0x000000000058100f <+34647>:	movzbl %r12b,%eax
0x0000000000581013 <+34651>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058101b <+34659>:	mov    %r14,%r13
0x000000000058101e <+34662>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000581023 <+34667>:	mov    $0x7444e0,%ecx
0x0000000000581028 <+34672>:	mov    $0xe31,%edx
0x000000000058102d <+34677>:	mov    $0x74045c,%esi
0x0000000000581032 <+34682>:	mov    $0x7408ff,%edi
0x0000000000581037 <+34687>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058103c <+34692>:	mov    $0x7444e0,%ecx
0x0000000000581041 <+34697>:	mov    $0xe36,%edx
0x0000000000581046 <+34702>:	mov    $0x74045c,%esi
0x000000000058104b <+34707>:	mov    $0x740b38,%edi
0x0000000000581050 <+34712>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581055 <+34717>:	mov    $0x7444e0,%ecx
0x000000000058105a <+34722>:	mov    $0xe38,%edx
0x000000000058105f <+34727>:	mov    $0x74045c,%esi
0x0000000000581064 <+34732>:	mov    $0x6ebf98,%edi
0x0000000000581069 <+34737>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058106e <+34742>:	mov    $0x7444e0,%ecx
0x0000000000581073 <+34747>:	mov    $0xe3b,%edx
0x0000000000581078 <+34752>:	mov    $0x74045c,%esi
0x000000000058107d <+34757>:	mov    $0x742e90,%edi
0x0000000000581082 <+34762>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581087 <+34767>:	mov    $0x7444e0,%ecx
0x000000000058108c <+34772>:	mov    $0xe45,%edx
0x0000000000581091 <+34777>:	mov    $0x74045c,%esi
0x0000000000581096 <+34782>:	mov    $0x7408ec,%edi
0x000000000058109b <+34787>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005810a0 <+34792>:	mov    $0x7444e0,%ecx
0x00000000005810a5 <+34797>:	mov    $0xe46,%edx
0x00000000005810aa <+34802>:	mov    $0x74045c,%esi
0x00000000005810af <+34807>:	mov    $0x7408da,%edi
0x00000000005810b4 <+34812>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005810b9 <+34817>:	movzbl 0x9(%rsi),%ecx
0x00000000005810bd <+34821>:	mov    $0x1,%edx
0x00000000005810c2 <+34826>:	shl    %cl,%rdx
0x00000000005810c5 <+34829>:	lea    (%rax,%rax,2),%rax
0x00000000005810c9 <+34833>:	lea    (%rdx,%rax,8),%rax
0x00000000005810cd <+34837>:	lea    0x20(%rsi,%rax,1),%rcx
0x00000000005810d2 <+34842>:	cmp    %rdi,0x8(%rcx)
0x00000000005810d6 <+34846>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005810dc <+34852>:	mov    0x10(%rcx),%rdx
0x00000000005810e0 <+34856>:	test   %rdx,%rdx
0x00000000005810e3 <+34859>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005810e9 <+34865>:	mov    0x20(%rbp),%rax
0x00000000005810ed <+34869>:	movslq 0x4c(%rax),%rax
0x00000000005810f1 <+34873>:	lea    0x48(%rbp,%rax,8),%rsi
0x00000000005810f6 <+34878>:	mov    %rbx,%rax
0x00000000005810f9 <+34881>:	sub    %rsi,%rax
0x00000000005810fc <+34884>:	sar    $0x3,%rax
0x0000000000581100 <+34888>:	test   %eax,%eax
0x0000000000581102 <+34890>:	jle    0x581124 <_PyEval_EvalFrameDefault+34924>
0x0000000000581104 <+34892>:	lea    -0x8(%rbx),%rax
0x0000000000581108 <+34896>:	sub    %rsi,%rax
0x000000000058110b <+34899>:	sar    $0x3,%rax
0x000000000058110f <+34903>:	test   %eax,%eax
0x0000000000581111 <+34905>:	jle    0x58113d <_PyEval_EvalFrameDefault+34949>
0x0000000000581113 <+34907>:	mov    -0x10(%rbx),%r12
0x0000000000581117 <+34911>:	mov    %r12,0x10(%rcx)
0x000000000058111b <+34915>:	lea    -0x10(%rbx),%rbx
0x000000000058111f <+34919>:	jmp    0x580f7d <_PyEval_EvalFrameDefault+34501>
0x0000000000581124 <+34924>:	mov    $0x7444e0,%ecx
0x0000000000581129 <+34929>:	mov    $0xe4e,%edx
0x000000000058112e <+34934>:	mov    $0x74045c,%esi
0x0000000000581133 <+34939>:	mov    $0x7408ec,%edi
0x0000000000581138 <+34944>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058113d <+34949>:	mov    $0x7444e0,%ecx
0x0000000000581142 <+34954>:	mov    $0xe4f,%edx
0x0000000000581147 <+34959>:	mov    $0x74045c,%esi
0x000000000058114c <+34964>:	mov    $0x7408da,%edi
0x0000000000581151 <+34969>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581156 <+34974>:	mov    %r12,%rdi
0x0000000000581159 <+34977>:	call   0x5ec266 <PyObject_IS_GC>
0x000000000058115e <+34982>:	test   %eax,%eax
0x0000000000581160 <+34984>:	je     0x580f97 <_PyEval_EvalFrameDefault+34527>
0x0000000000581166 <+34990>:	cmpq   $0x999820,0x8(%r12)
0x000000000058116f <+34999>:	je     0x581188 <_PyEval_EvalFrameDefault+35024>
0x0000000000581171 <+35001>:	mov    %r14,%rdx
0x0000000000581174 <+35004>:	mov    $0xe56,%esi
0x0000000000581179 <+35009>:	mov    $0x74045c,%edi
0x000000000058117e <+35014>:	call   0x5771ec <_PyObject_GC_TRACK>
0x0000000000581183 <+35019>:	jmp    0x580f97 <_PyEval_EvalFrameDefault+34527>
0x0000000000581188 <+35024>:	cmpq   $0x0,-0x10(%r12)
0x000000000058118e <+35030>:	je     0x580f97 <_PyEval_EvalFrameDefault+34527>
0x0000000000581194 <+35036>:	jmp    0x581171 <_PyEval_EvalFrameDefault+35001>
0x0000000000581196 <+35038>:	mov    %r14,%rdx
0x0000000000581199 <+35041>:	mov    %rbx,%rsi
0x000000000058119c <+35044>:	mov    %rbp,%rdi
0x000000000058119f <+35047>:	call   0x573f7b <lltrace_instruction>
0x00000000005811a4 <+35052>:	jmp    0x580fe3 <_PyEval_EvalFrameDefault+34603>
0x00000000005811a9 <+35057>:	mov    $0x7444e0,%ecx
0x00000000005811ae <+35062>:	mov    $0xe5c,%edx
0x00000000005811b3 <+35067>:	mov    $0x74045c,%esi
0x00000000005811b8 <+35072>:	mov    $0x742a50,%edi
0x00000000005811bd <+35077>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005811c2 <+35082>:	mov    $0xffffffff,%edx
0x00000000005811c7 <+35087>:	jmp    0x58100a <_PyEval_EvalFrameDefault+34642>
0x00000000005811cc <+35092>:	lea    0x2(%r13),%r15
0x00000000005811d0 <+35096>:	mov    %r13,0x38(%rbp)
0x00000000005811d4 <+35100>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005811dc <+35108>:	jne    0x5812cf <_PyEval_EvalFrameDefault+35351>
0x00000000005811e2 <+35114>:	mov    -0x8(%rbx),%r14
0x00000000005811e6 <+35118>:	mov    0x8(%r14),%rcx
0x00000000005811ea <+35122>:	movzwl 0x4(%r13),%eax
0x00000000005811ef <+35127>:	movzwl 0x6(%r13),%edx
0x00000000005811f4 <+35132>:	shl    $0x10,%edx
0x00000000005811f7 <+35135>:	or     %edx,%eax
0x00000000005811f9 <+35137>:	je     0x5812e8 <_PyEval_EvalFrameDefault+35376>
0x00000000005811ff <+35143>:	cmp    %eax,0x180(%rcx)
0x0000000000581205 <+35149>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058120b <+35155>:	movzwl 0x8(%r13),%edx
0x0000000000581210 <+35160>:	add    %r14,%rdx
0x0000000000581213 <+35163>:	mov    0x20(%rbp),%rax
0x0000000000581217 <+35167>:	movslq 0x4c(%rax),%rax
0x000000000058121b <+35171>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000581220 <+35176>:	mov    %rbx,%rax
0x0000000000581223 <+35179>:	sub    %rcx,%rax
0x0000000000581226 <+35182>:	sar    $0x3,%rax
0x000000000058122a <+35186>:	test   %eax,%eax
0x000000000058122c <+35188>:	jle    0x581301 <_PyEval_EvalFrameDefault+35401>
0x0000000000581232 <+35194>:	lea    -0x8(%rbx),%rax
0x0000000000581236 <+35198>:	sub    %rcx,%rax
0x0000000000581239 <+35201>:	sar    $0x3,%rax
0x000000000058123d <+35205>:	test   %eax,%eax
0x000000000058123f <+35207>:	jle    0x58131a <_PyEval_EvalFrameDefault+35426>
0x0000000000581245 <+35213>:	lea    -0x10(%rbx),%r15
0x0000000000581249 <+35217>:	mov    -0x10(%rbx),%rax
0x000000000058124d <+35221>:	mov    (%rdx),%rdi
0x0000000000581250 <+35224>:	mov    %rax,(%rdx)
0x0000000000581253 <+35227>:	call   0x573cb3 <Py_XDECREF>
0x0000000000581258 <+35232>:	mov    %r14,%rdx
0x000000000058125b <+35235>:	mov    $0xe6e,%esi
0x0000000000581260 <+35240>:	mov    $0x74045c,%edi
0x0000000000581265 <+35245>:	call   0x573c83 <Py_DECREF>
0x000000000058126a <+35250>:	lea    0xa(%r13),%r14
0x000000000058126e <+35254>:	movzwl 0xa(%r13),%r12d
0x0000000000581273 <+35259>:	mov    %r12d,%eax
0x0000000000581276 <+35262>:	shr    $0x8,%ax
0x000000000058127a <+35266>:	movzwl %ax,%eax
0x000000000058127d <+35269>:	mov    %eax,0x8(%rsp)
0x0000000000581281 <+35273>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581286 <+35278>:	jne    0x581333 <_PyEval_EvalFrameDefault+35451>
0x000000000058128c <+35284>:	movzbl 0xc0(%rsp),%eax
0x0000000000581294 <+35292>:	lea    -0x1(%rax),%edx
0x0000000000581297 <+35295>:	cmp    $0xfd,%dl
0x000000000058129a <+35298>:	jbe    0x581346 <_PyEval_EvalFrameDefault+35470>
0x00000000005812a0 <+35304>:	cmpw   $0x0,0x53e1a4(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005812a8 <+35312>:	jne    0x58135f <_PyEval_EvalFrameDefault+35495>
0x00000000005812ae <+35318>:	mov    $0x0,%edx
0x00000000005812b3 <+35323>:	or     %edx,%eax
0x00000000005812b5 <+35325>:	or     %eax,%r12d
0x00000000005812b8 <+35328>:	movzbl %r12b,%eax
0x00000000005812bc <+35332>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005812c4 <+35340>:	mov    %r15,%rbx
0x00000000005812c7 <+35343>:	mov    %r14,%r13
0x00000000005812ca <+35346>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005812cf <+35351>:	mov    $0x7444e0,%ecx
0x00000000005812d4 <+35356>:	mov    $0xe60,%edx
0x00000000005812d9 <+35361>:	mov    $0x74045c,%esi
0x00000000005812de <+35366>:	mov    $0x7408ff,%edi
0x00000000005812e3 <+35371>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005812e8 <+35376>:	mov    $0x7444e0,%ecx
0x00000000005812ed <+35381>:	mov    $0xe65,%edx
0x00000000005812f2 <+35386>:	mov    $0x74045c,%esi
0x00000000005812f7 <+35391>:	mov    $0x740b38,%edi
0x00000000005812fc <+35396>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581301 <+35401>:	mov    $0x7444e0,%ecx
0x0000000000581306 <+35406>:	mov    $0xe69,%edx
0x000000000058130b <+35411>:	mov    $0x74045c,%esi
0x0000000000581310 <+35416>:	mov    $0x7408ec,%edi
0x0000000000581315 <+35421>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058131a <+35426>:	mov    $0x7444e0,%ecx
0x000000000058131f <+35431>:	mov    $0xe6a,%edx
0x0000000000581324 <+35436>:	mov    $0x74045c,%esi
0x0000000000581329 <+35441>:	mov    $0x7408da,%edi
0x000000000058132e <+35446>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581333 <+35451>:	mov    %r14,%rdx
0x0000000000581336 <+35454>:	mov    %r15,%rsi
0x0000000000581339 <+35457>:	mov    %rbp,%rdi
0x000000000058133c <+35460>:	call   0x573f7b <lltrace_instruction>
0x0000000000581341 <+35465>:	jmp    0x58128c <_PyEval_EvalFrameDefault+35284>
0x0000000000581346 <+35470>:	mov    $0x7444e0,%ecx
0x000000000058134b <+35475>:	mov    $0xe70,%edx
0x0000000000581350 <+35480>:	mov    $0x74045c,%esi
0x0000000000581355 <+35485>:	mov    $0x742a50,%edi
0x000000000058135a <+35490>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058135f <+35495>:	mov    $0xffffffff,%edx
0x0000000000581364 <+35500>:	jmp    0x5812b3 <_PyEval_EvalFrameDefault+35323>
0x0000000000581369 <+35505>:	lea    0x2(%r13),%r15
0x000000000058136d <+35509>:	mov    %r13,0x38(%rbp)
0x0000000000581371 <+35513>:	cmpl   $0x5,0x8(%rsp)
0x0000000000581376 <+35518>:	jg     0x58143c <_PyEval_EvalFrameDefault+35716>
0x000000000058137c <+35524>:	mov    0x20(%rbp),%rax
0x0000000000581380 <+35528>:	movslq 0x4c(%rax),%rax
0x0000000000581384 <+35532>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000581389 <+35537>:	mov    %rbx,%rax
0x000000000058138c <+35540>:	sub    %rdx,%rax
0x000000000058138f <+35543>:	sar    $0x3,%rax
0x0000000000581393 <+35547>:	test   %eax,%eax
0x0000000000581395 <+35549>:	jle    0x581455 <_PyEval_EvalFrameDefault+35741>
0x000000000058139b <+35555>:	sub    $0x8,%rbx
0x000000000058139f <+35559>:	mov    (%rbx),%r12
0x00000000005813a2 <+35562>:	mov    -0x8(%rbx),%r13
0x00000000005813a6 <+35566>:	mov    0x8(%rsp),%edx
0x00000000005813aa <+35570>:	mov    %r12,%rsi
0x00000000005813ad <+35573>:	mov    %r13,%rdi
0x00000000005813b0 <+35576>:	call   0x4f1344 <PyObject_RichCompare>
0x00000000005813b5 <+35581>:	mov    %rax,%r14
0x00000000005813b8 <+35584>:	mov    %rax,-0x8(%rbx)
0x00000000005813bc <+35588>:	mov    %r13,%rdx
0x00000000005813bf <+35591>:	mov    $0xe7a,%esi
0x00000000005813c4 <+35596>:	mov    $0x74045c,%edi
0x00000000005813c9 <+35601>:	call   0x573c83 <Py_DECREF>
0x00000000005813ce <+35606>:	mov    %r12,%rdx
0x00000000005813d1 <+35609>:	mov    $0xe7b,%esi
0x00000000005813d6 <+35614>:	mov    $0x74045c,%edi
0x00000000005813db <+35619>:	call   0x573c83 <Py_DECREF>
0x00000000005813e0 <+35624>:	test   %r14,%r14
0x00000000005813e3 <+35627>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005813e9 <+35633>:	lea    0x4(%r15),%r13
0x00000000005813ed <+35637>:	movzwl 0x4(%r15),%r12d
0x00000000005813f2 <+35642>:	mov    %r12d,%eax
0x00000000005813f5 <+35645>:	shr    $0x8,%ax
0x00000000005813f9 <+35649>:	movzwl %ax,%eax
0x00000000005813fc <+35652>:	mov    %eax,0x8(%rsp)
0x0000000000581400 <+35656>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581405 <+35661>:	jne    0x58146e <_PyEval_EvalFrameDefault+35766>
0x0000000000581407 <+35663>:	movzbl 0xc0(%rsp),%eax
0x000000000058140f <+35671>:	lea    -0x1(%rax),%edx
0x0000000000581412 <+35674>:	cmp    $0xfd,%dl
0x0000000000581415 <+35677>:	jbe    0x58147e <_PyEval_EvalFrameDefault+35782>
0x0000000000581417 <+35679>:	cmpw   $0x0,0x53e02d(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058141f <+35687>:	jne    0x581497 <_PyEval_EvalFrameDefault+35807>
0x0000000000581421 <+35689>:	mov    $0x0,%edx
0x0000000000581426 <+35694>:	or     %edx,%eax
0x0000000000581428 <+35696>:	or     %eax,%r12d
0x000000000058142b <+35699>:	movzbl %r12b,%eax
0x000000000058142f <+35703>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000581437 <+35711>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058143c <+35716>:	mov    $0x7444e0,%ecx
0x0000000000581441 <+35721>:	mov    $0xe75,%edx
0x0000000000581446 <+35726>:	mov    $0x74045c,%esi
0x000000000058144b <+35731>:	mov    $0x740b60,%edi
0x0000000000581450 <+35736>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581455 <+35741>:	mov    $0x7444e0,%ecx
0x000000000058145a <+35746>:	mov    $0xe76,%edx
0x000000000058145f <+35751>:	mov    $0x74045c,%esi
0x0000000000581464 <+35756>:	mov    $0x7408da,%edi
0x0000000000581469 <+35761>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058146e <+35766>:	mov    %r13,%rdx
0x0000000000581471 <+35769>:	mov    %rbx,%rsi
0x0000000000581474 <+35772>:	mov    %rbp,%rdi
0x0000000000581477 <+35775>:	call   0x573f7b <lltrace_instruction>
0x000000000058147c <+35780>:	jmp    0x581407 <_PyEval_EvalFrameDefault+35663>
0x000000000058147e <+35782>:	mov    $0x7444e0,%ecx
0x0000000000581483 <+35787>:	mov    $0xe80,%edx
0x0000000000581488 <+35792>:	mov    $0x74045c,%esi
0x000000000058148d <+35797>:	mov    $0x742a50,%edi
0x0000000000581492 <+35802>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581497 <+35807>:	mov    $0xffffffff,%edx
0x000000000058149c <+35812>:	jmp    0x581426 <_PyEval_EvalFrameDefault+35694>
0x000000000058149e <+35814>:	lea    0x2(%r13),%r15
0x00000000005814a2 <+35818>:	mov    %r13,0x38(%rbp)
0x00000000005814a6 <+35822>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005814ae <+35830>:	jne    0x5814c8 <_PyEval_EvalFrameDefault+35856>
0x00000000005814b0 <+35832>:	movzwl 0x2(%r13),%eax
0x00000000005814b5 <+35837>:	cmp    $0xf,%ax
0x00000000005814b9 <+35841>:	jbe    0x5814e1 <_PyEval_EvalFrameDefault+35881>
0x00000000005814bb <+35843>:	sub    $0x10,%eax
0x00000000005814be <+35846>:	mov    %ax,0x2(%r13)
0x00000000005814c3 <+35851>:	jmp    0x581371 <_PyEval_EvalFrameDefault+35513>
0x00000000005814c8 <+35856>:	mov    $0x7444e0,%ecx
0x00000000005814cd <+35861>:	mov    $0xe84,%edx
0x00000000005814d2 <+35866>:	mov    $0x74045c,%esi
0x00000000005814d7 <+35871>:	mov    $0x7408ff,%edi
0x00000000005814dc <+35876>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005814e1 <+35881>:	mov    -0x8(%rbx),%rsi
0x00000000005814e5 <+35885>:	mov    -0x10(%rbx),%rdi
0x00000000005814e9 <+35889>:	mov    0x8(%rsp),%ecx
0x00000000005814ed <+35893>:	mov    %r13,%rdx
0x00000000005814f0 <+35896>:	call   0x5d04d0 <_Py_Specialize_CompareOp>
0x00000000005814f5 <+35901>:	movzwl 0x0(%r13),%r14d
0x00000000005814fa <+35906>:	cmpl   $0x0,0x14(%rsp)
0x00000000005814ff <+35911>:	jne    0x581530 <_PyEval_EvalFrameDefault+35960>
0x0000000000581501 <+35913>:	movzbl 0xc0(%rsp),%r12d
0x000000000058150a <+35922>:	cmpw   $0x0,0x53df3a(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000581512 <+35930>:	jne    0x581540 <_PyEval_EvalFrameDefault+35976>
0x0000000000581514 <+35932>:	mov    $0x0,%eax
0x0000000000581519 <+35937>:	or     %eax,%r12d
0x000000000058151c <+35940>:	or     %r14d,%r12d
0x000000000058151f <+35943>:	movzbl %r12b,%eax
0x0000000000581523 <+35947>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058152b <+35955>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000581530 <+35960>:	mov    %r13,%rdx
0x0000000000581533 <+35963>:	mov    %rbx,%rsi
0x0000000000581536 <+35966>:	mov    %rbp,%rdi
0x0000000000581539 <+35969>:	call   0x573f7b <lltrace_instruction>
0x000000000058153e <+35974>:	jmp    0x581501 <_PyEval_EvalFrameDefault+35913>
0x0000000000581540 <+35976>:	mov    $0xffffffff,%eax
0x0000000000581545 <+35981>:	jmp    0x581519 <_PyEval_EvalFrameDefault+35937>
0x0000000000581547 <+35983>:	lea    0x2(%r13),%r15
0x000000000058154b <+35987>:	mov    %r13,0x38(%rbp)
0x000000000058154f <+35991>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000581557 <+35999>:	jne    0x5816ba <_PyEval_EvalFrameDefault+36354>
0x000000000058155d <+36005>:	movzwl 0x4(%r13),%eax
0x0000000000581562 <+36010>:	mov    %eax,0x48(%rsp)
0x0000000000581566 <+36014>:	mov    -0x8(%rbx),%r14
0x000000000058156a <+36018>:	mov    -0x10(%rbx),%rdi
0x000000000058156e <+36022>:	cmpq   $0x990600,0x8(%rdi)
0x0000000000581576 <+36030>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058157c <+36036>:	cmpq   $0x990600,0x8(%r14)
0x0000000000581584 <+36044>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058158a <+36050>:	movsd  0x10(%rdi),%xmm1
0x000000000058158f <+36055>:	movsd  0x10(%r14),%xmm0
0x0000000000581595 <+36061>:	comisd %xmm0,%xmm1
0x0000000000581599 <+36065>:	seta   %dl
0x000000000058159c <+36068>:	movzbl %dl,%edx
0x000000000058159f <+36071>:	comisd %xmm1,%xmm0
0x00000000005815a3 <+36075>:	seta   %al
0x00000000005815a6 <+36078>:	movzbl %al,%eax
0x00000000005815a9 <+36081>:	sub    %eax,%edx
0x00000000005815ab <+36083>:	mov    %edx,0x50(%rsp)
0x00000000005815af <+36087>:	ucomisd %xmm1,%xmm1
0x00000000005815b3 <+36091>:	jp     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005815b9 <+36097>:	ucomisd %xmm0,%xmm0
0x00000000005815bd <+36101>:	jp     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005815c3 <+36107>:	lea    0x6(%r13),%r15
0x00000000005815c7 <+36111>:	movzwl 0x6(%r13),%r12d
0x00000000005815cc <+36116>:	mov    %r12d,%eax
0x00000000005815cf <+36119>:	shr    $0x8,%ax
0x00000000005815d3 <+36123>:	movzwl %ax,%eax
0x00000000005815d6 <+36126>:	mov    %eax,0x8(%rsp)
0x00000000005815da <+36130>:	mov    0x20(%rbp),%rax
0x00000000005815de <+36134>:	movslq 0x4c(%rax),%rax
0x00000000005815e2 <+36138>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005815e7 <+36143>:	mov    %rbx,%rax
0x00000000005815ea <+36146>:	sub    %rdx,%rax
0x00000000005815ed <+36149>:	sar    $0x3,%rax
0x00000000005815f1 <+36153>:	cmp    $0x1,%eax
0x00000000005815f4 <+36156>:	jle    0x5816d3 <_PyEval_EvalFrameDefault+36379>
0x00000000005815fa <+36162>:	sub    $0x10,%rbx
0x00000000005815fe <+36166>:	mov    $0x4c4c51,%esi
0x0000000000581603 <+36171>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000581608 <+36176>:	mov    $0x4c4c51,%esi
0x000000000058160d <+36181>:	mov    %r14,%rdi
0x0000000000581610 <+36184>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000581615 <+36189>:	cmp    $0x72,%r12b
0x0000000000581619 <+36193>:	setne  %dl
0x000000000058161c <+36196>:	cmp    $0xaf,%r12b
0x0000000000581620 <+36200>:	setne  %al
0x0000000000581623 <+36203>:	test   %al,%dl
0x0000000000581625 <+36205>:	je     0x581641 <_PyEval_EvalFrameDefault+36233>
0x0000000000581627 <+36207>:	cmp    $0x73,%r12b
0x000000000058162b <+36211>:	setne  %dl
0x000000000058162e <+36214>:	cmp    $0xb0,%r12b
0x0000000000581632 <+36218>:	setne  %al
0x0000000000581635 <+36221>:	test   %dl,%dl
0x0000000000581637 <+36223>:	je     0x581641 <_PyEval_EvalFrameDefault+36233>
0x0000000000581639 <+36225>:	test   %al,%al
0x000000000058163b <+36227>:	jne    0x5816ec <_PyEval_EvalFrameDefault+36404>
0x0000000000581641 <+36233>:	mov    0x50(%rsp),%ecx
0x0000000000581645 <+36237>:	add    $0x1,%ecx
0x0000000000581648 <+36240>:	mov    $0x9,%eax
0x000000000058164d <+36245>:	shl    %cl,%eax
0x000000000058164f <+36247>:	mov    0x48(%rsp),%ecx
0x0000000000581653 <+36251>:	and    %ecx,%eax
0x0000000000581655 <+36253>:	jne    0x581705 <_PyEval_EvalFrameDefault+36429>
0x000000000058165b <+36259>:	add    $0x8,%r13
0x000000000058165f <+36263>:	movzwl 0x0(%r13),%r12d
0x0000000000581664 <+36268>:	mov    %r12d,%eax
0x0000000000581667 <+36271>:	shr    $0x8,%ax
0x000000000058166b <+36275>:	movzwl %ax,%eax
0x000000000058166e <+36278>:	mov    %eax,0x8(%rsp)
0x0000000000581672 <+36282>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581677 <+36287>:	jne    0x581787 <_PyEval_EvalFrameDefault+36559>
0x000000000058167d <+36293>:	movzbl 0xc0(%rsp),%eax
0x0000000000581685 <+36301>:	lea    -0x1(%rax),%edx
0x0000000000581688 <+36304>:	cmp    $0xfd,%dl
0x000000000058168b <+36307>:	jbe    0x58179a <_PyEval_EvalFrameDefault+36578>
0x0000000000581691 <+36313>:	cmpw   $0x0,0x53ddb3(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000581699 <+36321>:	jne    0x5817b3 <_PyEval_EvalFrameDefault+36603>
0x000000000058169f <+36327>:	mov    $0x0,%edx
0x00000000005816a4 <+36332>:	or     %edx,%eax
0x00000000005816a6 <+36334>:	or     %eax,%r12d
0x00000000005816a9 <+36337>:	movzbl %r12b,%eax
0x00000000005816ad <+36341>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005816b5 <+36349>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005816ba <+36354>:	mov    $0x7444e0,%ecx
0x00000000005816bf <+36359>:	mov    $0xe95,%edx
0x00000000005816c4 <+36364>:	mov    $0x74045c,%esi
0x00000000005816c9 <+36369>:	mov    $0x7408ff,%edi
0x00000000005816ce <+36374>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005816d3 <+36379>:	mov    $0x7444e0,%ecx
0x00000000005816d8 <+36384>:	mov    $0xea5,%edx
0x00000000005816dd <+36389>:	mov    $0x74045c,%esi
0x00000000005816e2 <+36394>:	mov    $0x74092c,%edi
0x00000000005816e7 <+36399>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005816ec <+36404>:	mov    $0x7444e0,%ecx
0x00000000005816f1 <+36409>:	mov    $0xea8,%edx
0x00000000005816f6 <+36414>:	mov    $0x74045c,%esi
0x00000000005816fb <+36419>:	mov    $0x742eb8,%edi
0x0000000000581700 <+36424>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581705 <+36429>:	cmp    $0x7,%eax
0x0000000000581708 <+36432>:	jle    0x581752 <_PyEval_EvalFrameDefault+36506>
0x000000000058170a <+36434>:	lea    0x51(%r12),%eax
0x000000000058170f <+36439>:	cmp    $0x1,%al
0x0000000000581711 <+36441>:	ja     0x581739 <_PyEval_EvalFrameDefault+36481>
0x0000000000581713 <+36443>:	mov    $0x1,%eax
0x0000000000581718 <+36448>:	mov    0x8(%rsp),%ecx
0x000000000058171c <+36452>:	sub    %ecx,%eax
0x000000000058171e <+36454>:	cltq
0x0000000000581720 <+36456>:	lea    (%r15,%rax,2),%r13
0x0000000000581724 <+36460>:	mov    0x28(%rsp),%rax
0x0000000000581729 <+36465>:	mov    0x64(%rax),%eax
0x000000000058172c <+36468>:	test   %eax,%eax
0x000000000058172e <+36470>:	je     0x58165f <_PyEval_EvalFrameDefault+36263>
0x0000000000581734 <+36476>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000581739 <+36481>:	mov    $0x7444e0,%ecx
0x000000000058173e <+36486>:	mov    $0xeb1,%edx
0x0000000000581743 <+36491>:	mov    $0x74045c,%esi
0x0000000000581748 <+36496>:	mov    $0x742f58,%edi
0x000000000058174d <+36501>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581752 <+36506>:	sub    $0x72,%r12d
0x0000000000581756 <+36510>:	cmp    $0x1,%r12b
0x000000000058175a <+36514>:	ja     0x58176e <_PyEval_EvalFrameDefault+36534>
0x000000000058175c <+36516>:	mov    0x8(%rsp),%eax
0x0000000000581760 <+36520>:	add    $0x1,%eax
0x0000000000581763 <+36523>:	cltq
0x0000000000581765 <+36525>:	lea    (%r15,%rax,2),%r13
0x0000000000581769 <+36529>:	jmp    0x58165f <_PyEval_EvalFrameDefault+36263>
0x000000000058176e <+36534>:	mov    $0x7444e0,%ecx
0x0000000000581773 <+36539>:	mov    $0xeb7,%edx
0x0000000000581778 <+36544>:	mov    $0x74045c,%esi
0x000000000058177d <+36549>:	mov    $0x742fa8,%edi
0x0000000000581782 <+36554>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581787 <+36559>:	mov    %r13,%rdx
0x000000000058178a <+36562>:	mov    %rbx,%rsi
0x000000000058178d <+36565>:	mov    %rbp,%rdi
0x0000000000581790 <+36568>:	call   0x573f7b <lltrace_instruction>
0x0000000000581795 <+36573>:	jmp    0x58167d <_PyEval_EvalFrameDefault+36293>
0x000000000058179a <+36578>:	mov    $0x7444e0,%ecx
0x000000000058179f <+36583>:	mov    $0xebb,%edx
0x00000000005817a4 <+36588>:	mov    $0x74045c,%esi
0x00000000005817a9 <+36593>:	mov    $0x742a50,%edi
0x00000000005817ae <+36598>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005817b3 <+36603>:	mov    $0xffffffff,%edx
0x00000000005817b8 <+36608>:	jmp    0x5816a4 <_PyEval_EvalFrameDefault+36332>
0x00000000005817bd <+36613>:	lea    0x2(%r13),%r15
0x00000000005817c1 <+36617>:	mov    %r13,0x38(%rbp)
0x00000000005817c5 <+36621>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005817cd <+36629>:	jne    0x581965 <_PyEval_EvalFrameDefault+37037>
0x00000000005817d3 <+36635>:	movzwl 0x4(%r13),%eax
0x00000000005817d8 <+36640>:	mov    %eax,0x48(%rsp)
0x00000000005817dc <+36644>:	mov    -0x8(%rbx),%r14
0x00000000005817e0 <+36648>:	mov    -0x10(%rbx),%rdi
0x00000000005817e4 <+36652>:	cmpq   $0x992c20,0x8(%rdi)
0x00000000005817ec <+36660>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005817f2 <+36666>:	cmpq   $0x992c20,0x8(%r14)
0x00000000005817fa <+36674>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000581800 <+36680>:	mov    0x10(%rdi),%rdx
0x0000000000581804 <+36684>:	lea    0x1(%rdx),%rax
0x0000000000581808 <+36688>:	cmp    $0x2,%rax
0x000000000058180c <+36692>:	ja     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000581812 <+36698>:	mov    0x10(%r14),%rax
0x0000000000581816 <+36702>:	lea    0x1(%rax),%rcx
0x000000000058181a <+36706>:	cmp    $0x2,%rcx
0x000000000058181e <+36710>:	ja     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000581824 <+36716>:	test   %rdx,%rdx
0x0000000000581827 <+36719>:	js     0x58197e <_PyEval_EvalFrameDefault+37062>
0x000000000058182d <+36725>:	cmp    $0x1,%rdx
0x0000000000581831 <+36729>:	jg     0x581988 <_PyEval_EvalFrameDefault+37072>
0x0000000000581837 <+36735>:	test   %rax,%rax
0x000000000058183a <+36738>:	js     0x5819a1 <_PyEval_EvalFrameDefault+37097>
0x0000000000581840 <+36744>:	cmp    $0x1,%rax
0x0000000000581844 <+36748>:	jg     0x581988 <_PyEval_EvalFrameDefault+37072>
0x000000000058184a <+36754>:	mov    0x18(%rdi),%ecx
0x000000000058184d <+36757>:	imul   %rdx,%rcx
0x0000000000581851 <+36761>:	mov    0x18(%r14),%edx
0x0000000000581855 <+36765>:	imul   %rdx,%rax
0x0000000000581859 <+36769>:	cmp    %rax,%rcx
0x000000000058185c <+36772>:	setg   %dl
0x000000000058185f <+36775>:	movzbl %dl,%edx
0x0000000000581862 <+36778>:	setl   %al
0x0000000000581865 <+36781>:	movzbl %al,%eax
0x0000000000581868 <+36784>:	sub    %eax,%edx
0x000000000058186a <+36786>:	mov    %edx,0x50(%rsp)
0x000000000058186e <+36790>:	lea    0x6(%r13),%r15
0x0000000000581872 <+36794>:	movzwl 0x6(%r13),%r12d
0x0000000000581877 <+36799>:	mov    %r12d,%eax
0x000000000058187a <+36802>:	shr    $0x8,%ax
0x000000000058187e <+36806>:	movzwl %ax,%eax
0x0000000000581881 <+36809>:	mov    %eax,0x8(%rsp)
0x0000000000581885 <+36813>:	mov    0x20(%rbp),%rax
0x0000000000581889 <+36817>:	movslq 0x4c(%rax),%rax
0x000000000058188d <+36821>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000581892 <+36826>:	mov    %rbx,%rax
0x0000000000581895 <+36829>:	sub    %rdx,%rax
0x0000000000581898 <+36832>:	sar    $0x3,%rax
0x000000000058189c <+36836>:	cmp    $0x1,%eax
0x000000000058189f <+36839>:	jle    0x5819ad <_PyEval_EvalFrameDefault+37109>
0x00000000005818a5 <+36845>:	sub    $0x10,%rbx
0x00000000005818a9 <+36849>:	mov    $0x4f477b,%esi
0x00000000005818ae <+36854>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x00000000005818b3 <+36859>:	mov    $0x4f477b,%esi
0x00000000005818b8 <+36864>:	mov    %r14,%rdi
0x00000000005818bb <+36867>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x00000000005818c0 <+36872>:	cmp    $0x72,%r12b
0x00000000005818c4 <+36876>:	setne  %dl
0x00000000005818c7 <+36879>:	cmp    $0xaf,%r12b
0x00000000005818cb <+36883>:	setne  %al
0x00000000005818ce <+36886>:	test   %al,%dl
0x00000000005818d0 <+36888>:	je     0x5818ec <_PyEval_EvalFrameDefault+36916>
0x00000000005818d2 <+36890>:	cmp    $0x73,%r12b
0x00000000005818d6 <+36894>:	setne  %dl
0x00000000005818d9 <+36897>:	cmp    $0xb0,%r12b
0x00000000005818dd <+36901>:	setne  %al
0x00000000005818e0 <+36904>:	test   %dl,%dl
0x00000000005818e2 <+36906>:	je     0x5818ec <_PyEval_EvalFrameDefault+36916>
0x00000000005818e4 <+36908>:	test   %al,%al
0x00000000005818e6 <+36910>:	jne    0x5819c6 <_PyEval_EvalFrameDefault+37134>
0x00000000005818ec <+36916>:	mov    0x50(%rsp),%ecx
0x00000000005818f0 <+36920>:	add    $0x1,%ecx
0x00000000005818f3 <+36923>:	mov    $0x9,%eax
0x00000000005818f8 <+36928>:	shl    %cl,%eax
0x00000000005818fa <+36930>:	mov    0x48(%rsp),%ecx
0x00000000005818fe <+36934>:	and    %ecx,%eax
0x0000000000581900 <+36936>:	jne    0x5819df <_PyEval_EvalFrameDefault+37159>
0x0000000000581906 <+36942>:	add    $0x8,%r13
0x000000000058190a <+36946>:	movzwl 0x0(%r13),%r12d
0x000000000058190f <+36951>:	mov    %r12d,%eax
0x0000000000581912 <+36954>:	shr    $0x8,%ax
0x0000000000581916 <+36958>:	movzwl %ax,%eax
0x0000000000581919 <+36961>:	mov    %eax,0x8(%rsp)
0x000000000058191d <+36965>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581922 <+36970>:	jne    0x581a61 <_PyEval_EvalFrameDefault+37289>
0x0000000000581928 <+36976>:	movzbl 0xc0(%rsp),%eax
0x0000000000581930 <+36984>:	lea    -0x1(%rax),%edx
0x0000000000581933 <+36987>:	cmp    $0xfd,%dl
0x0000000000581936 <+36990>:	jbe    0x581a74 <_PyEval_EvalFrameDefault+37308>
0x000000000058193c <+36996>:	cmpw   $0x0,0x53db08(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000581944 <+37004>:	jne    0x581a8d <_PyEval_EvalFrameDefault+37333>
0x000000000058194a <+37010>:	mov    $0x0,%edx
0x000000000058194f <+37015>:	or     %edx,%eax
0x0000000000581951 <+37017>:	or     %eax,%r12d
0x0000000000581954 <+37020>:	movzbl %r12b,%eax
0x0000000000581958 <+37024>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000581960 <+37032>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000581965 <+37037>:	mov    $0x7444e0,%ecx
0x000000000058196a <+37042>:	mov    $0xebf,%edx
0x000000000058196f <+37047>:	mov    $0x74045c,%esi
0x0000000000581974 <+37052>:	mov    $0x7408ff,%edi
0x0000000000581979 <+37057>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058197e <+37062>:	cmp    $0xffffffffffffffff,%rdx
0x0000000000581982 <+37066>:	jge    0x581837 <_PyEval_EvalFrameDefault+36735>
0x0000000000581988 <+37072>:	mov    $0x7444e0,%ecx
0x000000000058198d <+37077>:	mov    $0xeca,%edx
0x0000000000581992 <+37082>:	mov    $0x74045c,%esi
0x0000000000581997 <+37087>:	mov    $0x742ff8,%edi
0x000000000058199c <+37092>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005819a1 <+37097>:	cmp    $0xffffffffffffffff,%rax
0x00000000005819a5 <+37101>:	jge    0x58184a <_PyEval_EvalFrameDefault+36754>
0x00000000005819ab <+37107>:	jmp    0x581988 <_PyEval_EvalFrameDefault+37072>
0x00000000005819ad <+37109>:	mov    $0x7444e0,%ecx
0x00000000005819b2 <+37114>:	mov    $0xed0,%edx
0x00000000005819b7 <+37119>:	mov    $0x74045c,%esi
0x00000000005819bc <+37124>:	mov    $0x74092c,%edi
0x00000000005819c1 <+37129>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005819c6 <+37134>:	mov    $0x7444e0,%ecx
0x00000000005819cb <+37139>:	mov    $0xed3,%edx
0x00000000005819d0 <+37144>:	mov    $0x74045c,%esi
0x00000000005819d5 <+37149>:	mov    $0x742eb8,%edi
0x00000000005819da <+37154>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005819df <+37159>:	cmp    $0x7,%eax
0x00000000005819e2 <+37162>:	jle    0x581a2c <_PyEval_EvalFrameDefault+37236>
0x00000000005819e4 <+37164>:	lea    0x51(%r12),%eax
0x00000000005819e9 <+37169>:	cmp    $0x1,%al
0x00000000005819eb <+37171>:	ja     0x581a13 <_PyEval_EvalFrameDefault+37211>
0x00000000005819ed <+37173>:	mov    $0x1,%eax
0x00000000005819f2 <+37178>:	mov    0x8(%rsp),%ecx
0x00000000005819f6 <+37182>:	sub    %ecx,%eax
0x00000000005819f8 <+37184>:	cltq
0x00000000005819fa <+37186>:	lea    (%r15,%rax,2),%r13
0x00000000005819fe <+37190>:	mov    0x28(%rsp),%rax
0x0000000000581a03 <+37195>:	mov    0x64(%rax),%eax
0x0000000000581a06 <+37198>:	test   %eax,%eax
0x0000000000581a08 <+37200>:	je     0x58190a <_PyEval_EvalFrameDefault+36946>
0x0000000000581a0e <+37206>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000581a13 <+37211>:	mov    $0x7444e0,%ecx
0x0000000000581a18 <+37216>:	mov    $0xedc,%edx
0x0000000000581a1d <+37221>:	mov    $0x74045c,%esi
0x0000000000581a22 <+37226>:	mov    $0x742f58,%edi
0x0000000000581a27 <+37231>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581a2c <+37236>:	sub    $0x72,%r12d
0x0000000000581a30 <+37240>:	cmp    $0x1,%r12b
0x0000000000581a34 <+37244>:	ja     0x581a48 <_PyEval_EvalFrameDefault+37264>
0x0000000000581a36 <+37246>:	mov    0x8(%rsp),%eax
0x0000000000581a3a <+37250>:	add    $0x1,%eax
0x0000000000581a3d <+37253>:	cltq
0x0000000000581a3f <+37255>:	lea    (%r15,%rax,2),%r13
0x0000000000581a43 <+37259>:	jmp    0x58190a <_PyEval_EvalFrameDefault+36946>
0x0000000000581a48 <+37264>:	mov    $0x7444e0,%ecx
0x0000000000581a4d <+37269>:	mov    $0xee2,%edx
0x0000000000581a52 <+37274>:	mov    $0x74045c,%esi
0x0000000000581a57 <+37279>:	mov    $0x742fa8,%edi
0x0000000000581a5c <+37284>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581a61 <+37289>:	mov    %r13,%rdx
0x0000000000581a64 <+37292>:	mov    %rbx,%rsi
0x0000000000581a67 <+37295>:	mov    %rbp,%rdi
0x0000000000581a6a <+37298>:	call   0x573f7b <lltrace_instruction>
0x0000000000581a6f <+37303>:	jmp    0x581928 <_PyEval_EvalFrameDefault+36976>
0x0000000000581a74 <+37308>:	mov    $0x7444e0,%ecx
0x0000000000581a79 <+37313>:	mov    $0xee6,%edx
0x0000000000581a7e <+37318>:	mov    $0x74045c,%esi
0x0000000000581a83 <+37323>:	mov    $0x742a50,%edi
0x0000000000581a88 <+37328>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581a8d <+37333>:	mov    $0xffffffff,%edx
0x0000000000581a92 <+37338>:	jmp    0x58194f <_PyEval_EvalFrameDefault+37015>
0x0000000000581a97 <+37343>:	lea    0x2(%r13),%r15
0x0000000000581a9b <+37347>:	mov    %r13,0x38(%rbp)
0x0000000000581a9f <+37351>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000581aa7 <+37359>:	jne    0x581c11 <_PyEval_EvalFrameDefault+37721>
0x0000000000581aad <+37365>:	movzwl 0x4(%r13),%eax
0x0000000000581ab2 <+37370>:	mov    %eax,0x58(%rsp)
0x0000000000581ab6 <+37374>:	mov    -0x8(%rbx),%rax
0x0000000000581aba <+37378>:	mov    %rax,0x48(%rsp)
0x0000000000581abf <+37383>:	mov    -0x10(%rbx),%r14
0x0000000000581ac3 <+37387>:	cmpq   $0x99c300,0x8(%r14)
0x0000000000581acb <+37395>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000581ad1 <+37401>:	cmpq   $0x99c300,0x8(%rax)
0x0000000000581ad9 <+37409>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000581adf <+37415>:	mov    %rax,%rsi
0x0000000000581ae2 <+37418>:	mov    %r14,%rdi
0x0000000000581ae5 <+37421>:	call   0x532b87 <_PyUnicode_Equal>
0x0000000000581aea <+37426>:	mov    %eax,0x50(%rsp)
0x0000000000581aee <+37430>:	test   %eax,%eax
0x0000000000581af0 <+37432>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000581af6 <+37438>:	mov    0x8(%rsp),%eax
0x0000000000581afa <+37442>:	sub    $0x2,%eax
0x0000000000581afd <+37445>:	cmp    $0x1,%eax
0x0000000000581b00 <+37448>:	ja     0x581c2a <_PyEval_EvalFrameDefault+37746>
0x0000000000581b06 <+37454>:	lea    0x6(%r13),%r15
0x0000000000581b0a <+37458>:	movzwl 0x6(%r13),%r12d
0x0000000000581b0f <+37463>:	mov    %r12d,%eax
0x0000000000581b12 <+37466>:	shr    $0x8,%ax
0x0000000000581b16 <+37470>:	movzwl %ax,%eax
0x0000000000581b19 <+37473>:	mov    %eax,0x8(%rsp)
0x0000000000581b1d <+37477>:	cmp    $0x72,%r12b
0x0000000000581b21 <+37481>:	setne  %dl
0x0000000000581b24 <+37484>:	cmp    $0xaf,%r12b
0x0000000000581b28 <+37488>:	setne  %al
0x0000000000581b2b <+37491>:	test   %al,%dl
0x0000000000581b2d <+37493>:	je     0x581b49 <_PyEval_EvalFrameDefault+37521>
0x0000000000581b2f <+37495>:	cmp    $0x73,%r12b
0x0000000000581b33 <+37499>:	setne  %dl
0x0000000000581b36 <+37502>:	cmp    $0xb0,%r12b
0x0000000000581b3a <+37506>:	setne  %al
0x0000000000581b3d <+37509>:	test   %dl,%dl
0x0000000000581b3f <+37511>:	je     0x581b49 <_PyEval_EvalFrameDefault+37521>
0x0000000000581b41 <+37513>:	test   %al,%al
0x0000000000581b43 <+37515>:	jne    0x581c43 <_PyEval_EvalFrameDefault+37771>
0x0000000000581b49 <+37521>:	mov    0x20(%rbp),%rax
0x0000000000581b4d <+37525>:	movslq 0x4c(%rax),%rax
0x0000000000581b51 <+37529>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000581b56 <+37534>:	mov    %rbx,%rax
0x0000000000581b59 <+37537>:	sub    %rdx,%rax
0x0000000000581b5c <+37540>:	sar    $0x3,%rax
0x0000000000581b60 <+37544>:	cmp    $0x1,%eax
0x0000000000581b63 <+37547>:	jle    0x581c5c <_PyEval_EvalFrameDefault+37796>
0x0000000000581b69 <+37553>:	sub    $0x10,%rbx
0x0000000000581b6d <+37557>:	mov    $0x53c819,%esi
0x0000000000581b72 <+37562>:	mov    %r14,%rdi
0x0000000000581b75 <+37565>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000581b7a <+37570>:	mov    $0x53c819,%esi
0x0000000000581b7f <+37575>:	mov    0x48(%rsp),%rdi
0x0000000000581b84 <+37580>:	call   0x5730f9 <_Py_DECREF_SPECIALIZED>
0x0000000000581b89 <+37585>:	cmpl   $0x1,0x50(%rsp)
0x0000000000581b8e <+37590>:	ja     0x581c75 <_PyEval_EvalFrameDefault+37821>
0x0000000000581b94 <+37596>:	mov    $0x2,%ecx
0x0000000000581b99 <+37601>:	mov    0x50(%rsp),%eax
0x0000000000581b9d <+37605>:	sub    %eax,%ecx
0x0000000000581b9f <+37607>:	mov    $0x9,%eax
0x0000000000581ba4 <+37612>:	shl    %cl,%eax
0x0000000000581ba6 <+37614>:	mov    0x58(%rsp),%ecx
0x0000000000581baa <+37618>:	and    %ecx,%eax
0x0000000000581bac <+37620>:	jne    0x581c8e <_PyEval_EvalFrameDefault+37846>
0x0000000000581bb2 <+37626>:	add    $0x8,%r13
0x0000000000581bb6 <+37630>:	movzwl 0x0(%r13),%r12d
0x0000000000581bbb <+37635>:	mov    %r12d,%eax
0x0000000000581bbe <+37638>:	shr    $0x8,%ax
0x0000000000581bc2 <+37642>:	movzwl %ax,%eax
0x0000000000581bc5 <+37645>:	mov    %eax,0x8(%rsp)
0x0000000000581bc9 <+37649>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581bce <+37654>:	jne    0x581d10 <_PyEval_EvalFrameDefault+37976>
0x0000000000581bd4 <+37660>:	movzbl 0xc0(%rsp),%eax
0x0000000000581bdc <+37668>:	lea    -0x1(%rax),%edx
0x0000000000581bdf <+37671>:	cmp    $0xfd,%dl
0x0000000000581be2 <+37674>:	jbe    0x581d23 <_PyEval_EvalFrameDefault+37995>
0x0000000000581be8 <+37680>:	cmpw   $0x0,0x53d85c(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000581bf0 <+37688>:	jne    0x581d3c <_PyEval_EvalFrameDefault+38020>
0x0000000000581bf6 <+37694>:	mov    $0x0,%edx
0x0000000000581bfb <+37699>:	or     %edx,%eax
0x0000000000581bfd <+37701>:	or     %eax,%r12d
0x0000000000581c00 <+37704>:	movzbl %r12b,%eax
0x0000000000581c04 <+37708>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000581c0c <+37716>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000581c11 <+37721>:	mov    $0x7444e0,%ecx
0x0000000000581c16 <+37726>:	mov    $0xeea,%edx
0x0000000000581c1b <+37731>:	mov    $0x74045c,%esi
0x0000000000581c20 <+37736>:	mov    $0x7408ff,%edi
0x0000000000581c25 <+37741>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581c2a <+37746>:	mov    $0x7444e0,%ecx
0x0000000000581c2f <+37751>:	mov    $0xef7,%edx
0x0000000000581c34 <+37756>:	mov    $0x74045c,%esi
0x0000000000581c39 <+37761>:	mov    $0x743038,%edi
0x0000000000581c3e <+37766>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581c43 <+37771>:	mov    $0x7444e0,%ecx
0x0000000000581c48 <+37776>:	mov    $0xefa,%edx
0x0000000000581c4d <+37781>:	mov    $0x74045c,%esi
0x0000000000581c52 <+37786>:	mov    $0x742eb8,%edi
0x0000000000581c57 <+37791>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581c5c <+37796>:	mov    $0x7444e0,%ecx
0x0000000000581c61 <+37801>:	mov    $0xefe,%edx
0x0000000000581c66 <+37806>:	mov    $0x74045c,%esi
0x0000000000581c6b <+37811>:	mov    $0x74092c,%edi
0x0000000000581c70 <+37816>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581c75 <+37821>:	mov    $0x7444e0,%ecx
0x0000000000581c7a <+37826>:	mov    $0xf01,%edx
0x0000000000581c7f <+37831>:	mov    $0x74045c,%esi
0x0000000000581c84 <+37836>:	mov    $0x740b6f,%edi
0x0000000000581c89 <+37841>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581c8e <+37846>:	cmp    $0x7,%eax
0x0000000000581c91 <+37849>:	jle    0x581cdb <_PyEval_EvalFrameDefault+37923>
0x0000000000581c93 <+37851>:	lea    0x51(%r12),%eax
0x0000000000581c98 <+37856>:	cmp    $0x1,%al
0x0000000000581c9a <+37858>:	ja     0x581cc2 <_PyEval_EvalFrameDefault+37898>
0x0000000000581c9c <+37860>:	mov    $0x1,%eax
0x0000000000581ca1 <+37865>:	mov    0x8(%rsp),%ecx
0x0000000000581ca5 <+37869>:	sub    %ecx,%eax
0x0000000000581ca7 <+37871>:	cltq
0x0000000000581ca9 <+37873>:	lea    (%r15,%rax,2),%r13
0x0000000000581cad <+37877>:	mov    0x28(%rsp),%rax
0x0000000000581cb2 <+37882>:	mov    0x64(%rax),%eax
0x0000000000581cb5 <+37885>:	test   %eax,%eax
0x0000000000581cb7 <+37887>:	je     0x581bb6 <_PyEval_EvalFrameDefault+37630>
0x0000000000581cbd <+37893>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000581cc2 <+37898>:	mov    $0x7444e0,%ecx
0x0000000000581cc7 <+37903>:	mov    $0xf08,%edx
0x0000000000581ccc <+37908>:	mov    $0x74045c,%esi
0x0000000000581cd1 <+37913>:	mov    $0x742f58,%edi
0x0000000000581cd6 <+37918>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581cdb <+37923>:	sub    $0x72,%r12d
0x0000000000581cdf <+37927>:	cmp    $0x1,%r12b
0x0000000000581ce3 <+37931>:	ja     0x581cf7 <_PyEval_EvalFrameDefault+37951>
0x0000000000581ce5 <+37933>:	mov    0x8(%rsp),%eax
0x0000000000581ce9 <+37937>:	add    $0x1,%eax
0x0000000000581cec <+37940>:	cltq
0x0000000000581cee <+37942>:	lea    (%r15,%rax,2),%r13
0x0000000000581cf2 <+37946>:	jmp    0x581bb6 <_PyEval_EvalFrameDefault+37630>
0x0000000000581cf7 <+37951>:	mov    $0x7444e0,%ecx
0x0000000000581cfc <+37956>:	mov    $0xf0e,%edx
0x0000000000581d01 <+37961>:	mov    $0x74045c,%esi
0x0000000000581d06 <+37966>:	mov    $0x742fa8,%edi
0x0000000000581d0b <+37971>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581d10 <+37976>:	mov    %r13,%rdx
0x0000000000581d13 <+37979>:	mov    %rbx,%rsi
0x0000000000581d16 <+37982>:	mov    %rbp,%rdi
0x0000000000581d19 <+37985>:	call   0x573f7b <lltrace_instruction>
0x0000000000581d1e <+37990>:	jmp    0x581bd4 <_PyEval_EvalFrameDefault+37660>
0x0000000000581d23 <+37995>:	mov    $0x7444e0,%ecx
0x0000000000581d28 <+38000>:	mov    $0xf12,%edx
0x0000000000581d2d <+38005>:	mov    $0x74045c,%esi
0x0000000000581d32 <+38010>:	mov    $0x742a50,%edi
0x0000000000581d37 <+38015>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581d3c <+38020>:	mov    $0xffffffff,%edx
0x0000000000581d41 <+38025>:	jmp    0x581bfb <_PyEval_EvalFrameDefault+37699>
0x0000000000581d46 <+38030>:	lea    0x2(%r13),%r14
0x0000000000581d4a <+38034>:	mov    %r13,0x38(%rbp)
0x0000000000581d4e <+38038>:	mov    0x20(%rbp),%rax
0x0000000000581d52 <+38042>:	movslq 0x4c(%rax),%rax
0x0000000000581d56 <+38046>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000581d5b <+38051>:	mov    %rbx,%rax
0x0000000000581d5e <+38054>:	sub    %rdx,%rax
0x0000000000581d61 <+38057>:	sar    $0x3,%rax
0x0000000000581d65 <+38061>:	test   %eax,%eax
0x0000000000581d67 <+38063>:	jle    0x581e1d <_PyEval_EvalFrameDefault+38245>
0x0000000000581d6d <+38069>:	sub    $0x8,%rbx
0x0000000000581d71 <+38073>:	mov    (%rbx),%r12
0x0000000000581d74 <+38076>:	mov    -0x8(%rbx),%rcx
0x0000000000581d78 <+38080>:	cmp    %rcx,%r12
0x0000000000581d7b <+38083>:	sete   %al
0x0000000000581d7e <+38086>:	movzbl %al,%eax
0x0000000000581d81 <+38089>:	mov    0x8(%rsp),%esi
0x0000000000581d85 <+38093>:	cmp    %esi,%eax
0x0000000000581d87 <+38095>:	je     0x581e36 <_PyEval_EvalFrameDefault+38270>
0x0000000000581d8d <+38101>:	mov    $0x982300,%eax
0x0000000000581d92 <+38106>:	addq   $0x1,0x541cee(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000581d9a <+38114>:	mov    (%rax),%rsi
0x0000000000581d9d <+38117>:	lea    0x1(%rsi),%rdx
0x0000000000581da1 <+38121>:	mov    %rdx,(%rax)
0x0000000000581da4 <+38124>:	mov    %rax,-0x8(%rbx)
0x0000000000581da8 <+38128>:	mov    %rcx,%rdx
0x0000000000581dab <+38131>:	mov    $0xf1c,%esi
0x0000000000581db0 <+38136>:	mov    $0x74045c,%edi
0x0000000000581db5 <+38141>:	call   0x573c83 <Py_DECREF>
0x0000000000581dba <+38146>:	mov    %r12,%rdx
0x0000000000581dbd <+38149>:	mov    $0xf1d,%esi
0x0000000000581dc2 <+38154>:	mov    $0x74045c,%edi
0x0000000000581dc7 <+38159>:	call   0x573c83 <Py_DECREF>
0x0000000000581dcc <+38164>:	movzwl (%r14),%r12d
0x0000000000581dd0 <+38168>:	mov    %r12d,%eax
0x0000000000581dd3 <+38171>:	shr    $0x8,%ax
0x0000000000581dd7 <+38175>:	movzwl %ax,%eax
0x0000000000581dda <+38178>:	mov    %eax,0x8(%rsp)
0x0000000000581dde <+38182>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581de3 <+38187>:	jne    0x581e40 <_PyEval_EvalFrameDefault+38280>
0x0000000000581de5 <+38189>:	movzbl 0xc0(%rsp),%eax
0x0000000000581ded <+38197>:	lea    -0x1(%rax),%edx
0x0000000000581df0 <+38200>:	cmp    $0xfd,%dl
0x0000000000581df3 <+38203>:	jbe    0x581e50 <_PyEval_EvalFrameDefault+38296>
0x0000000000581df5 <+38205>:	cmpw   $0x0,0x53d64f(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000581dfd <+38213>:	jne    0x581e69 <_PyEval_EvalFrameDefault+38321>
0x0000000000581dff <+38215>:	mov    $0x0,%edx
0x0000000000581e04 <+38220>:	or     %edx,%eax
0x0000000000581e06 <+38222>:	or     %eax,%r12d
0x0000000000581e09 <+38225>:	movzbl %r12b,%eax
0x0000000000581e0d <+38229>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000581e15 <+38237>:	mov    %r14,%r13
0x0000000000581e18 <+38240>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000581e1d <+38245>:	mov    $0x7444e0,%ecx
0x0000000000581e22 <+38250>:	mov    $0xf16,%edx
0x0000000000581e27 <+38255>:	mov    $0x74045c,%esi
0x0000000000581e2c <+38260>:	mov    $0x7408da,%edi
0x0000000000581e31 <+38265>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581e36 <+38270>:	mov    $0x982320,%eax
0x0000000000581e3b <+38275>:	jmp    0x581d92 <_PyEval_EvalFrameDefault+38106>
0x0000000000581e40 <+38280>:	mov    %r14,%rdx
0x0000000000581e43 <+38283>:	mov    %rbx,%rsi
0x0000000000581e46 <+38286>:	mov    %rbp,%rdi
0x0000000000581e49 <+38289>:	call   0x573f7b <lltrace_instruction>
0x0000000000581e4e <+38294>:	jmp    0x581de5 <_PyEval_EvalFrameDefault+38189>
0x0000000000581e50 <+38296>:	mov    $0x7444e0,%ecx
0x0000000000581e55 <+38301>:	mov    $0xf1e,%edx
0x0000000000581e5a <+38306>:	mov    $0x74045c,%esi
0x0000000000581e5f <+38311>:	mov    $0x742a50,%edi
0x0000000000581e64 <+38316>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581e69 <+38321>:	mov    $0xffffffff,%edx
0x0000000000581e6e <+38326>:	jmp    0x581e04 <_PyEval_EvalFrameDefault+38220>
0x0000000000581e70 <+38328>:	lea    0x2(%r13),%r15
0x0000000000581e74 <+38332>:	mov    %r13,0x38(%rbp)
0x0000000000581e78 <+38336>:	lea    0x48(%rbp),%r12
0x0000000000581e7c <+38340>:	mov    0x20(%rbp),%rax
0x0000000000581e80 <+38344>:	movslq 0x4c(%rax),%rax
0x0000000000581e84 <+38348>:	lea    (%r12,%rax,8),%rdx
0x0000000000581e88 <+38352>:	mov    %rbx,%rax
0x0000000000581e8b <+38355>:	sub    %rdx,%rax
0x0000000000581e8e <+38358>:	sar    $0x3,%rax
0x0000000000581e92 <+38362>:	test   %eax,%eax
0x0000000000581e94 <+38364>:	jle    0x581fa8 <_PyEval_EvalFrameDefault+38640>
0x0000000000581e9a <+38370>:	lea    -0x8(%rbx),%r13
0x0000000000581e9e <+38374>:	mov    -0x8(%rbx),%rax
0x0000000000581ea2 <+38378>:	mov    %rax,0x48(%rsp)
0x0000000000581ea7 <+38383>:	mov    %r13,%rax
0x0000000000581eaa <+38386>:	sub    %rdx,%rax
0x0000000000581ead <+38389>:	sar    $0x3,%rax
0x0000000000581eb1 <+38393>:	test   %eax,%eax
0x0000000000581eb3 <+38395>:	jle    0x581fc1 <_PyEval_EvalFrameDefault+38665>
0x0000000000581eb9 <+38401>:	sub    $0x10,%rbx
0x0000000000581ebd <+38405>:	mov    -0x8(%r13),%r14
0x0000000000581ec1 <+38409>:	mov    %r14,%rsi
0x0000000000581ec4 <+38412>:	mov    0x48(%rsp),%rdi
0x0000000000581ec9 <+38417>:	call   0x494464 <PySequence_Contains>
0x0000000000581ece <+38422>:	mov    %eax,0x50(%rsp)
0x0000000000581ed2 <+38426>:	mov    %r14,%rdx
0x0000000000581ed5 <+38429>:	mov    $0xf25,%esi
0x0000000000581eda <+38434>:	mov    $0x74045c,%edi
0x0000000000581edf <+38439>:	call   0x573c83 <Py_DECREF>
0x0000000000581ee4 <+38444>:	mov    0x48(%rsp),%rdx
0x0000000000581ee9 <+38449>:	mov    $0xf26,%esi
0x0000000000581eee <+38454>:	mov    $0x74045c,%edi
0x0000000000581ef3 <+38459>:	call   0x573c83 <Py_DECREF>
0x0000000000581ef8 <+38464>:	mov    0x50(%rsp),%eax
0x0000000000581efc <+38468>:	test   %eax,%eax
0x0000000000581efe <+38470>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000581f04 <+38476>:	cmp    %eax,0x8(%rsp)
0x0000000000581f08 <+38480>:	je     0x581fda <_PyEval_EvalFrameDefault+38690>
0x0000000000581f0e <+38486>:	mov    $0x982300,%eax
0x0000000000581f13 <+38491>:	addq   $0x1,0x541b6d(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000581f1b <+38499>:	mov    (%rax),%rcx
0x0000000000581f1e <+38502>:	lea    0x1(%rcx),%rdx
0x0000000000581f22 <+38506>:	mov    %rdx,(%rax)
0x0000000000581f25 <+38509>:	mov    %rax,-0x8(%r13)
0x0000000000581f29 <+38513>:	mov    0x20(%rbp),%rdx
0x0000000000581f2d <+38517>:	movslq 0x4c(%rdx),%rax
0x0000000000581f31 <+38521>:	lea    (%r12,%rax,8),%rcx
0x0000000000581f35 <+38525>:	mov    %r13,%rax
0x0000000000581f38 <+38528>:	sub    %rcx,%rax
0x0000000000581f3b <+38531>:	sar    $0x3,%rax
0x0000000000581f3f <+38535>:	cmp    %eax,0x44(%rdx)
0x0000000000581f42 <+38538>:	jl     0x581fe4 <_PyEval_EvalFrameDefault+38700>
0x0000000000581f48 <+38544>:	movzwl (%r15),%r12d
0x0000000000581f4c <+38548>:	mov    %r12d,%eax
0x0000000000581f4f <+38551>:	shr    $0x8,%ax
0x0000000000581f53 <+38555>:	movzwl %ax,%eax
0x0000000000581f56 <+38558>:	mov    %eax,0x8(%rsp)
0x0000000000581f5a <+38562>:	cmpl   $0x0,0x14(%rsp)
0x0000000000581f5f <+38567>:	jne    0x581ffd <_PyEval_EvalFrameDefault+38725>
0x0000000000581f65 <+38573>:	movzbl 0xc0(%rsp),%eax
0x0000000000581f6d <+38581>:	lea    -0x1(%rax),%edx
0x0000000000581f70 <+38584>:	cmp    $0xfd,%dl
0x0000000000581f73 <+38587>:	jbe    0x582010 <_PyEval_EvalFrameDefault+38744>
0x0000000000581f79 <+38593>:	cmpw   $0x0,0x53d4cb(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000581f81 <+38601>:	jne    0x582029 <_PyEval_EvalFrameDefault+38769>
0x0000000000581f87 <+38607>:	mov    $0x0,%edx
0x0000000000581f8c <+38612>:	or     %edx,%eax
0x0000000000581f8e <+38614>:	or     %eax,%r12d
0x0000000000581f91 <+38617>:	movzbl %r12b,%eax
0x0000000000581f95 <+38621>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000581f9d <+38629>:	mov    %r13,%rbx
0x0000000000581fa0 <+38632>:	mov    %r15,%r13
0x0000000000581fa3 <+38635>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000581fa8 <+38640>:	mov    $0x7444e0,%ecx
0x0000000000581fad <+38645>:	mov    $0xf22,%edx
0x0000000000581fb2 <+38650>:	mov    $0x74045c,%esi
0x0000000000581fb7 <+38655>:	mov    $0x7408da,%edi
0x0000000000581fbc <+38660>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581fc1 <+38665>:	mov    $0x7444e0,%ecx
0x0000000000581fc6 <+38670>:	mov    $0xf23,%edx
0x0000000000581fcb <+38675>:	mov    $0x74045c,%esi
0x0000000000581fd0 <+38680>:	mov    $0x7408da,%edi
0x0000000000581fd5 <+38685>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581fda <+38690>:	mov    $0x982320,%eax
0x0000000000581fdf <+38695>:	jmp    0x581f13 <_PyEval_EvalFrameDefault+38491>
0x0000000000581fe4 <+38700>:	mov    $0x7444e0,%ecx
0x0000000000581fe9 <+38705>:	mov    $0xf2c,%edx
0x0000000000581fee <+38710>:	mov    $0x74045c,%esi
0x0000000000581ff3 <+38715>:	mov    $0x7408bc,%edi
0x0000000000581ff8 <+38720>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000581ffd <+38725>:	mov    %r15,%rdx
0x0000000000582000 <+38728>:	mov    %r13,%rsi
0x0000000000582003 <+38731>:	mov    %rbp,%rdi
0x0000000000582006 <+38734>:	call   0x573f7b <lltrace_instruction>
0x000000000058200b <+38739>:	jmp    0x581f65 <_PyEval_EvalFrameDefault+38573>
0x0000000000582010 <+38744>:	mov    $0x7444e0,%ecx
0x0000000000582015 <+38749>:	mov    $0xf2d,%edx
0x000000000058201a <+38754>:	mov    $0x74045c,%esi
0x000000000058201f <+38759>:	mov    $0x742a50,%edi
0x0000000000582024 <+38764>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582029 <+38769>:	mov    $0xffffffff,%edx
0x000000000058202e <+38774>:	jmp    0x581f8c <_PyEval_EvalFrameDefault+38612>
0x0000000000582033 <+38779>:	lea    0x2(%r13),%r15
0x0000000000582037 <+38783>:	mov    %r13,0x38(%rbp)
0x000000000058203b <+38787>:	lea    0x48(%rbp),%r13
0x000000000058203f <+38791>:	mov    0x20(%rbp),%rax
0x0000000000582043 <+38795>:	movslq 0x4c(%rax),%rax
0x0000000000582047 <+38799>:	lea    0x0(%r13,%rax,8),%rdx
0x000000000058204c <+38804>:	mov    %rbx,%rax
0x000000000058204f <+38807>:	sub    %rdx,%rax
0x0000000000582052 <+38810>:	sar    $0x3,%rax
0x0000000000582056 <+38814>:	test   %eax,%eax
0x0000000000582058 <+38816>:	jle    0x5821c6 <_PyEval_EvalFrameDefault+39182>
0x000000000058205e <+38822>:	lea    -0x8(%rbx),%rax
0x0000000000582062 <+38826>:	mov    %rax,0x8(%rsp)
0x0000000000582067 <+38831>:	mov    -0x8(%rbx),%r12
0x000000000058206b <+38835>:	mov    %r12,%rsi
0x000000000058206e <+38838>:	mov    0x18(%rsp),%rdi
0x0000000000582073 <+38843>:	call   0x57435f <check_except_star_type_valid>
0x0000000000582078 <+38848>:	test   %eax,%eax
0x000000000058207a <+38850>:	js     0x5821df <_PyEval_EvalFrameDefault+39207>
0x0000000000582080 <+38856>:	mov    -0x10(%rbx),%r14
0x0000000000582084 <+38860>:	movq   $0x0,0x90(%rsp)
0x0000000000582090 <+38872>:	movq   $0x0,0x98(%rsp)
0x000000000058209c <+38884>:	lea    0x98(%rsp),%rcx
0x00000000005820a4 <+38892>:	lea    0x90(%rsp),%rdx
0x00000000005820ac <+38900>:	mov    %r12,%rsi
0x00000000005820af <+38903>:	mov    %r14,%rdi
0x00000000005820b2 <+38906>:	call   0x574460 <exception_group_match>
0x00000000005820b7 <+38911>:	mov    %eax,0x48(%rsp)
0x00000000005820bb <+38915>:	mov    %r12,%rdx
0x00000000005820be <+38918>:	mov    $0xf3b,%esi
0x00000000005820c3 <+38923>:	mov    $0x74045c,%edi
0x00000000005820c8 <+38928>:	call   0x573c83 <Py_DECREF>
0x00000000005820cd <+38933>:	cmpl   $0x0,0x48(%rsp)
0x00000000005820d2 <+38938>:	js     0x582203 <_PyEval_EvalFrameDefault+39243>
0x00000000005820d8 <+38944>:	mov    0x90(%rsp),%rax
0x00000000005820e0 <+38952>:	test   %rax,%rax
0x00000000005820e3 <+38955>:	je     0x5821f3 <_PyEval_EvalFrameDefault+39227>
0x00000000005820e9 <+38961>:	mov    0x98(%rsp),%rdx
0x00000000005820f1 <+38969>:	test   %rdx,%rdx
0x00000000005820f4 <+38972>:	je     0x5821f3 <_PyEval_EvalFrameDefault+39227>
0x00000000005820fa <+38978>:	cmp    $0x997120,%rax
0x0000000000582100 <+38984>:	je     0x58223f <_PyEval_EvalFrameDefault+39303>
0x0000000000582106 <+38990>:	mov    %rdx,-0x10(%rbx)
0x000000000058210a <+38994>:	mov    0x90(%rsp),%rsi
0x0000000000582112 <+39002>:	mov    %rsi,-0x8(%rbx)
0x0000000000582116 <+39006>:	mov    0x20(%rbp),%rdx
0x000000000058211a <+39010>:	movslq 0x4c(%rdx),%rax
0x000000000058211e <+39014>:	lea    0x0(%r13,%rax,8),%rcx
0x0000000000582123 <+39019>:	mov    %rbx,%rax
0x0000000000582126 <+39022>:	sub    %rcx,%rax
0x0000000000582129 <+39025>:	sar    $0x3,%rax
0x000000000058212d <+39029>:	cmp    %eax,0x44(%rdx)
0x0000000000582130 <+39032>:	jl     0x58228a <_PyEval_EvalFrameDefault+39378>
0x0000000000582136 <+39038>:	addq   $0x1,0x54194a(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000058213e <+39046>:	mov    (%rsi),%rax
0x0000000000582141 <+39049>:	add    $0x1,%rax
0x0000000000582145 <+39053>:	mov    %rax,(%rsi)
0x0000000000582148 <+39056>:	mov    $0x0,%edx
0x000000000058214d <+39061>:	mov    $0x0,%edi
0x0000000000582152 <+39066>:	call   0x5a2e94 <PyErr_SetExcInfo>
0x0000000000582157 <+39071>:	mov    %r14,%rdx
0x000000000058215a <+39074>:	mov    $0xf54,%esi
0x000000000058215f <+39079>:	mov    $0x74045c,%edi
0x0000000000582164 <+39084>:	call   0x573c83 <Py_DECREF>
0x0000000000582169 <+39089>:	movzwl (%r15),%r12d
0x000000000058216d <+39093>:	mov    %r12d,%eax
0x0000000000582170 <+39096>:	shr    $0x8,%ax
0x0000000000582174 <+39100>:	movzwl %ax,%eax
0x0000000000582177 <+39103>:	mov    %eax,0x8(%rsp)
0x000000000058217b <+39107>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582180 <+39112>:	jne    0x5822a3 <_PyEval_EvalFrameDefault+39403>
0x0000000000582186 <+39118>:	movzbl 0xc0(%rsp),%eax
0x000000000058218e <+39126>:	lea    -0x1(%rax),%edx
0x0000000000582191 <+39129>:	cmp    $0xfd,%dl
0x0000000000582194 <+39132>:	jbe    0x5822b6 <_PyEval_EvalFrameDefault+39422>
0x000000000058219a <+39138>:	cmpw   $0x0,0x53d2aa(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005821a2 <+39146>:	jne    0x5822cf <_PyEval_EvalFrameDefault+39447>
0x00000000005821a8 <+39152>:	mov    $0x0,%edx
0x00000000005821ad <+39157>:	or     %edx,%eax
0x00000000005821af <+39159>:	or     %eax,%r12d
0x00000000005821b2 <+39162>:	movzbl %r12b,%eax
0x00000000005821b6 <+39166>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005821be <+39174>:	mov    %r15,%r13
0x00000000005821c1 <+39177>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005821c6 <+39182>:	mov    $0x7444e0,%ecx
0x00000000005821cb <+39187>:	mov    $0xf31,%edx
0x00000000005821d0 <+39192>:	mov    $0x74045c,%esi
0x00000000005821d5 <+39197>:	mov    $0x7408da,%edi
0x00000000005821da <+39202>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005821df <+39207>:	mov    %r12,%rdx
0x00000000005821e2 <+39210>:	mov    $0xf33,%esi
0x00000000005821e7 <+39215>:	mov    $0x74045c,%edi
0x00000000005821ec <+39220>:	call   0x573c83 <Py_DECREF>
0x00000000005821f1 <+39225>:	jmp    0x582203 <_PyEval_EvalFrameDefault+39243>
0x00000000005821f3 <+39227>:	test   %rax,%rax
0x00000000005821f6 <+39230>:	jne    0x58220d <_PyEval_EvalFrameDefault+39253>
0x00000000005821f8 <+39232>:	cmpq   $0x0,0x98(%rsp)
0x0000000000582201 <+39241>:	jne    0x582226 <_PyEval_EvalFrameDefault+39278>
0x0000000000582203 <+39243>:	mov    0x8(%rsp),%rbx
0x0000000000582208 <+39248>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058220d <+39253>:	mov    $0x7444e0,%ecx
0x0000000000582212 <+39258>:	mov    $0xf41,%edx
0x0000000000582217 <+39263>:	mov    $0x74045c,%esi
0x000000000058221c <+39268>:	mov    $0x740b84,%edi
0x0000000000582221 <+39273>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582226 <+39278>:	mov    $0x7444e0,%ecx
0x000000000058222b <+39283>:	mov    $0xf42,%edx
0x0000000000582230 <+39288>:	mov    $0x74045c,%esi
0x0000000000582235 <+39293>:	mov    $0x6dfbe1,%edi
0x000000000058223a <+39298>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058223f <+39303>:	mov    %rax,-0x8(%rbx)
0x0000000000582243 <+39307>:	mov    0x20(%rbp),%rdx
0x0000000000582247 <+39311>:	movslq 0x4c(%rdx),%rax
0x000000000058224b <+39315>:	lea    0x0(%r13,%rax,8),%rcx
0x0000000000582250 <+39320>:	mov    %rbx,%rax
0x0000000000582253 <+39323>:	sub    %rcx,%rax
0x0000000000582256 <+39326>:	sar    $0x3,%rax
0x000000000058225a <+39330>:	cmp    %eax,0x44(%rdx)
0x000000000058225d <+39333>:	jl     0x582271 <_PyEval_EvalFrameDefault+39353>
0x000000000058225f <+39335>:	mov    0x98(%rsp),%rdi
0x0000000000582267 <+39343>:	call   0x573cb3 <Py_XDECREF>
0x000000000058226c <+39348>:	jmp    0x582169 <_PyEval_EvalFrameDefault+39089>
0x0000000000582271 <+39353>:	mov    $0x7444e0,%ecx
0x0000000000582276 <+39358>:	mov    $0xf46,%edx
0x000000000058227b <+39363>:	mov    $0x74045c,%esi
0x0000000000582280 <+39368>:	mov    $0x7408bc,%edi
0x0000000000582285 <+39373>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058228a <+39378>:	mov    $0x7444e0,%ecx
0x000000000058228f <+39383>:	mov    $0xf52,%edx
0x0000000000582294 <+39388>:	mov    $0x74045c,%esi
0x0000000000582299 <+39393>:	mov    $0x7408bc,%edi
0x000000000058229e <+39398>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005822a3 <+39403>:	mov    %r15,%rdx
0x00000000005822a6 <+39406>:	mov    %rbx,%rsi
0x00000000005822a9 <+39409>:	mov    %rbp,%rdi
0x00000000005822ac <+39412>:	call   0x573f7b <lltrace_instruction>
0x00000000005822b1 <+39417>:	jmp    0x582186 <_PyEval_EvalFrameDefault+39118>
0x00000000005822b6 <+39422>:	mov    $0x7444e0,%ecx
0x00000000005822bb <+39427>:	mov    $0xf56,%edx
0x00000000005822c0 <+39432>:	mov    $0x74045c,%esi
0x00000000005822c5 <+39437>:	mov    $0x742a50,%edi
0x00000000005822ca <+39442>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005822cf <+39447>:	mov    $0xffffffff,%edx
0x00000000005822d4 <+39452>:	jmp    0x5821ad <_PyEval_EvalFrameDefault+39157>
0x00000000005822d9 <+39457>:	lea    0x2(%r13),%r15
0x00000000005822dd <+39461>:	mov    %r13,0x38(%rbp)
0x00000000005822e1 <+39465>:	lea    0x48(%rbp),%r13
0x00000000005822e5 <+39469>:	mov    0x20(%rbp),%rax
0x00000000005822e9 <+39473>:	movslq 0x4c(%rax),%rax
0x00000000005822ed <+39477>:	lea    0x0(%r13,%rax,8),%rdx
0x00000000005822f2 <+39482>:	mov    %rbx,%rax
0x00000000005822f5 <+39485>:	sub    %rdx,%rax
0x00000000005822f8 <+39488>:	sar    $0x3,%rax
0x00000000005822fc <+39492>:	test   %eax,%eax
0x00000000005822fe <+39494>:	jle    0x5823fc <_PyEval_EvalFrameDefault+39748>
0x0000000000582304 <+39500>:	lea    -0x8(%rbx),%rax
0x0000000000582308 <+39504>:	mov    %rax,0x8(%rsp)
0x000000000058230d <+39509>:	mov    -0x8(%rbx),%r12
0x0000000000582311 <+39513>:	mov    -0x10(%rbx),%r14
0x0000000000582315 <+39517>:	mov    0x8(%r14),%rax
0x0000000000582319 <+39521>:	testb  $0x40,0xab(%rax)
0x0000000000582320 <+39528>:	je     0x582415 <_PyEval_EvalFrameDefault+39773>
0x0000000000582326 <+39534>:	mov    %r12,%rsi
0x0000000000582329 <+39537>:	mov    0x18(%rsp),%rdi
0x000000000058232e <+39542>:	call   0x573cd4 <check_except_type_valid>
0x0000000000582333 <+39547>:	test   %eax,%eax
0x0000000000582335 <+39549>:	js     0x58242e <_PyEval_EvalFrameDefault+39798>
0x000000000058233b <+39555>:	mov    %r12,%rsi
0x000000000058233e <+39558>:	mov    %r14,%rdi
0x0000000000582341 <+39561>:	call   0x5a25d5 <PyErr_GivenExceptionMatches>
0x0000000000582346 <+39566>:	mov    %eax,%r14d
0x0000000000582349 <+39569>:	mov    %r12,%rdx
0x000000000058234c <+39572>:	mov    $0xf63,%esi
0x0000000000582351 <+39577>:	mov    $0x74045c,%edi
0x0000000000582356 <+39582>:	call   0x573c83 <Py_DECREF>
0x000000000058235b <+39587>:	test   %r14d,%r14d
0x000000000058235e <+39590>:	je     0x58244a <_PyEval_EvalFrameDefault+39826>
0x0000000000582364 <+39596>:	mov    $0x982300,%eax
0x0000000000582369 <+39601>:	addq   $0x1,0x541717(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000582371 <+39609>:	mov    (%rax),%rcx
0x0000000000582374 <+39612>:	lea    0x1(%rcx),%rdx
0x0000000000582378 <+39616>:	mov    %rdx,(%rax)
0x000000000058237b <+39619>:	mov    %rax,-0x8(%rbx)
0x000000000058237f <+39623>:	mov    0x20(%rbp),%rdx
0x0000000000582383 <+39627>:	movslq 0x4c(%rdx),%rax
0x0000000000582387 <+39631>:	lea    0x0(%r13,%rax,8),%rcx
0x000000000058238c <+39636>:	mov    %rbx,%rax
0x000000000058238f <+39639>:	sub    %rcx,%rax
0x0000000000582392 <+39642>:	sar    $0x3,%rax
0x0000000000582396 <+39646>:	cmp    %eax,0x44(%rdx)
0x0000000000582399 <+39649>:	jl     0x582454 <_PyEval_EvalFrameDefault+39836>
0x000000000058239f <+39655>:	movzwl (%r15),%r12d
0x00000000005823a3 <+39659>:	mov    %r12d,%eax
0x00000000005823a6 <+39662>:	shr    $0x8,%ax
0x00000000005823aa <+39666>:	movzwl %ax,%eax
0x00000000005823ad <+39669>:	mov    %eax,0x8(%rsp)
0x00000000005823b1 <+39673>:	cmpl   $0x0,0x14(%rsp)
0x00000000005823b6 <+39678>:	jne    0x58246d <_PyEval_EvalFrameDefault+39861>
0x00000000005823bc <+39684>:	movzbl 0xc0(%rsp),%eax
0x00000000005823c4 <+39692>:	lea    -0x1(%rax),%edx
0x00000000005823c7 <+39695>:	cmp    $0xfd,%dl
0x00000000005823ca <+39698>:	jbe    0x582480 <_PyEval_EvalFrameDefault+39880>
0x00000000005823d0 <+39704>:	cmpw   $0x0,0x53d074(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005823d8 <+39712>:	jne    0x582499 <_PyEval_EvalFrameDefault+39905>
0x00000000005823de <+39718>:	mov    $0x0,%edx
0x00000000005823e3 <+39723>:	or     %edx,%eax
0x00000000005823e5 <+39725>:	or     %eax,%r12d
0x00000000005823e8 <+39728>:	movzbl %r12b,%eax
0x00000000005823ec <+39732>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005823f4 <+39740>:	mov    %r15,%r13
0x00000000005823f7 <+39743>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005823fc <+39748>:	mov    $0x7444e0,%ecx
0x0000000000582401 <+39753>:	mov    $0xf5a,%edx
0x0000000000582406 <+39758>:	mov    $0x74045c,%esi
0x000000000058240b <+39763>:	mov    $0x7408da,%edi
0x0000000000582410 <+39768>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582415 <+39773>:	mov    $0x7444e0,%ecx
0x000000000058241a <+39778>:	mov    $0xf5c,%edx
0x000000000058241f <+39783>:	mov    $0x74045c,%esi
0x0000000000582424 <+39788>:	mov    $0x743060,%edi
0x0000000000582429 <+39793>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058242e <+39798>:	mov    %r12,%rdx
0x0000000000582431 <+39801>:	mov    $0xf5e,%esi
0x0000000000582436 <+39806>:	mov    $0x74045c,%edi
0x000000000058243b <+39811>:	call   0x573c83 <Py_DECREF>
0x0000000000582440 <+39816>:	mov    0x8(%rsp),%rbx
0x0000000000582445 <+39821>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058244a <+39826>:	mov    $0x982320,%eax
0x000000000058244f <+39831>:	jmp    0x582369 <_PyEval_EvalFrameDefault+39601>
0x0000000000582454 <+39836>:	mov    $0x7444e0,%ecx
0x0000000000582459 <+39841>:	mov    $0xf64,%edx
0x000000000058245e <+39846>:	mov    $0x74045c,%esi
0x0000000000582463 <+39851>:	mov    $0x7408bc,%edi
0x0000000000582468 <+39856>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058246d <+39861>:	mov    %r15,%rdx
0x0000000000582470 <+39864>:	mov    %rbx,%rsi
0x0000000000582473 <+39867>:	mov    %rbp,%rdi
0x0000000000582476 <+39870>:	call   0x573f7b <lltrace_instruction>
0x000000000058247b <+39875>:	jmp    0x5823bc <_PyEval_EvalFrameDefault+39684>
0x0000000000582480 <+39880>:	mov    $0x7444e0,%ecx
0x0000000000582485 <+39885>:	mov    $0xf65,%edx
0x000000000058248a <+39890>:	mov    $0x74045c,%esi
0x000000000058248f <+39895>:	mov    $0x742a50,%edi
0x0000000000582494 <+39900>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582499 <+39905>:	mov    $0xffffffff,%edx
0x000000000058249e <+39910>:	jmp    0x5823e3 <_PyEval_EvalFrameDefault+39723>
0x00000000005824a3 <+39915>:	lea    0x2(%r13),%r15
0x00000000005824a7 <+39919>:	mov    %r13,0x38(%rbp)
0x00000000005824ab <+39923>:	movslq 0x8(%rsp),%rsi
0x00000000005824b0 <+39928>:	mov    0x30(%rsp),%rdi
0x00000000005824b5 <+39933>:	call   0x500470 <PyTuple_GetItem>
0x00000000005824ba <+39938>:	mov    %rax,%rdx
0x00000000005824bd <+39941>:	mov    0x20(%rbp),%rax
0x00000000005824c1 <+39945>:	movslq 0x4c(%rax),%rax
0x00000000005824c5 <+39949>:	lea    0x48(%rbp,%rax,8),%rcx
0x00000000005824ca <+39954>:	mov    %rbx,%rax
0x00000000005824cd <+39957>:	sub    %rcx,%rax
0x00000000005824d0 <+39960>:	sar    $0x3,%rax
0x00000000005824d4 <+39964>:	test   %eax,%eax
0x00000000005824d6 <+39966>:	jle    0x58257f <_PyEval_EvalFrameDefault+40135>
0x00000000005824dc <+39972>:	sub    $0x8,%rbx
0x00000000005824e0 <+39976>:	mov    (%rbx),%r13
0x00000000005824e3 <+39979>:	mov    -0x8(%rbx),%r14
0x00000000005824e7 <+39983>:	mov    %r14,%r8
0x00000000005824ea <+39986>:	mov    %r13,%rcx
0x00000000005824ed <+39989>:	mov    %rbp,%rsi
0x00000000005824f0 <+39992>:	mov    0x18(%rsp),%rdi
0x00000000005824f5 <+39997>:	call   0x5747ea <import_name>
0x00000000005824fa <+40002>:	mov    %rax,%r12
0x00000000005824fd <+40005>:	mov    %r14,%rdx
0x0000000000582500 <+40008>:	mov    $0xf6e,%esi
0x0000000000582505 <+40013>:	mov    $0x74045c,%edi
0x000000000058250a <+40018>:	call   0x573c83 <Py_DECREF>
0x000000000058250f <+40023>:	mov    %r13,%rdx
0x0000000000582512 <+40026>:	mov    $0xf6f,%esi
0x0000000000582517 <+40031>:	mov    $0x74045c,%edi
0x000000000058251c <+40036>:	call   0x573c83 <Py_DECREF>
0x0000000000582521 <+40041>:	mov    %r12,-0x8(%rbx)
0x0000000000582525 <+40045>:	test   %r12,%r12
0x0000000000582528 <+40048>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058252e <+40054>:	movzwl (%r15),%r12d
0x0000000000582532 <+40058>:	mov    %r12d,%eax
0x0000000000582535 <+40061>:	shr    $0x8,%ax
0x0000000000582539 <+40065>:	movzwl %ax,%eax
0x000000000058253c <+40068>:	mov    %eax,0x8(%rsp)
0x0000000000582540 <+40072>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582545 <+40077>:	jne    0x582598 <_PyEval_EvalFrameDefault+40160>
0x0000000000582547 <+40079>:	movzbl 0xc0(%rsp),%eax
0x000000000058254f <+40087>:	lea    -0x1(%rax),%edx
0x0000000000582552 <+40090>:	cmp    $0xfd,%dl
0x0000000000582555 <+40093>:	jbe    0x5825a8 <_PyEval_EvalFrameDefault+40176>
0x0000000000582557 <+40095>:	cmpw   $0x0,0x53ceed(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058255f <+40103>:	jne    0x5825c1 <_PyEval_EvalFrameDefault+40201>
0x0000000000582561 <+40105>:	mov    $0x0,%edx
0x0000000000582566 <+40110>:	or     %edx,%eax
0x0000000000582568 <+40112>:	or     %eax,%r12d
0x000000000058256b <+40115>:	movzbl %r12b,%eax
0x000000000058256f <+40119>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582577 <+40127>:	mov    %r15,%r13
0x000000000058257a <+40130>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058257f <+40135>:	mov    $0x7444e0,%ecx
0x0000000000582584 <+40140>:	mov    $0xf6a,%edx
0x0000000000582589 <+40145>:	mov    $0x74045c,%esi
0x000000000058258e <+40150>:	mov    $0x7408da,%edi
0x0000000000582593 <+40155>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582598 <+40160>:	mov    %r15,%rdx
0x000000000058259b <+40163>:	mov    %rbx,%rsi
0x000000000058259e <+40166>:	mov    %rbp,%rdi
0x00000000005825a1 <+40169>:	call   0x573f7b <lltrace_instruction>
0x00000000005825a6 <+40174>:	jmp    0x582547 <_PyEval_EvalFrameDefault+40079>
0x00000000005825a8 <+40176>:	mov    $0x7444e0,%ecx
0x00000000005825ad <+40181>:	mov    $0xf73,%edx
0x00000000005825b2 <+40186>:	mov    $0x74045c,%esi
0x00000000005825b7 <+40191>:	mov    $0x742a50,%edi
0x00000000005825bc <+40196>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005825c1 <+40201>:	mov    $0xffffffff,%edx
0x00000000005825c6 <+40206>:	jmp    0x582566 <_PyEval_EvalFrameDefault+40110>
0x00000000005825c8 <+40208>:	lea    0x2(%r13),%r15
0x00000000005825cc <+40212>:	mov    %r13,0x38(%rbp)
0x00000000005825d0 <+40216>:	mov    0x20(%rbp),%rax
0x00000000005825d4 <+40220>:	movslq 0x4c(%rax),%rax
0x00000000005825d8 <+40224>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005825dd <+40229>:	mov    %rbx,%rax
0x00000000005825e0 <+40232>:	sub    %rdx,%rax
0x00000000005825e3 <+40235>:	sar    $0x3,%rax
0x00000000005825e7 <+40239>:	test   %eax,%eax
0x00000000005825e9 <+40241>:	jle    0x5826a8 <_PyEval_EvalFrameDefault+40432>
0x00000000005825ef <+40247>:	sub    $0x8,%rbx
0x00000000005825f3 <+40251>:	mov    (%rbx),%r12
0x00000000005825f6 <+40254>:	mov    %rbp,%rdi
0x00000000005825f9 <+40257>:	call   0x4c78f2 <_PyFrame_FastToLocalsWithError>
0x00000000005825fe <+40262>:	test   %eax,%eax
0x0000000000582600 <+40264>:	js     0x5826c1 <_PyEval_EvalFrameDefault+40457>
0x0000000000582606 <+40270>:	mov    0x18(%rbp),%rsi
0x000000000058260a <+40274>:	test   %rsi,%rsi
0x000000000058260d <+40277>:	je     0x5826d8 <_PyEval_EvalFrameDefault+40480>
0x0000000000582613 <+40283>:	mov    %r12,%rdx
0x0000000000582616 <+40286>:	mov    0x18(%rsp),%rdi
0x000000000058261b <+40291>:	call   0x57494c <import_all_from>
0x0000000000582620 <+40296>:	mov    %eax,%r13d
0x0000000000582623 <+40299>:	mov    $0x0,%esi
0x0000000000582628 <+40304>:	mov    %rbp,%rdi
0x000000000058262b <+40307>:	call   0x4c7c89 <_PyFrame_LocalsToFast>
0x0000000000582630 <+40312>:	mov    %r12,%rdx
0x0000000000582633 <+40315>:	mov    $0xf87,%esi
0x0000000000582638 <+40320>:	mov    $0x74045c,%edi
0x000000000058263d <+40325>:	call   0x573c83 <Py_DECREF>
0x0000000000582642 <+40330>:	test   %r13d,%r13d
0x0000000000582645 <+40333>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058264b <+40339>:	movzwl (%r15),%r12d
0x000000000058264f <+40343>:	mov    %r12d,%eax
0x0000000000582652 <+40346>:	shr    $0x8,%ax
0x0000000000582656 <+40350>:	movzwl %ax,%eax
0x0000000000582659 <+40353>:	mov    %eax,0x8(%rsp)
0x000000000058265d <+40357>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582662 <+40362>:	jne    0x582705 <_PyEval_EvalFrameDefault+40525>
0x0000000000582668 <+40368>:	movzbl 0xc0(%rsp),%eax
0x0000000000582670 <+40376>:	lea    -0x1(%rax),%edx
0x0000000000582673 <+40379>:	cmp    $0xfd,%dl
0x0000000000582676 <+40382>:	jbe    0x582718 <_PyEval_EvalFrameDefault+40544>
0x000000000058267c <+40388>:	cmpw   $0x0,0x53cdc8(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582684 <+40396>:	jne    0x582731 <_PyEval_EvalFrameDefault+40569>
0x000000000058268a <+40402>:	mov    $0x0,%edx
0x000000000058268f <+40407>:	or     %edx,%eax
0x0000000000582691 <+40409>:	or     %eax,%r12d
0x0000000000582694 <+40412>:	movzbl %r12b,%eax
0x0000000000582698 <+40416>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005826a0 <+40424>:	mov    %r15,%r13
0x00000000005826a3 <+40427>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005826a8 <+40432>:	mov    $0x7444e0,%ecx
0x00000000005826ad <+40437>:	mov    $0xf77,%edx
0x00000000005826b2 <+40442>:	mov    $0x74045c,%esi
0x00000000005826b7 <+40447>:	mov    $0x7408da,%edi
0x00000000005826bc <+40452>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005826c1 <+40457>:	mov    %r12,%rdx
0x00000000005826c4 <+40460>:	mov    $0xf7a,%esi
0x00000000005826c9 <+40465>:	mov    $0x74045c,%edi
0x00000000005826ce <+40470>:	call   0x573c83 <Py_DECREF>
0x00000000005826d3 <+40475>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005826d8 <+40480>:	mov    $0x743080,%edx
0x00000000005826dd <+40485>:	mov    0x4064d4(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x00000000005826e4 <+40492>:	mov    0x18(%rsp),%rdi
0x00000000005826e9 <+40497>:	call   0x5a33b2 <_PyErr_SetString>
0x00000000005826ee <+40502>:	mov    %r12,%rdx
0x00000000005826f1 <+40505>:	mov    $0xf82,%esi
0x00000000005826f6 <+40510>:	mov    $0x74045c,%edi
0x00000000005826fb <+40515>:	call   0x573c83 <Py_DECREF>
0x0000000000582700 <+40520>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000582705 <+40525>:	mov    %r15,%rdx
0x0000000000582708 <+40528>:	mov    %rbx,%rsi
0x000000000058270b <+40531>:	mov    %rbp,%rdi
0x000000000058270e <+40534>:	call   0x573f7b <lltrace_instruction>
0x0000000000582713 <+40539>:	jmp    0x582668 <_PyEval_EvalFrameDefault+40368>
0x0000000000582718 <+40544>:	mov    $0x7444e0,%ecx
0x000000000058271d <+40549>:	mov    $0xf8a,%edx
0x0000000000582722 <+40554>:	mov    $0x74045c,%esi
0x0000000000582727 <+40559>:	mov    $0x742a50,%edi
0x000000000058272c <+40564>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582731 <+40569>:	mov    $0xffffffff,%edx
0x0000000000582736 <+40574>:	jmp    0x58268f <_PyEval_EvalFrameDefault+40407>
0x000000000058273b <+40579>:	lea    0x2(%r13),%r15
0x000000000058273f <+40583>:	mov    %r13,0x38(%rbp)
0x0000000000582743 <+40587>:	movslq 0x8(%rsp),%rsi
0x0000000000582748 <+40592>:	mov    0x30(%rsp),%rdi
0x000000000058274d <+40597>:	call   0x500470 <PyTuple_GetItem>
0x0000000000582752 <+40602>:	mov    %rax,%rdx
0x0000000000582755 <+40605>:	mov    -0x8(%rbx),%rsi
0x0000000000582759 <+40609>:	mov    0x18(%rsp),%rdi
0x000000000058275e <+40614>:	call   0x574e84 <import_from>
0x0000000000582763 <+40619>:	lea    0x8(%rbx),%r13
0x0000000000582767 <+40623>:	mov    %rax,(%rbx)
0x000000000058276a <+40626>:	mov    0x20(%rbp),%rcx
0x000000000058276e <+40630>:	movslq 0x4c(%rcx),%rdx
0x0000000000582772 <+40634>:	lea    0x48(%rbp,%rdx,8),%rsi
0x0000000000582777 <+40639>:	mov    %r13,%rdx
0x000000000058277a <+40642>:	sub    %rsi,%rdx
0x000000000058277d <+40645>:	sar    $0x3,%rdx
0x0000000000582781 <+40649>:	cmp    %edx,0x44(%rcx)
0x0000000000582784 <+40652>:	jl     0x5827e3 <_PyEval_EvalFrameDefault+40747>
0x0000000000582786 <+40654>:	test   %rax,%rax
0x0000000000582789 <+40657>:	je     0x589b95 <_PyEval_EvalFrameDefault+70365>
0x000000000058278f <+40663>:	movzwl (%r15),%r12d
0x0000000000582793 <+40667>:	mov    %r12d,%eax
0x0000000000582796 <+40670>:	shr    $0x8,%ax
0x000000000058279a <+40674>:	movzwl %ax,%eax
0x000000000058279d <+40677>:	mov    %eax,0x8(%rsp)
0x00000000005827a1 <+40681>:	cmpl   $0x0,0x14(%rsp)
0x00000000005827a6 <+40686>:	jne    0x5827fc <_PyEval_EvalFrameDefault+40772>
0x00000000005827a8 <+40688>:	movzbl 0xc0(%rsp),%eax
0x00000000005827b0 <+40696>:	lea    -0x1(%rax),%edx
0x00000000005827b3 <+40699>:	cmp    $0xfd,%dl
0x00000000005827b6 <+40702>:	jbe    0x58280c <_PyEval_EvalFrameDefault+40788>
0x00000000005827b8 <+40704>:	cmpw   $0x0,0x53cc8c(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005827c0 <+40712>:	jne    0x582825 <_PyEval_EvalFrameDefault+40813>
0x00000000005827c2 <+40714>:	mov    $0x0,%edx
0x00000000005827c7 <+40719>:	or     %edx,%eax
0x00000000005827c9 <+40721>:	or     %eax,%r12d
0x00000000005827cc <+40724>:	movzbl %r12b,%eax
0x00000000005827d0 <+40728>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005827d8 <+40736>:	mov    %r13,%rbx
0x00000000005827db <+40739>:	mov    %r15,%r13
0x00000000005827de <+40742>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005827e3 <+40747>:	mov    $0x7444e0,%ecx
0x00000000005827e8 <+40752>:	mov    $0xf92,%edx
0x00000000005827ed <+40757>:	mov    $0x74045c,%esi
0x00000000005827f2 <+40762>:	mov    $0x7408bc,%edi
0x00000000005827f7 <+40767>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005827fc <+40772>:	mov    %r15,%rdx
0x00000000005827ff <+40775>:	mov    %r13,%rsi
0x0000000000582802 <+40778>:	mov    %rbp,%rdi
0x0000000000582805 <+40781>:	call   0x573f7b <lltrace_instruction>
0x000000000058280a <+40786>:	jmp    0x5827a8 <_PyEval_EvalFrameDefault+40688>
0x000000000058280c <+40788>:	mov    $0x7444e0,%ecx
0x0000000000582811 <+40793>:	mov    $0xf95,%edx
0x0000000000582816 <+40798>:	mov    $0x74045c,%esi
0x000000000058281b <+40803>:	mov    $0x742a50,%edi
0x0000000000582820 <+40808>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582825 <+40813>:	mov    $0xffffffff,%edx
0x000000000058282a <+40818>:	jmp    0x5827c7 <_PyEval_EvalFrameDefault+40719>
0x000000000058282c <+40820>:	mov    %r13,0x38(%rbp)
0x0000000000582830 <+40824>:	movslq 0x8(%rsp),%rax
0x0000000000582835 <+40829>:	lea    0x2(%r13,%rax,2),%r13
0x000000000058283a <+40834>:	movzwl 0x0(%r13),%r12d
0x000000000058283f <+40839>:	mov    %r12d,%eax
0x0000000000582842 <+40842>:	shr    $0x8,%ax
0x0000000000582846 <+40846>:	movzwl %ax,%eax
0x0000000000582849 <+40849>:	mov    %eax,0x8(%rsp)
0x000000000058284d <+40853>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582852 <+40858>:	jne    0x582889 <_PyEval_EvalFrameDefault+40913>
0x0000000000582854 <+40860>:	movzbl 0xc0(%rsp),%eax
0x000000000058285c <+40868>:	lea    -0x1(%rax),%edx
0x000000000058285f <+40871>:	cmp    $0xfd,%dl
0x0000000000582862 <+40874>:	jbe    0x582899 <_PyEval_EvalFrameDefault+40929>
0x0000000000582864 <+40876>:	cmpw   $0x0,0x53cbe0(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058286c <+40884>:	jne    0x5828b2 <_PyEval_EvalFrameDefault+40954>
0x000000000058286e <+40886>:	mov    $0x0,%edx
0x0000000000582873 <+40891>:	or     %edx,%eax
0x0000000000582875 <+40893>:	or     %eax,%r12d
0x0000000000582878 <+40896>:	movzbl %r12b,%eax
0x000000000058287c <+40900>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582884 <+40908>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582889 <+40913>:	mov    %r13,%rdx
0x000000000058288c <+40916>:	mov    %rbx,%rsi
0x000000000058288f <+40919>:	mov    %rbp,%rdi
0x0000000000582892 <+40922>:	call   0x573f7b <lltrace_instruction>
0x0000000000582897 <+40927>:	jmp    0x582854 <_PyEval_EvalFrameDefault+40860>
0x0000000000582899 <+40929>:	mov    $0x7444e0,%ecx
0x000000000058289e <+40934>:	mov    $0xf9a,%edx
0x00000000005828a3 <+40939>:	mov    $0x74045c,%esi
0x00000000005828a8 <+40944>:	mov    $0x742a50,%edi
0x00000000005828ad <+40949>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005828b2 <+40954>:	mov    $0xffffffff,%edx
0x00000000005828b7 <+40959>:	jmp    0x582873 <_PyEval_EvalFrameDefault+40891>
0x00000000005828b9 <+40961>:	lea    0x2(%r13),%r12
0x00000000005828bd <+40965>:	mov    %r13,0x38(%rbp)
0x00000000005828c1 <+40969>:	mov    0x20(%rbp),%rdi
0x00000000005828c5 <+40973>:	call   0x57509a <_PyCode_Warmup>
0x00000000005828ca <+40978>:	mov    %r12,%rax
0x00000000005828cd <+40981>:	mov    0x38(%rsp),%rcx
0x00000000005828d2 <+40986>:	sub    %rcx,%rax
0x00000000005828d5 <+40989>:	sar    %rax
0x00000000005828d8 <+40992>:	mov    0x8(%rsp),%ecx
0x00000000005828dc <+40996>:	cmp    %ecx,%eax
0x00000000005828de <+40998>:	jle    0x583ad9 <_PyEval_EvalFrameDefault+45601>
0x00000000005828e4 <+41004>:	mov    0x8(%rsp),%eax
0x00000000005828e8 <+41008>:	neg    %eax
0x00000000005828ea <+41010>:	cltq
0x00000000005828ec <+41012>:	lea    (%r12,%rax,2),%r13
0x00000000005828f0 <+41016>:	mov    0x28(%rsp),%rax
0x00000000005828f5 <+41021>:	mov    0x64(%rax),%eax
0x00000000005828f8 <+41024>:	test   %eax,%eax
0x00000000005828fa <+41026>:	jne    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000582900 <+41032>:	movzwl 0x0(%r13),%r12d
0x0000000000582905 <+41037>:	mov    %r12d,%eax
0x0000000000582908 <+41040>:	shr    $0x8,%ax
0x000000000058290c <+41044>:	movzwl %ax,%eax
0x000000000058290f <+41047>:	mov    %eax,0x8(%rsp)
0x0000000000582913 <+41051>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582918 <+41056>:	jne    0x583af2 <_PyEval_EvalFrameDefault+45626>
0x000000000058291e <+41062>:	movzbl 0xc0(%rsp),%eax
0x0000000000582926 <+41070>:	lea    -0x1(%rax),%edx
0x0000000000582929 <+41073>:	cmp    $0xfd,%dl
0x000000000058292c <+41076>:	jbe    0x583b05 <_PyEval_EvalFrameDefault+45645>
0x0000000000582932 <+41082>:	cmpw   $0x0,0x53cb12(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058293a <+41090>:	jne    0x583b1e <_PyEval_EvalFrameDefault+45670>
0x0000000000582940 <+41096>:	mov    $0x0,%edx
0x0000000000582945 <+41101>:	or     %edx,%eax
0x0000000000582947 <+41103>:	or     %eax,%r12d
0x000000000058294a <+41106>:	movzbl %r12b,%eax
0x000000000058294e <+41110>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582956 <+41118>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058295b <+41123>:	lea    0x2(%r13),%r15
0x000000000058295f <+41127>:	mov    %r13,0x38(%rbp)
0x0000000000582963 <+41131>:	mov    0x20(%rbp),%rax
0x0000000000582967 <+41135>:	movslq 0x4c(%rax),%rax
0x000000000058296b <+41139>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000582970 <+41144>:	mov    %rbx,%rax
0x0000000000582973 <+41147>:	sub    %rdx,%rax
0x0000000000582976 <+41150>:	sar    $0x3,%rax
0x000000000058297a <+41154>:	test   %eax,%eax
0x000000000058297c <+41156>:	jle    0x582a26 <_PyEval_EvalFrameDefault+41326>
0x0000000000582982 <+41162>:	sub    $0x8,%rbx
0x0000000000582986 <+41166>:	mov    (%rbx),%r12
0x0000000000582989 <+41169>:	cmp    $0x982300,%r12
0x0000000000582990 <+41176>:	je     0x582a3f <_PyEval_EvalFrameDefault+41351>
0x0000000000582996 <+41182>:	cmp    $0x982320,%r12
0x000000000058299d <+41189>:	je     0x582ac8 <_PyEval_EvalFrameDefault+41488>
0x00000000005829a3 <+41195>:	mov    %r12,%rdi
0x00000000005829a6 <+41198>:	call   0x4efc71 <PyObject_IsTrue>
0x00000000005829ab <+41203>:	mov    %eax,%r13d
0x00000000005829ae <+41206>:	mov    %r12,%rdx
0x00000000005829b1 <+41209>:	mov    $0xfb0,%esi
0x00000000005829b6 <+41214>:	mov    $0x74045c,%edi
0x00000000005829bb <+41219>:	call   0x573c83 <Py_DECREF>
0x00000000005829c0 <+41224>:	test   %r13d,%r13d
0x00000000005829c3 <+41227>:	jle    0x582b6b <_PyEval_EvalFrameDefault+41651>
0x00000000005829c9 <+41233>:	movzwl (%r15),%r12d
0x00000000005829cd <+41237>:	mov    %r12d,%eax
0x00000000005829d0 <+41240>:	shr    $0x8,%ax
0x00000000005829d4 <+41244>:	movzwl %ax,%eax
0x00000000005829d7 <+41247>:	mov    %eax,0x8(%rsp)
0x00000000005829db <+41251>:	cmpl   $0x0,0x14(%rsp)
0x00000000005829e0 <+41256>:	jne    0x582b95 <_PyEval_EvalFrameDefault+41693>
0x00000000005829e6 <+41262>:	movzbl 0xc0(%rsp),%eax
0x00000000005829ee <+41270>:	lea    -0x1(%rax),%edx
0x00000000005829f1 <+41273>:	cmp    $0xfd,%dl
0x00000000005829f4 <+41276>:	jbe    0x582ba8 <_PyEval_EvalFrameDefault+41712>
0x00000000005829fa <+41282>:	cmpw   $0x0,0x53ca4a(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582a02 <+41290>:	jne    0x582bc1 <_PyEval_EvalFrameDefault+41737>
0x0000000000582a08 <+41296>:	mov    $0x0,%edx
0x0000000000582a0d <+41301>:	or     %edx,%eax
0x0000000000582a0f <+41303>:	or     %eax,%r12d
0x0000000000582a12 <+41306>:	movzbl %r12b,%eax
0x0000000000582a16 <+41310>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582a1e <+41318>:	mov    %r15,%r13
0x0000000000582a21 <+41321>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582a26 <+41326>:	mov    $0x7444e0,%ecx
0x0000000000582a2b <+41331>:	mov    $0xfa4,%edx
0x0000000000582a30 <+41336>:	mov    $0x74045c,%esi
0x0000000000582a35 <+41341>:	mov    $0x7408da,%edi
0x0000000000582a3a <+41346>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582a3f <+41351>:	mov    %r12,%rdi
0x0000000000582a42 <+41354>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000582a47 <+41359>:	movzwl (%r15),%r12d
0x0000000000582a4b <+41363>:	mov    %r12d,%eax
0x0000000000582a4e <+41366>:	shr    $0x8,%ax
0x0000000000582a52 <+41370>:	movzwl %ax,%eax
0x0000000000582a55 <+41373>:	mov    %eax,0x8(%rsp)
0x0000000000582a59 <+41377>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582a5e <+41382>:	jne    0x582a98 <_PyEval_EvalFrameDefault+41440>
0x0000000000582a60 <+41384>:	movzbl 0xc0(%rsp),%eax
0x0000000000582a68 <+41392>:	lea    -0x1(%rax),%edx
0x0000000000582a6b <+41395>:	cmp    $0xfd,%dl
0x0000000000582a6e <+41398>:	jbe    0x582aa8 <_PyEval_EvalFrameDefault+41456>
0x0000000000582a70 <+41400>:	cmpw   $0x0,0x53c9d4(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582a78 <+41408>:	jne    0x582ac1 <_PyEval_EvalFrameDefault+41481>
0x0000000000582a7a <+41410>:	mov    $0x0,%edx
0x0000000000582a7f <+41415>:	or     %edx,%eax
0x0000000000582a81 <+41417>:	or     %eax,%r12d
0x0000000000582a84 <+41420>:	movzbl %r12b,%eax
0x0000000000582a88 <+41424>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582a90 <+41432>:	mov    %r15,%r13
0x0000000000582a93 <+41435>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582a98 <+41440>:	mov    %r15,%rdx
0x0000000000582a9b <+41443>:	mov    %rbx,%rsi
0x0000000000582a9e <+41446>:	mov    %rbp,%rdi
0x0000000000582aa1 <+41449>:	call   0x573f7b <lltrace_instruction>
0x0000000000582aa6 <+41454>:	jmp    0x582a60 <_PyEval_EvalFrameDefault+41384>
0x0000000000582aa8 <+41456>:	mov    $0x7444e0,%ecx
0x0000000000582aad <+41461>:	mov    $0xfa7,%edx
0x0000000000582ab2 <+41466>:	mov    $0x74045c,%esi
0x0000000000582ab7 <+41471>:	mov    $0x742a50,%edi
0x0000000000582abc <+41476>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582ac1 <+41481>:	mov    $0xffffffff,%edx
0x0000000000582ac6 <+41486>:	jmp    0x582a7f <_PyEval_EvalFrameDefault+41415>
0x0000000000582ac8 <+41488>:	mov    %r12,%rdi
0x0000000000582acb <+41491>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000582ad0 <+41496>:	mov    0x8(%rsp),%eax
0x0000000000582ad4 <+41500>:	neg    %eax
0x0000000000582ad6 <+41502>:	cltq
0x0000000000582ad8 <+41504>:	lea    (%r15,%rax,2),%r13
0x0000000000582adc <+41508>:	mov    0x28(%rsp),%rax
0x0000000000582ae1 <+41513>:	mov    0x64(%rax),%eax
0x0000000000582ae4 <+41516>:	test   %eax,%eax
0x0000000000582ae6 <+41518>:	jne    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000582aec <+41524>:	movzwl 0x0(%r13),%r12d
0x0000000000582af1 <+41529>:	mov    %r12d,%eax
0x0000000000582af4 <+41532>:	shr    $0x8,%ax
0x0000000000582af8 <+41536>:	movzwl %ax,%eax
0x0000000000582afb <+41539>:	mov    %eax,0x8(%rsp)
0x0000000000582aff <+41543>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582b04 <+41548>:	jne    0x582b3b <_PyEval_EvalFrameDefault+41603>
0x0000000000582b06 <+41550>:	movzbl 0xc0(%rsp),%eax
0x0000000000582b0e <+41558>:	lea    -0x1(%rax),%edx
0x0000000000582b11 <+41561>:	cmp    $0xfd,%dl
0x0000000000582b14 <+41564>:	jbe    0x582b4b <_PyEval_EvalFrameDefault+41619>
0x0000000000582b16 <+41566>:	cmpw   $0x0,0x53c92e(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582b1e <+41574>:	jne    0x582b64 <_PyEval_EvalFrameDefault+41644>
0x0000000000582b20 <+41576>:	mov    $0x0,%edx
0x0000000000582b25 <+41581>:	or     %edx,%eax
0x0000000000582b27 <+41583>:	or     %eax,%r12d
0x0000000000582b2a <+41586>:	movzbl %r12b,%eax
0x0000000000582b2e <+41590>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582b36 <+41598>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582b3b <+41603>:	mov    %r13,%rdx
0x0000000000582b3e <+41606>:	mov    %rbx,%rsi
0x0000000000582b41 <+41609>:	mov    %rbp,%rdi
0x0000000000582b44 <+41612>:	call   0x573f7b <lltrace_instruction>
0x0000000000582b49 <+41617>:	jmp    0x582b06 <_PyEval_EvalFrameDefault+41550>
0x0000000000582b4b <+41619>:	mov    $0x7444e0,%ecx
0x0000000000582b50 <+41624>:	mov    $0xfad,%edx
0x0000000000582b55 <+41629>:	mov    $0x74045c,%esi
0x0000000000582b5a <+41634>:	mov    $0x742a50,%edi
0x0000000000582b5f <+41639>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582b64 <+41644>:	mov    $0xffffffff,%edx
0x0000000000582b69 <+41649>:	jmp    0x582b25 <_PyEval_EvalFrameDefault+41581>
0x0000000000582b6b <+41651>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000582b71 <+41657>:	mov    0x8(%rsp),%eax
0x0000000000582b75 <+41661>:	neg    %eax
0x0000000000582b77 <+41663>:	cltq
0x0000000000582b79 <+41665>:	lea    (%r15,%rax,2),%r13
0x0000000000582b7d <+41669>:	mov    0x28(%rsp),%rax
0x0000000000582b82 <+41674>:	mov    0x64(%rax),%eax
0x0000000000582b85 <+41677>:	test   %eax,%eax
0x0000000000582b87 <+41679>:	jne    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000582b8d <+41685>:	mov    %r13,%r15
0x0000000000582b90 <+41688>:	jmp    0x5829c9 <_PyEval_EvalFrameDefault+41233>
0x0000000000582b95 <+41693>:	mov    %r15,%rdx
0x0000000000582b98 <+41696>:	mov    %rbx,%rsi
0x0000000000582b9b <+41699>:	mov    %rbp,%rdi
0x0000000000582b9e <+41702>:	call   0x573f7b <lltrace_instruction>
0x0000000000582ba3 <+41707>:	jmp    0x5829e6 <_PyEval_EvalFrameDefault+41262>
0x0000000000582ba8 <+41712>:	mov    $0x7444e0,%ecx
0x0000000000582bad <+41717>:	mov    $0xfb9,%edx
0x0000000000582bb2 <+41722>:	mov    $0x74045c,%esi
0x0000000000582bb7 <+41727>:	mov    $0x742a50,%edi
0x0000000000582bbc <+41732>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582bc1 <+41737>:	mov    $0xffffffff,%edx
0x0000000000582bc6 <+41742>:	jmp    0x582a0d <_PyEval_EvalFrameDefault+41301>
0x0000000000582bcb <+41747>:	lea    0x2(%r13),%r15
0x0000000000582bcf <+41751>:	mov    %r13,0x38(%rbp)
0x0000000000582bd3 <+41755>:	mov    0x20(%rbp),%rax
0x0000000000582bd7 <+41759>:	movslq 0x4c(%rax),%rax
0x0000000000582bdb <+41763>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000582be0 <+41768>:	mov    %rbx,%rax
0x0000000000582be3 <+41771>:	sub    %rdx,%rax
0x0000000000582be6 <+41774>:	sar    $0x3,%rax
0x0000000000582bea <+41778>:	test   %eax,%eax
0x0000000000582bec <+41780>:	jle    0x582c97 <_PyEval_EvalFrameDefault+41951>
0x0000000000582bf2 <+41786>:	sub    $0x8,%rbx
0x0000000000582bf6 <+41790>:	mov    (%rbx),%r12
0x0000000000582bf9 <+41793>:	cmp    $0x982300,%r12
0x0000000000582c00 <+41800>:	je     0x582cb0 <_PyEval_EvalFrameDefault+41976>
0x0000000000582c06 <+41806>:	cmp    $0x982320,%r12
0x0000000000582c0d <+41813>:	je     0x582cc0 <_PyEval_EvalFrameDefault+41992>
0x0000000000582c13 <+41819>:	mov    %r12,%rdi
0x0000000000582c16 <+41822>:	call   0x4efc71 <PyObject_IsTrue>
0x0000000000582c1b <+41827>:	mov    %eax,%r13d
0x0000000000582c1e <+41830>:	mov    %r12,%rdx
0x0000000000582c21 <+41833>:	mov    $0xfc8,%esi
0x0000000000582c26 <+41838>:	mov    $0x74045c,%edi
0x0000000000582c2b <+41843>:	call   0x573c83 <Py_DECREF>
0x0000000000582c30 <+41848>:	test   %r13d,%r13d
0x0000000000582c33 <+41851>:	jle    0x582cd6 <_PyEval_EvalFrameDefault+42014>
0x0000000000582c39 <+41857>:	mov    %r15,%r13
0x0000000000582c3c <+41860>:	movzwl 0x0(%r13),%r12d
0x0000000000582c41 <+41865>:	mov    %r12d,%eax
0x0000000000582c44 <+41868>:	shr    $0x8,%ax
0x0000000000582c48 <+41872>:	movzwl %ax,%eax
0x0000000000582c4b <+41875>:	mov    %eax,0x8(%rsp)
0x0000000000582c4f <+41879>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582c54 <+41884>:	jne    0x582cea <_PyEval_EvalFrameDefault+42034>
0x0000000000582c5a <+41890>:	movzbl 0xc0(%rsp),%eax
0x0000000000582c62 <+41898>:	lea    -0x1(%rax),%edx
0x0000000000582c65 <+41901>:	cmp    $0xfd,%dl
0x0000000000582c68 <+41904>:	jbe    0x582cfd <_PyEval_EvalFrameDefault+42053>
0x0000000000582c6e <+41910>:	cmpw   $0x0,0x53c7d6(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582c76 <+41918>:	jne    0x582d16 <_PyEval_EvalFrameDefault+42078>
0x0000000000582c7c <+41924>:	mov    $0x0,%edx
0x0000000000582c81 <+41929>:	or     %edx,%eax
0x0000000000582c83 <+41931>:	or     %eax,%r12d
0x0000000000582c86 <+41934>:	movzbl %r12b,%eax
0x0000000000582c8a <+41938>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582c92 <+41946>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582c97 <+41951>:	mov    $0x7444e0,%ecx
0x0000000000582c9c <+41956>:	mov    $0xfbe,%edx
0x0000000000582ca1 <+41961>:	mov    $0x74045c,%esi
0x0000000000582ca6 <+41966>:	mov    $0x7408da,%edi
0x0000000000582cab <+41971>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582cb0 <+41976>:	mov    %r12,%rdi
0x0000000000582cb3 <+41979>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000582cb8 <+41984>:	mov    %r15,%r13
0x0000000000582cbb <+41987>:	jmp    0x582c3c <_PyEval_EvalFrameDefault+41860>
0x0000000000582cc0 <+41992>:	mov    %r12,%rdi
0x0000000000582cc3 <+41995>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000582cc8 <+42000>:	movslq 0x8(%rsp),%rax
0x0000000000582ccd <+42005>:	lea    (%r15,%rax,2),%r13
0x0000000000582cd1 <+42009>:	jmp    0x582c3c <_PyEval_EvalFrameDefault+41860>
0x0000000000582cd6 <+42014>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000582cdc <+42020>:	movslq 0x8(%rsp),%rax
0x0000000000582ce1 <+42025>:	lea    (%r15,%rax,2),%r13
0x0000000000582ce5 <+42029>:	jmp    0x582c3c <_PyEval_EvalFrameDefault+41860>
0x0000000000582cea <+42034>:	mov    %r13,%rdx
0x0000000000582ced <+42037>:	mov    %rbx,%rsi
0x0000000000582cf0 <+42040>:	mov    %rbp,%rdi
0x0000000000582cf3 <+42043>:	call   0x573f7b <lltrace_instruction>
0x0000000000582cf8 <+42048>:	jmp    0x582c5a <_PyEval_EvalFrameDefault+41890>
0x0000000000582cfd <+42053>:	mov    $0x7444e0,%ecx
0x0000000000582d02 <+42058>:	mov    $0xfd1,%edx
0x0000000000582d07 <+42063>:	mov    $0x74045c,%esi
0x0000000000582d0c <+42068>:	mov    $0x742a50,%edi
0x0000000000582d11 <+42073>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582d16 <+42078>:	mov    $0xffffffff,%edx
0x0000000000582d1b <+42083>:	jmp    0x582c81 <_PyEval_EvalFrameDefault+41929>
0x0000000000582d20 <+42088>:	lea    0x2(%r13),%r15
0x0000000000582d24 <+42092>:	mov    %r13,0x38(%rbp)
0x0000000000582d28 <+42096>:	mov    0x20(%rbp),%rax
0x0000000000582d2c <+42100>:	movslq 0x4c(%rax),%rax
0x0000000000582d30 <+42104>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000582d35 <+42109>:	mov    %rbx,%rax
0x0000000000582d38 <+42112>:	sub    %rdx,%rax
0x0000000000582d3b <+42115>:	sar    $0x3,%rax
0x0000000000582d3f <+42119>:	test   %eax,%eax
0x0000000000582d41 <+42121>:	jle    0x582df2 <_PyEval_EvalFrameDefault+42298>
0x0000000000582d47 <+42127>:	sub    $0x8,%rbx
0x0000000000582d4b <+42131>:	mov    (%rbx),%r12
0x0000000000582d4e <+42134>:	cmp    $0x982320,%r12
0x0000000000582d55 <+42141>:	je     0x582e0b <_PyEval_EvalFrameDefault+42323>
0x0000000000582d5b <+42147>:	cmp    $0x982300,%r12
0x0000000000582d62 <+42154>:	je     0x582e94 <_PyEval_EvalFrameDefault+42460>
0x0000000000582d68 <+42160>:	mov    %r12,%rdi
0x0000000000582d6b <+42163>:	call   0x4efc71 <PyObject_IsTrue>
0x0000000000582d70 <+42168>:	mov    %eax,%r13d
0x0000000000582d73 <+42171>:	mov    %r12,%rdx
0x0000000000582d76 <+42174>:	mov    $0xfe1,%esi
0x0000000000582d7b <+42179>:	mov    $0x74045c,%edi
0x0000000000582d80 <+42184>:	call   0x573c83 <Py_DECREF>
0x0000000000582d85 <+42189>:	test   %r13d,%r13d
0x0000000000582d88 <+42192>:	jg     0x582f37 <_PyEval_EvalFrameDefault+42623>
0x0000000000582d8e <+42198>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000582d94 <+42204>:	mov    %r15,%r13
0x0000000000582d97 <+42207>:	movzwl 0x0(%r13),%r12d
0x0000000000582d9c <+42212>:	mov    %r12d,%eax
0x0000000000582d9f <+42215>:	shr    $0x8,%ax
0x0000000000582da3 <+42219>:	movzwl %ax,%eax
0x0000000000582da6 <+42222>:	mov    %eax,0x8(%rsp)
0x0000000000582daa <+42226>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582daf <+42231>:	jne    0x582f58 <_PyEval_EvalFrameDefault+42656>
0x0000000000582db5 <+42237>:	movzbl 0xc0(%rsp),%eax
0x0000000000582dbd <+42245>:	lea    -0x1(%rax),%edx
0x0000000000582dc0 <+42248>:	cmp    $0xfd,%dl
0x0000000000582dc3 <+42251>:	jbe    0x582f6b <_PyEval_EvalFrameDefault+42675>
0x0000000000582dc9 <+42257>:	cmpw   $0x0,0x53c67b(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582dd1 <+42265>:	jne    0x582f84 <_PyEval_EvalFrameDefault+42700>
0x0000000000582dd7 <+42271>:	mov    $0x0,%edx
0x0000000000582ddc <+42276>:	or     %edx,%eax
0x0000000000582dde <+42278>:	or     %eax,%r12d
0x0000000000582de1 <+42281>:	movzbl %r12b,%eax
0x0000000000582de5 <+42285>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582ded <+42293>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582df2 <+42298>:	mov    $0x7444e0,%ecx
0x0000000000582df7 <+42303>:	mov    $0xfd5,%edx
0x0000000000582dfc <+42308>:	mov    $0x74045c,%esi
0x0000000000582e01 <+42313>:	mov    $0x7408da,%edi
0x0000000000582e06 <+42318>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582e0b <+42323>:	mov    %r12,%rdi
0x0000000000582e0e <+42326>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000582e13 <+42331>:	movzwl (%r15),%r12d
0x0000000000582e17 <+42335>:	mov    %r12d,%eax
0x0000000000582e1a <+42338>:	shr    $0x8,%ax
0x0000000000582e1e <+42342>:	movzwl %ax,%eax
0x0000000000582e21 <+42345>:	mov    %eax,0x8(%rsp)
0x0000000000582e25 <+42349>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582e2a <+42354>:	jne    0x582e64 <_PyEval_EvalFrameDefault+42412>
0x0000000000582e2c <+42356>:	movzbl 0xc0(%rsp),%eax
0x0000000000582e34 <+42364>:	lea    -0x1(%rax),%edx
0x0000000000582e37 <+42367>:	cmp    $0xfd,%dl
0x0000000000582e3a <+42370>:	jbe    0x582e74 <_PyEval_EvalFrameDefault+42428>
0x0000000000582e3c <+42372>:	cmpw   $0x0,0x53c608(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582e44 <+42380>:	jne    0x582e8d <_PyEval_EvalFrameDefault+42453>
0x0000000000582e46 <+42382>:	mov    $0x0,%edx
0x0000000000582e4b <+42387>:	or     %edx,%eax
0x0000000000582e4d <+42389>:	or     %eax,%r12d
0x0000000000582e50 <+42392>:	movzbl %r12b,%eax
0x0000000000582e54 <+42396>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582e5c <+42404>:	mov    %r15,%r13
0x0000000000582e5f <+42407>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582e64 <+42412>:	mov    %r15,%rdx
0x0000000000582e67 <+42415>:	mov    %rbx,%rsi
0x0000000000582e6a <+42418>:	mov    %rbp,%rdi
0x0000000000582e6d <+42421>:	call   0x573f7b <lltrace_instruction>
0x0000000000582e72 <+42426>:	jmp    0x582e2c <_PyEval_EvalFrameDefault+42356>
0x0000000000582e74 <+42428>:	mov    $0x7444e0,%ecx
0x0000000000582e79 <+42433>:	mov    $0xfd8,%edx
0x0000000000582e7e <+42438>:	mov    $0x74045c,%esi
0x0000000000582e83 <+42443>:	mov    $0x742a50,%edi
0x0000000000582e88 <+42448>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582e8d <+42453>:	mov    $0xffffffff,%edx
0x0000000000582e92 <+42458>:	jmp    0x582e4b <_PyEval_EvalFrameDefault+42387>
0x0000000000582e94 <+42460>:	mov    %r12,%rdi
0x0000000000582e97 <+42463>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000582e9c <+42468>:	mov    0x8(%rsp),%eax
0x0000000000582ea0 <+42472>:	neg    %eax
0x0000000000582ea2 <+42474>:	cltq
0x0000000000582ea4 <+42476>:	lea    (%r15,%rax,2),%r13
0x0000000000582ea8 <+42480>:	mov    0x28(%rsp),%rax
0x0000000000582ead <+42485>:	mov    0x64(%rax),%eax
0x0000000000582eb0 <+42488>:	test   %eax,%eax
0x0000000000582eb2 <+42490>:	jne    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000582eb8 <+42496>:	movzwl 0x0(%r13),%r12d
0x0000000000582ebd <+42501>:	mov    %r12d,%eax
0x0000000000582ec0 <+42504>:	shr    $0x8,%ax
0x0000000000582ec4 <+42508>:	movzwl %ax,%eax
0x0000000000582ec7 <+42511>:	mov    %eax,0x8(%rsp)
0x0000000000582ecb <+42515>:	cmpl   $0x0,0x14(%rsp)
0x0000000000582ed0 <+42520>:	jne    0x582f07 <_PyEval_EvalFrameDefault+42575>
0x0000000000582ed2 <+42522>:	movzbl 0xc0(%rsp),%eax
0x0000000000582eda <+42530>:	lea    -0x1(%rax),%edx
0x0000000000582edd <+42533>:	cmp    $0xfd,%dl
0x0000000000582ee0 <+42536>:	jbe    0x582f17 <_PyEval_EvalFrameDefault+42591>
0x0000000000582ee2 <+42538>:	cmpw   $0x0,0x53c562(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000582eea <+42546>:	jne    0x582f30 <_PyEval_EvalFrameDefault+42616>
0x0000000000582eec <+42548>:	mov    $0x0,%edx
0x0000000000582ef1 <+42553>:	or     %edx,%eax
0x0000000000582ef3 <+42555>:	or     %eax,%r12d
0x0000000000582ef6 <+42558>:	movzbl %r12b,%eax
0x0000000000582efa <+42562>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000582f02 <+42570>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000582f07 <+42575>:	mov    %r13,%rdx
0x0000000000582f0a <+42578>:	mov    %rbx,%rsi
0x0000000000582f0d <+42581>:	mov    %rbp,%rdi
0x0000000000582f10 <+42584>:	call   0x573f7b <lltrace_instruction>
0x0000000000582f15 <+42589>:	jmp    0x582ed2 <_PyEval_EvalFrameDefault+42522>
0x0000000000582f17 <+42591>:	mov    $0x7444e0,%ecx
0x0000000000582f1c <+42596>:	mov    $0xfde,%edx
0x0000000000582f21 <+42601>:	mov    $0x74045c,%esi
0x0000000000582f26 <+42606>:	mov    $0x742a50,%edi
0x0000000000582f2b <+42611>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582f30 <+42616>:	mov    $0xffffffff,%edx
0x0000000000582f35 <+42621>:	jmp    0x582ef1 <_PyEval_EvalFrameDefault+42553>
0x0000000000582f37 <+42623>:	mov    0x8(%rsp),%eax
0x0000000000582f3b <+42627>:	neg    %eax
0x0000000000582f3d <+42629>:	cltq
0x0000000000582f3f <+42631>:	lea    (%r15,%rax,2),%r13
0x0000000000582f43 <+42635>:	mov    0x28(%rsp),%rax
0x0000000000582f48 <+42640>:	mov    0x64(%rax),%eax
0x0000000000582f4b <+42643>:	test   %eax,%eax
0x0000000000582f4d <+42645>:	je     0x582d97 <_PyEval_EvalFrameDefault+42207>
0x0000000000582f53 <+42651>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000582f58 <+42656>:	mov    %r13,%rdx
0x0000000000582f5b <+42659>:	mov    %rbx,%rsi
0x0000000000582f5e <+42662>:	mov    %rbp,%rdi
0x0000000000582f61 <+42665>:	call   0x573f7b <lltrace_instruction>
0x0000000000582f66 <+42670>:	jmp    0x582db5 <_PyEval_EvalFrameDefault+42237>
0x0000000000582f6b <+42675>:	mov    $0x7444e0,%ecx
0x0000000000582f70 <+42680>:	mov    $0xfea,%edx
0x0000000000582f75 <+42685>:	mov    $0x74045c,%esi
0x0000000000582f7a <+42690>:	mov    $0x742a50,%edi
0x0000000000582f7f <+42695>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000582f84 <+42700>:	mov    $0xffffffff,%edx
0x0000000000582f89 <+42705>:	jmp    0x582ddc <_PyEval_EvalFrameDefault+42276>
0x0000000000582f8e <+42710>:	lea    0x2(%r13),%r15
0x0000000000582f92 <+42714>:	mov    %r13,0x38(%rbp)
0x0000000000582f96 <+42718>:	mov    0x20(%rbp),%rax
0x0000000000582f9a <+42722>:	movslq 0x4c(%rax),%rax
0x0000000000582f9e <+42726>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000582fa3 <+42731>:	mov    %rbx,%rax
0x0000000000582fa6 <+42734>:	sub    %rdx,%rax
0x0000000000582fa9 <+42737>:	sar    $0x3,%rax
0x0000000000582fad <+42741>:	test   %eax,%eax
0x0000000000582faf <+42743>:	jle    0x583060 <_PyEval_EvalFrameDefault+42920>
0x0000000000582fb5 <+42749>:	sub    $0x8,%rbx
0x0000000000582fb9 <+42753>:	mov    (%rbx),%r12
0x0000000000582fbc <+42756>:	cmp    $0x982320,%r12
0x0000000000582fc3 <+42763>:	je     0x583079 <_PyEval_EvalFrameDefault+42945>
0x0000000000582fc9 <+42769>:	cmp    $0x982300,%r12
0x0000000000582fd0 <+42776>:	je     0x583089 <_PyEval_EvalFrameDefault+42961>
0x0000000000582fd6 <+42782>:	mov    %r12,%rdi
0x0000000000582fd9 <+42785>:	call   0x4efc71 <PyObject_IsTrue>
0x0000000000582fde <+42790>:	mov    %eax,%r13d
0x0000000000582fe1 <+42793>:	mov    %r12,%rdx
0x0000000000582fe4 <+42796>:	mov    $0xff8,%esi
0x0000000000582fe9 <+42801>:	mov    $0x74045c,%edi
0x0000000000582fee <+42806>:	call   0x573c83 <Py_DECREF>
0x0000000000582ff3 <+42811>:	test   %r13d,%r13d
0x0000000000582ff6 <+42814>:	jle    0x58309f <_PyEval_EvalFrameDefault+42983>
0x0000000000582ffc <+42820>:	movslq 0x8(%rsp),%rax
0x0000000000583001 <+42825>:	lea    (%r15,%rax,2),%r13
0x0000000000583005 <+42829>:	movzwl 0x0(%r13),%r12d
0x000000000058300a <+42834>:	mov    %r12d,%eax
0x000000000058300d <+42837>:	shr    $0x8,%ax
0x0000000000583011 <+42841>:	movzwl %ax,%eax
0x0000000000583014 <+42844>:	mov    %eax,0x8(%rsp)
0x0000000000583018 <+42848>:	cmpl   $0x0,0x14(%rsp)
0x000000000058301d <+42853>:	jne    0x5830ad <_PyEval_EvalFrameDefault+42997>
0x0000000000583023 <+42859>:	movzbl 0xc0(%rsp),%eax
0x000000000058302b <+42867>:	lea    -0x1(%rax),%edx
0x000000000058302e <+42870>:	cmp    $0xfd,%dl
0x0000000000583031 <+42873>:	jbe    0x5830c0 <_PyEval_EvalFrameDefault+43016>
0x0000000000583037 <+42879>:	cmpw   $0x0,0x53c40d(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058303f <+42887>:	jne    0x5830d9 <_PyEval_EvalFrameDefault+43041>
0x0000000000583045 <+42893>:	mov    $0x0,%edx
0x000000000058304a <+42898>:	or     %edx,%eax
0x000000000058304c <+42900>:	or     %eax,%r12d
0x000000000058304f <+42903>:	movzbl %r12b,%eax
0x0000000000583053 <+42907>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058305b <+42915>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583060 <+42920>:	mov    $0x7444e0,%ecx
0x0000000000583065 <+42925>:	mov    $0xfee,%edx
0x000000000058306a <+42930>:	mov    $0x74045c,%esi
0x000000000058306f <+42935>:	mov    $0x7408da,%edi
0x0000000000583074 <+42940>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583079 <+42945>:	mov    %r12,%rdi
0x000000000058307c <+42948>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000583081 <+42953>:	mov    %r15,%r13
0x0000000000583084 <+42956>:	jmp    0x583005 <_PyEval_EvalFrameDefault+42829>
0x0000000000583089 <+42961>:	mov    %r12,%rdi
0x000000000058308c <+42964>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000583091 <+42969>:	movslq 0x8(%rsp),%rax
0x0000000000583096 <+42974>:	lea    (%r15,%rax,2),%r13
0x000000000058309a <+42978>:	jmp    0x583005 <_PyEval_EvalFrameDefault+42829>
0x000000000058309f <+42983>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005830a5 <+42989>:	mov    %r15,%r13
0x00000000005830a8 <+42992>:	jmp    0x583005 <_PyEval_EvalFrameDefault+42829>
0x00000000005830ad <+42997>:	mov    %r13,%rdx
0x00000000005830b0 <+43000>:	mov    %rbx,%rsi
0x00000000005830b3 <+43003>:	mov    %rbp,%rdi
0x00000000005830b6 <+43006>:	call   0x573f7b <lltrace_instruction>
0x00000000005830bb <+43011>:	jmp    0x583023 <_PyEval_EvalFrameDefault+42859>
0x00000000005830c0 <+43016>:	mov    $0x7444e0,%ecx
0x00000000005830c5 <+43021>:	mov    $0x1001,%edx
0x00000000005830ca <+43026>:	mov    $0x74045c,%esi
0x00000000005830cf <+43031>:	mov    $0x742a50,%edi
0x00000000005830d4 <+43036>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005830d9 <+43041>:	mov    $0xffffffff,%edx
0x00000000005830de <+43046>:	jmp    0x58304a <_PyEval_EvalFrameDefault+42898>
0x00000000005830e3 <+43051>:	lea    0x2(%r13),%r14
0x00000000005830e7 <+43055>:	mov    %r13,0x38(%rbp)
0x00000000005830eb <+43059>:	mov    0x20(%rbp),%rax
0x00000000005830ef <+43063>:	movslq 0x4c(%rax),%rax
0x00000000005830f3 <+43067>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005830f8 <+43072>:	mov    %rbx,%rax
0x00000000005830fb <+43075>:	sub    %rdx,%rax
0x00000000005830fe <+43078>:	sar    $0x3,%rax
0x0000000000583102 <+43082>:	test   %eax,%eax
0x0000000000583104 <+43084>:	jle    0x583198 <_PyEval_EvalFrameDefault+43232>
0x000000000058310a <+43090>:	sub    $0x8,%rbx
0x000000000058310e <+43094>:	mov    (%rbx),%rdx
0x0000000000583111 <+43097>:	cmp    $0x997120,%rdx
0x0000000000583118 <+43104>:	je     0x5831e1 <_PyEval_EvalFrameDefault+43305>
0x000000000058311e <+43110>:	mov    $0x1007,%esi
0x0000000000583123 <+43115>:	mov    $0x74045c,%edi
0x0000000000583128 <+43120>:	call   0x573c83 <Py_DECREF>
0x000000000058312d <+43125>:	mov    0x8(%rsp),%eax
0x0000000000583131 <+43129>:	neg    %eax
0x0000000000583133 <+43131>:	cltq
0x0000000000583135 <+43133>:	lea    (%r14,%rax,2),%r13
0x0000000000583139 <+43137>:	mov    0x28(%rsp),%rax
0x000000000058313e <+43142>:	mov    0x64(%rax),%eax
0x0000000000583141 <+43145>:	test   %eax,%eax
0x0000000000583143 <+43147>:	jne    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000583149 <+43153>:	movzwl 0x0(%r13),%r12d
0x000000000058314e <+43158>:	mov    %r12d,%eax
0x0000000000583151 <+43161>:	shr    $0x8,%ax
0x0000000000583155 <+43165>:	movzwl %ax,%eax
0x0000000000583158 <+43168>:	mov    %eax,0x8(%rsp)
0x000000000058315c <+43172>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583161 <+43177>:	jne    0x5831b1 <_PyEval_EvalFrameDefault+43257>
0x0000000000583163 <+43179>:	movzbl 0xc0(%rsp),%eax
0x000000000058316b <+43187>:	lea    -0x1(%rax),%edx
0x000000000058316e <+43190>:	cmp    $0xfd,%dl
0x0000000000583171 <+43193>:	jbe    0x5831c1 <_PyEval_EvalFrameDefault+43273>
0x0000000000583173 <+43195>:	cmpw   $0x0,0x53c2d1(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058317b <+43203>:	jne    0x5831da <_PyEval_EvalFrameDefault+43298>
0x000000000058317d <+43205>:	mov    $0x0,%edx
0x0000000000583182 <+43210>:	or     %edx,%eax
0x0000000000583184 <+43212>:	or     %eax,%r12d
0x0000000000583187 <+43215>:	movzbl %r12b,%eax
0x000000000058318b <+43219>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583193 <+43227>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583198 <+43232>:	mov    $0x7444e0,%ecx
0x000000000058319d <+43237>:	mov    $0x1005,%edx
0x00000000005831a2 <+43242>:	mov    $0x74045c,%esi
0x00000000005831a7 <+43247>:	mov    $0x7408da,%edi
0x00000000005831ac <+43252>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005831b1 <+43257>:	mov    %r13,%rdx
0x00000000005831b4 <+43260>:	mov    %rbx,%rsi
0x00000000005831b7 <+43263>:	mov    %rbp,%rdi
0x00000000005831ba <+43266>:	call   0x573f7b <lltrace_instruction>
0x00000000005831bf <+43271>:	jmp    0x583163 <_PyEval_EvalFrameDefault+43179>
0x00000000005831c1 <+43273>:	mov    $0x7444e0,%ecx
0x00000000005831c6 <+43278>:	mov    $0x100a,%edx
0x00000000005831cb <+43283>:	mov    $0x74045c,%esi
0x00000000005831d0 <+43288>:	mov    $0x742a50,%edi
0x00000000005831d5 <+43293>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005831da <+43298>:	mov    $0xffffffff,%edx
0x00000000005831df <+43303>:	jmp    0x583182 <_PyEval_EvalFrameDefault+43210>
0x00000000005831e1 <+43305>:	mov    %rdx,%rdi
0x00000000005831e4 <+43308>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x00000000005831e9 <+43313>:	movzwl (%r14),%r12d
0x00000000005831ed <+43317>:	mov    %r12d,%eax
0x00000000005831f0 <+43320>:	shr    $0x8,%ax
0x00000000005831f4 <+43324>:	movzwl %ax,%eax
0x00000000005831f7 <+43327>:	mov    %eax,0x8(%rsp)
0x00000000005831fb <+43331>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583200 <+43336>:	jne    0x58323a <_PyEval_EvalFrameDefault+43394>
0x0000000000583202 <+43338>:	movzbl 0xc0(%rsp),%eax
0x000000000058320a <+43346>:	lea    -0x1(%rax),%edx
0x000000000058320d <+43349>:	cmp    $0xfd,%dl
0x0000000000583210 <+43352>:	jbe    0x58324a <_PyEval_EvalFrameDefault+43410>
0x0000000000583212 <+43354>:	cmpw   $0x0,0x53c232(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058321a <+43362>:	jne    0x583263 <_PyEval_EvalFrameDefault+43435>
0x000000000058321c <+43364>:	mov    $0x0,%edx
0x0000000000583221 <+43369>:	or     %edx,%eax
0x0000000000583223 <+43371>:	or     %eax,%r12d
0x0000000000583226 <+43374>:	movzbl %r12b,%eax
0x000000000058322a <+43378>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583232 <+43386>:	mov    %r14,%r13
0x0000000000583235 <+43389>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058323a <+43394>:	mov    %r14,%rdx
0x000000000058323d <+43397>:	mov    %rbx,%rsi
0x0000000000583240 <+43400>:	mov    %rbp,%rdi
0x0000000000583243 <+43403>:	call   0x573f7b <lltrace_instruction>
0x0000000000583248 <+43408>:	jmp    0x583202 <_PyEval_EvalFrameDefault+43338>
0x000000000058324a <+43410>:	mov    $0x7444e0,%ecx
0x000000000058324f <+43415>:	mov    $0x100d,%edx
0x0000000000583254 <+43420>:	mov    $0x74045c,%esi
0x0000000000583259 <+43425>:	mov    $0x742a50,%edi
0x000000000058325e <+43430>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583263 <+43435>:	mov    $0xffffffff,%edx
0x0000000000583268 <+43440>:	jmp    0x583221 <_PyEval_EvalFrameDefault+43369>
0x000000000058326a <+43442>:	lea    0x2(%r13),%rcx
0x000000000058326e <+43446>:	mov    %r13,0x38(%rbp)
0x0000000000583272 <+43450>:	mov    0x20(%rbp),%rax
0x0000000000583276 <+43454>:	movslq 0x4c(%rax),%rax
0x000000000058327a <+43458>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058327f <+43463>:	mov    %rbx,%rax
0x0000000000583282 <+43466>:	sub    %rdx,%rax
0x0000000000583285 <+43469>:	sar    $0x3,%rax
0x0000000000583289 <+43473>:	test   %eax,%eax
0x000000000058328b <+43475>:	jle    0x583308 <_PyEval_EvalFrameDefault+43600>
0x000000000058328d <+43477>:	sub    $0x8,%rbx
0x0000000000583291 <+43481>:	mov    (%rbx),%rdx
0x0000000000583294 <+43484>:	cmp    $0x997120,%rdx
0x000000000058329b <+43491>:	je     0x583321 <_PyEval_EvalFrameDefault+43625>
0x00000000005832a1 <+43497>:	movslq 0x8(%rsp),%rax
0x00000000005832a6 <+43502>:	lea    (%rcx,%rax,2),%r13
0x00000000005832aa <+43506>:	mov    $0x1015,%esi
0x00000000005832af <+43511>:	mov    $0x74045c,%edi
0x00000000005832b4 <+43516>:	call   0x573c83 <Py_DECREF>
0x00000000005832b9 <+43521>:	movzwl 0x0(%r13),%r12d
0x00000000005832be <+43526>:	mov    %r12d,%eax
0x00000000005832c1 <+43529>:	shr    $0x8,%ax
0x00000000005832c5 <+43533>:	movzwl %ax,%eax
0x00000000005832c8 <+43536>:	mov    %eax,0x8(%rsp)
0x00000000005832cc <+43540>:	cmpl   $0x0,0x14(%rsp)
0x00000000005832d1 <+43545>:	jne    0x583326 <_PyEval_EvalFrameDefault+43630>
0x00000000005832d3 <+43547>:	movzbl 0xc0(%rsp),%eax
0x00000000005832db <+43555>:	lea    -0x1(%rax),%edx
0x00000000005832de <+43558>:	cmp    $0xfd,%dl
0x00000000005832e1 <+43561>:	jbe    0x583336 <_PyEval_EvalFrameDefault+43646>
0x00000000005832e3 <+43563>:	cmpw   $0x0,0x53c161(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005832eb <+43571>:	jne    0x58334f <_PyEval_EvalFrameDefault+43671>
0x00000000005832ed <+43573>:	mov    $0x0,%edx
0x00000000005832f2 <+43578>:	or     %edx,%eax
0x00000000005832f4 <+43580>:	or     %eax,%r12d
0x00000000005832f7 <+43583>:	movzbl %r12b,%eax
0x00000000005832fb <+43587>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583303 <+43595>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583308 <+43600>:	mov    $0x7444e0,%ecx
0x000000000058330d <+43605>:	mov    $0x1011,%edx
0x0000000000583312 <+43610>:	mov    $0x74045c,%esi
0x0000000000583317 <+43615>:	mov    $0x7408da,%edi
0x000000000058331c <+43620>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583321 <+43625>:	mov    %rcx,%r13
0x0000000000583324 <+43628>:	jmp    0x5832aa <_PyEval_EvalFrameDefault+43506>
0x0000000000583326 <+43630>:	mov    %r13,%rdx
0x0000000000583329 <+43633>:	mov    %rbx,%rsi
0x000000000058332c <+43636>:	mov    %rbp,%rdi
0x000000000058332f <+43639>:	call   0x573f7b <lltrace_instruction>
0x0000000000583334 <+43644>:	jmp    0x5832d3 <_PyEval_EvalFrameDefault+43547>
0x0000000000583336 <+43646>:	mov    $0x7444e0,%ecx
0x000000000058333b <+43651>:	mov    $0x1016,%edx
0x0000000000583340 <+43656>:	mov    $0x74045c,%esi
0x0000000000583345 <+43661>:	mov    $0x742a50,%edi
0x000000000058334a <+43666>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058334f <+43671>:	mov    $0xffffffff,%edx
0x0000000000583354 <+43676>:	jmp    0x5832f2 <_PyEval_EvalFrameDefault+43578>
0x0000000000583356 <+43678>:	lea    0x2(%r13),%r12
0x000000000058335a <+43682>:	mov    %r13,0x38(%rbp)
0x000000000058335e <+43686>:	mov    0x20(%rbp),%rax
0x0000000000583362 <+43690>:	movslq 0x4c(%rax),%rax
0x0000000000583366 <+43694>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058336b <+43699>:	mov    %rbx,%rax
0x000000000058336e <+43702>:	sub    %rdx,%rax
0x0000000000583371 <+43705>:	sar    $0x3,%rax
0x0000000000583375 <+43709>:	test   %eax,%eax
0x0000000000583377 <+43711>:	jle    0x5833ee <_PyEval_EvalFrameDefault+43830>
0x0000000000583379 <+43713>:	sub    $0x8,%rbx
0x000000000058337d <+43717>:	mov    (%rbx),%rdx
0x0000000000583380 <+43720>:	cmp    $0x997120,%rdx
0x0000000000583387 <+43727>:	je     0x583407 <_PyEval_EvalFrameDefault+43855>
0x0000000000583389 <+43729>:	mov    $0x1021,%esi
0x000000000058338e <+43734>:	mov    $0x74045c,%edi
0x0000000000583393 <+43739>:	call   0x573c83 <Py_DECREF>
0x0000000000583398 <+43744>:	mov    %r12,%r13
0x000000000058339b <+43747>:	movzwl 0x0(%r13),%r12d
0x00000000005833a0 <+43752>:	mov    %r12d,%eax
0x00000000005833a3 <+43755>:	shr    $0x8,%ax
0x00000000005833a7 <+43759>:	movzwl %ax,%eax
0x00000000005833aa <+43762>:	mov    %eax,0x8(%rsp)
0x00000000005833ae <+43766>:	cmpl   $0x0,0x14(%rsp)
0x00000000005833b3 <+43771>:	jne    0x583430 <_PyEval_EvalFrameDefault+43896>
0x00000000005833b5 <+43773>:	movzbl 0xc0(%rsp),%eax
0x00000000005833bd <+43781>:	lea    -0x1(%rax),%edx
0x00000000005833c0 <+43784>:	cmp    $0xfd,%dl
0x00000000005833c3 <+43787>:	jbe    0x583443 <_PyEval_EvalFrameDefault+43915>
0x00000000005833c5 <+43789>:	cmpw   $0x0,0x53c07f(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005833cd <+43797>:	jne    0x58345c <_PyEval_EvalFrameDefault+43940>
0x00000000005833d3 <+43803>:	mov    $0x0,%edx
0x00000000005833d8 <+43808>:	or     %edx,%eax
0x00000000005833da <+43810>:	or     %eax,%r12d
0x00000000005833dd <+43813>:	movzbl %r12b,%eax
0x00000000005833e1 <+43817>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005833e9 <+43825>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005833ee <+43830>:	mov    $0x7444e0,%ecx
0x00000000005833f3 <+43835>:	mov    $0x101a,%edx
0x00000000005833f8 <+43840>:	mov    $0x74045c,%esi
0x00000000005833fd <+43845>:	mov    $0x7408da,%edi
0x0000000000583402 <+43850>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583407 <+43855>:	mov    %rdx,%rdi
0x000000000058340a <+43858>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x000000000058340f <+43863>:	mov    0x8(%rsp),%eax
0x0000000000583413 <+43867>:	neg    %eax
0x0000000000583415 <+43869>:	cltq
0x0000000000583417 <+43871>:	lea    (%r12,%rax,2),%r13
0x000000000058341b <+43875>:	mov    0x28(%rsp),%rax
0x0000000000583420 <+43880>:	mov    0x64(%rax),%eax
0x0000000000583423 <+43883>:	test   %eax,%eax
0x0000000000583425 <+43885>:	je     0x58339b <_PyEval_EvalFrameDefault+43747>
0x000000000058342b <+43891>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000583430 <+43896>:	mov    %r13,%rdx
0x0000000000583433 <+43899>:	mov    %rbx,%rsi
0x0000000000583436 <+43902>:	mov    %rbp,%rdi
0x0000000000583439 <+43905>:	call   0x573f7b <lltrace_instruction>
0x000000000058343e <+43910>:	jmp    0x5833b5 <_PyEval_EvalFrameDefault+43773>
0x0000000000583443 <+43915>:	mov    $0x7444e0,%ecx
0x0000000000583448 <+43920>:	mov    $0x1023,%edx
0x000000000058344d <+43925>:	mov    $0x74045c,%esi
0x0000000000583452 <+43930>:	mov    $0x742a50,%edi
0x0000000000583457 <+43935>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058345c <+43940>:	mov    $0xffffffff,%edx
0x0000000000583461 <+43945>:	jmp    0x5833d8 <_PyEval_EvalFrameDefault+43808>
0x0000000000583466 <+43950>:	lea    0x2(%r13),%r12
0x000000000058346a <+43954>:	mov    %r13,0x38(%rbp)
0x000000000058346e <+43958>:	mov    0x20(%rbp),%rax
0x0000000000583472 <+43962>:	movslq 0x4c(%rax),%rax
0x0000000000583476 <+43966>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058347b <+43971>:	mov    %rbx,%rax
0x000000000058347e <+43974>:	sub    %rdx,%rax
0x0000000000583481 <+43977>:	sar    $0x3,%rax
0x0000000000583485 <+43981>:	test   %eax,%eax
0x0000000000583487 <+43983>:	jle    0x5834fa <_PyEval_EvalFrameDefault+44098>
0x0000000000583489 <+43985>:	sub    $0x8,%rbx
0x000000000058348d <+43989>:	mov    (%rbx),%rdx
0x0000000000583490 <+43992>:	cmp    $0x997120,%rdx
0x0000000000583497 <+43999>:	je     0x583513 <_PyEval_EvalFrameDefault+44123>
0x0000000000583499 <+44001>:	mov    $0x102d,%esi
0x000000000058349e <+44006>:	mov    $0x74045c,%edi
0x00000000005834a3 <+44011>:	call   0x573c83 <Py_DECREF>
0x00000000005834a8 <+44016>:	mov    %r12,%r13
0x00000000005834ab <+44019>:	movzwl 0x0(%r13),%r12d
0x00000000005834b0 <+44024>:	mov    %r12d,%eax
0x00000000005834b3 <+44027>:	shr    $0x8,%ax
0x00000000005834b7 <+44031>:	movzwl %ax,%eax
0x00000000005834ba <+44034>:	mov    %eax,0x8(%rsp)
0x00000000005834be <+44038>:	cmpl   $0x0,0x14(%rsp)
0x00000000005834c3 <+44043>:	jne    0x583526 <_PyEval_EvalFrameDefault+44142>
0x00000000005834c5 <+44045>:	movzbl 0xc0(%rsp),%eax
0x00000000005834cd <+44053>:	lea    -0x1(%rax),%edx
0x00000000005834d0 <+44056>:	cmp    $0xfd,%dl
0x00000000005834d3 <+44059>:	jbe    0x583536 <_PyEval_EvalFrameDefault+44158>
0x00000000005834d5 <+44061>:	cmpw   $0x0,0x53bf6f(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005834dd <+44069>:	jne    0x58354f <_PyEval_EvalFrameDefault+44183>
0x00000000005834df <+44071>:	mov    $0x0,%edx
0x00000000005834e4 <+44076>:	or     %edx,%eax
0x00000000005834e6 <+44078>:	or     %eax,%r12d
0x00000000005834e9 <+44081>:	movzbl %r12b,%eax
0x00000000005834ed <+44085>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005834f5 <+44093>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005834fa <+44098>:	mov    $0x7444e0,%ecx
0x00000000005834ff <+44103>:	mov    $0x1027,%edx
0x0000000000583504 <+44108>:	mov    $0x74045c,%esi
0x0000000000583509 <+44113>:	mov    $0x7408da,%edi
0x000000000058350e <+44118>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583513 <+44123>:	mov    %rdx,%rdi
0x0000000000583516 <+44126>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x000000000058351b <+44131>:	movslq 0x8(%rsp),%rax
0x0000000000583520 <+44136>:	lea    (%r12,%rax,2),%r13
0x0000000000583524 <+44140>:	jmp    0x5834ab <_PyEval_EvalFrameDefault+44019>
0x0000000000583526 <+44142>:	mov    %r13,%rdx
0x0000000000583529 <+44145>:	mov    %rbx,%rsi
0x000000000058352c <+44148>:	mov    %rbp,%rdi
0x000000000058352f <+44151>:	call   0x573f7b <lltrace_instruction>
0x0000000000583534 <+44156>:	jmp    0x5834c5 <_PyEval_EvalFrameDefault+44045>
0x0000000000583536 <+44158>:	mov    $0x7444e0,%ecx
0x000000000058353b <+44163>:	mov    $0x102f,%edx
0x0000000000583540 <+44168>:	mov    $0x74045c,%esi
0x0000000000583545 <+44173>:	mov    $0x742a50,%edi
0x000000000058354a <+44178>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058354f <+44183>:	mov    $0xffffffff,%edx
0x0000000000583554 <+44188>:	jmp    0x5834e4 <_PyEval_EvalFrameDefault+44076>
0x0000000000583556 <+44190>:	lea    0x2(%r13),%r15
0x000000000058355a <+44194>:	mov    %r13,0x38(%rbp)
0x000000000058355e <+44198>:	mov    -0x8(%rbx),%r12
0x0000000000583562 <+44202>:	cmp    $0x982300,%r12
0x0000000000583569 <+44209>:	je     0x58361f <_PyEval_EvalFrameDefault+44391>
0x000000000058356f <+44215>:	cmp    $0x982320,%r12
0x0000000000583576 <+44222>:	je     0x5836e0 <_PyEval_EvalFrameDefault+44584>
0x000000000058357c <+44228>:	mov    %r12,%rdi
0x000000000058357f <+44231>:	call   0x4efc71 <PyObject_IsTrue>
0x0000000000583584 <+44236>:	test   %eax,%eax
0x0000000000583586 <+44238>:	jle    0x583781 <_PyEval_EvalFrameDefault+44745>
0x000000000058358c <+44244>:	mov    0x20(%rbp),%rax
0x0000000000583590 <+44248>:	movslq 0x4c(%rax),%rax
0x0000000000583594 <+44252>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000583599 <+44257>:	mov    %rbx,%rax
0x000000000058359c <+44260>:	sub    %rdx,%rax
0x000000000058359f <+44263>:	sar    $0x3,%rax
0x00000000005835a3 <+44267>:	test   %eax,%eax
0x00000000005835a5 <+44269>:	jle    0x583768 <_PyEval_EvalFrameDefault+44720>
0x00000000005835ab <+44275>:	sub    $0x8,%rbx
0x00000000005835af <+44279>:	mov    %r12,%rdx
0x00000000005835b2 <+44282>:	mov    $0x1041,%esi
0x00000000005835b7 <+44287>:	mov    $0x74045c,%edi
0x00000000005835bc <+44292>:	call   0x573c83 <Py_DECREF>
0x00000000005835c1 <+44297>:	mov    %r15,%r13
0x00000000005835c4 <+44300>:	movzwl 0x0(%r13),%r12d
0x00000000005835c9 <+44305>:	mov    %r12d,%eax
0x00000000005835cc <+44308>:	shr    $0x8,%ax
0x00000000005835d0 <+44312>:	movzwl %ax,%eax
0x00000000005835d3 <+44315>:	mov    %eax,0x8(%rsp)
0x00000000005835d7 <+44319>:	cmpl   $0x0,0x14(%rsp)
0x00000000005835dc <+44324>:	jne    0x583795 <_PyEval_EvalFrameDefault+44765>
0x00000000005835e2 <+44330>:	movzbl 0xc0(%rsp),%eax
0x00000000005835ea <+44338>:	lea    -0x1(%rax),%edx
0x00000000005835ed <+44341>:	cmp    $0xfd,%dl
0x00000000005835f0 <+44344>:	jbe    0x5837a8 <_PyEval_EvalFrameDefault+44784>
0x00000000005835f6 <+44350>:	cmpw   $0x0,0x53be4e(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005835fe <+44358>:	jne    0x5837c1 <_PyEval_EvalFrameDefault+44809>
0x0000000000583604 <+44364>:	mov    $0x0,%edx
0x0000000000583609 <+44369>:	or     %edx,%eax
0x000000000058360b <+44371>:	or     %eax,%r12d
0x000000000058360e <+44374>:	movzbl %r12b,%eax
0x0000000000583612 <+44378>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058361a <+44386>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058361f <+44391>:	mov    0x20(%rbp),%rax
0x0000000000583623 <+44395>:	movslq 0x4c(%rax),%rax
0x0000000000583627 <+44399>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058362c <+44404>:	mov    %rbx,%rax
0x000000000058362f <+44407>:	sub    %rdx,%rax
0x0000000000583632 <+44410>:	sar    $0x3,%rax
0x0000000000583636 <+44414>:	test   %eax,%eax
0x0000000000583638 <+44416>:	jle    0x583697 <_PyEval_EvalFrameDefault+44511>
0x000000000058363a <+44418>:	sub    $0x8,%rbx
0x000000000058363e <+44422>:	mov    %r12,%rdi
0x0000000000583641 <+44425>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x0000000000583646 <+44430>:	movzwl (%r15),%r12d
0x000000000058364a <+44434>:	mov    %r12d,%eax
0x000000000058364d <+44437>:	shr    $0x8,%ax
0x0000000000583651 <+44441>:	movzwl %ax,%eax
0x0000000000583654 <+44444>:	mov    %eax,0x8(%rsp)
0x0000000000583658 <+44448>:	cmpl   $0x0,0x14(%rsp)
0x000000000058365d <+44453>:	jne    0x5836b0 <_PyEval_EvalFrameDefault+44536>
0x000000000058365f <+44455>:	movzbl 0xc0(%rsp),%eax
0x0000000000583667 <+44463>:	lea    -0x1(%rax),%edx
0x000000000058366a <+44466>:	cmp    $0xfd,%dl
0x000000000058366d <+44469>:	jbe    0x5836c0 <_PyEval_EvalFrameDefault+44552>
0x000000000058366f <+44471>:	cmpw   $0x0,0x53bdd5(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583677 <+44479>:	jne    0x5836d9 <_PyEval_EvalFrameDefault+44577>
0x0000000000583679 <+44481>:	mov    $0x0,%edx
0x000000000058367e <+44486>:	or     %edx,%eax
0x0000000000583680 <+44488>:	or     %eax,%r12d
0x0000000000583683 <+44491>:	movzbl %r12b,%eax
0x0000000000583687 <+44495>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058368f <+44503>:	mov    %r15,%r13
0x0000000000583692 <+44506>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583697 <+44511>:	mov    $0x7444e0,%ecx
0x000000000058369c <+44516>:	mov    $0x1036,%edx
0x00000000005836a1 <+44521>:	mov    $0x74045c,%esi
0x00000000005836a6 <+44526>:	mov    $0x7408ec,%edi
0x00000000005836ab <+44531>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005836b0 <+44536>:	mov    %r15,%rdx
0x00000000005836b3 <+44539>:	mov    %rbx,%rsi
0x00000000005836b6 <+44542>:	mov    %rbp,%rdi
0x00000000005836b9 <+44545>:	call   0x573f7b <lltrace_instruction>
0x00000000005836be <+44550>:	jmp    0x58365f <_PyEval_EvalFrameDefault+44455>
0x00000000005836c0 <+44552>:	mov    $0x7444e0,%ecx
0x00000000005836c5 <+44557>:	mov    $0x1038,%edx
0x00000000005836ca <+44562>:	mov    $0x74045c,%esi
0x00000000005836cf <+44567>:	mov    $0x742a50,%edi
0x00000000005836d4 <+44572>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005836d9 <+44577>:	mov    $0xffffffff,%edx
0x00000000005836de <+44582>:	jmp    0x58367e <_PyEval_EvalFrameDefault+44486>
0x00000000005836e0 <+44584>:	movslq 0x8(%rsp),%rax
0x00000000005836e5 <+44589>:	lea    (%r15,%rax,2),%r13
0x00000000005836e9 <+44593>:	movzwl 0x0(%r13),%r12d
0x00000000005836ee <+44598>:	mov    %r12d,%eax
0x00000000005836f1 <+44601>:	shr    $0x8,%ax
0x00000000005836f5 <+44605>:	movzwl %ax,%eax
0x00000000005836f8 <+44608>:	mov    %eax,0x8(%rsp)
0x00000000005836fc <+44612>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583701 <+44617>:	jne    0x583738 <_PyEval_EvalFrameDefault+44672>
0x0000000000583703 <+44619>:	movzbl 0xc0(%rsp),%eax
0x000000000058370b <+44627>:	lea    -0x1(%rax),%edx
0x000000000058370e <+44630>:	cmp    $0xfd,%dl
0x0000000000583711 <+44633>:	jbe    0x583748 <_PyEval_EvalFrameDefault+44688>
0x0000000000583713 <+44635>:	cmpw   $0x0,0x53bd31(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058371b <+44643>:	jne    0x583761 <_PyEval_EvalFrameDefault+44713>
0x000000000058371d <+44645>:	mov    $0x0,%edx
0x0000000000583722 <+44650>:	or     %edx,%eax
0x0000000000583724 <+44652>:	or     %eax,%r12d
0x0000000000583727 <+44655>:	movzbl %r12b,%eax
0x000000000058372b <+44659>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583733 <+44667>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583738 <+44672>:	mov    %r13,%rdx
0x000000000058373b <+44675>:	mov    %rbx,%rsi
0x000000000058373e <+44678>:	mov    %rbp,%rdi
0x0000000000583741 <+44681>:	call   0x573f7b <lltrace_instruction>
0x0000000000583746 <+44686>:	jmp    0x583703 <_PyEval_EvalFrameDefault+44619>
0x0000000000583748 <+44688>:	mov    $0x7444e0,%ecx
0x000000000058374d <+44693>:	mov    $0x103c,%edx
0x0000000000583752 <+44698>:	mov    $0x74045c,%esi
0x0000000000583757 <+44703>:	mov    $0x742a50,%edi
0x000000000058375c <+44708>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583761 <+44713>:	mov    $0xffffffff,%edx
0x0000000000583766 <+44718>:	jmp    0x583722 <_PyEval_EvalFrameDefault+44650>
0x0000000000583768 <+44720>:	mov    $0x7444e0,%ecx
0x000000000058376d <+44725>:	mov    $0x1040,%edx
0x0000000000583772 <+44730>:	mov    $0x74045c,%esi
0x0000000000583777 <+44735>:	mov    $0x7408ec,%edi
0x000000000058377c <+44740>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583781 <+44745>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000583787 <+44751>:	movslq 0x8(%rsp),%rax
0x000000000058378c <+44756>:	lea    (%r15,%rax,2),%r13
0x0000000000583790 <+44760>:	jmp    0x5835c4 <_PyEval_EvalFrameDefault+44300>
0x0000000000583795 <+44765>:	mov    %r13,%rdx
0x0000000000583798 <+44768>:	mov    %rbx,%rsi
0x000000000058379b <+44771>:	mov    %rbp,%rdi
0x000000000058379e <+44774>:	call   0x573f7b <lltrace_instruction>
0x00000000005837a3 <+44779>:	jmp    0x5835e2 <_PyEval_EvalFrameDefault+44330>
0x00000000005837a8 <+44784>:	mov    $0x7444e0,%ecx
0x00000000005837ad <+44789>:	mov    $0x1047,%edx
0x00000000005837b2 <+44794>:	mov    $0x74045c,%esi
0x00000000005837b7 <+44799>:	mov    $0x742a50,%edi
0x00000000005837bc <+44804>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005837c1 <+44809>:	mov    $0xffffffff,%edx
0x00000000005837c6 <+44814>:	jmp    0x583609 <_PyEval_EvalFrameDefault+44369>
0x00000000005837cb <+44819>:	lea    0x2(%r13),%r15
0x00000000005837cf <+44823>:	mov    %r13,0x38(%rbp)
0x00000000005837d3 <+44827>:	mov    -0x8(%rbx),%r12
0x00000000005837d7 <+44831>:	cmp    $0x982320,%r12
0x00000000005837de <+44838>:	je     0x583865 <_PyEval_EvalFrameDefault+44973>
0x00000000005837e4 <+44844>:	cmp    $0x982300,%r12
0x00000000005837eb <+44851>:	je     0x583926 <_PyEval_EvalFrameDefault+45166>
0x00000000005837f1 <+44857>:	mov    %r12,%rdi
0x00000000005837f4 <+44860>:	call   0x4efc71 <PyObject_IsTrue>
0x00000000005837f9 <+44865>:	test   %eax,%eax
0x00000000005837fb <+44867>:	jle    0x5839ae <_PyEval_EvalFrameDefault+45302>
0x0000000000583801 <+44873>:	movslq 0x8(%rsp),%rax
0x0000000000583806 <+44878>:	lea    (%r15,%rax,2),%r13
0x000000000058380a <+44882>:	movzwl 0x0(%r13),%r12d
0x000000000058380f <+44887>:	mov    %r12d,%eax
0x0000000000583812 <+44890>:	shr    $0x8,%ax
0x0000000000583816 <+44894>:	movzwl %ax,%eax
0x0000000000583819 <+44897>:	mov    %eax,0x8(%rsp)
0x000000000058381d <+44901>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583822 <+44906>:	jne    0x583a06 <_PyEval_EvalFrameDefault+45390>
0x0000000000583828 <+44912>:	movzbl 0xc0(%rsp),%eax
0x0000000000583830 <+44920>:	lea    -0x1(%rax),%edx
0x0000000000583833 <+44923>:	cmp    $0xfd,%dl
0x0000000000583836 <+44926>:	jbe    0x583a19 <_PyEval_EvalFrameDefault+45409>
0x000000000058383c <+44932>:	cmpw   $0x0,0x53bc08(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583844 <+44940>:	jne    0x583a32 <_PyEval_EvalFrameDefault+45434>
0x000000000058384a <+44946>:	mov    $0x0,%edx
0x000000000058384f <+44951>:	or     %edx,%eax
0x0000000000583851 <+44953>:	or     %eax,%r12d
0x0000000000583854 <+44956>:	movzbl %r12b,%eax
0x0000000000583858 <+44960>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583860 <+44968>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583865 <+44973>:	mov    0x20(%rbp),%rax
0x0000000000583869 <+44977>:	movslq 0x4c(%rax),%rax
0x000000000058386d <+44981>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000583872 <+44986>:	mov    %rbx,%rax
0x0000000000583875 <+44989>:	sub    %rdx,%rax
0x0000000000583878 <+44992>:	sar    $0x3,%rax
0x000000000058387c <+44996>:	test   %eax,%eax
0x000000000058387e <+44998>:	jle    0x5838dd <_PyEval_EvalFrameDefault+45093>
0x0000000000583880 <+45000>:	sub    $0x8,%rbx
0x0000000000583884 <+45004>:	mov    %r12,%rdi
0x0000000000583887 <+45007>:	call   0x5750be <_Py_DECREF_NO_DEALLOC>
0x000000000058388c <+45012>:	movzwl (%r15),%r12d
0x0000000000583890 <+45016>:	mov    %r12d,%eax
0x0000000000583893 <+45019>:	shr    $0x8,%ax
0x0000000000583897 <+45023>:	movzwl %ax,%eax
0x000000000058389a <+45026>:	mov    %eax,0x8(%rsp)
0x000000000058389e <+45030>:	cmpl   $0x0,0x14(%rsp)
0x00000000005838a3 <+45035>:	jne    0x5838f6 <_PyEval_EvalFrameDefault+45118>
0x00000000005838a5 <+45037>:	movzbl 0xc0(%rsp),%eax
0x00000000005838ad <+45045>:	lea    -0x1(%rax),%edx
0x00000000005838b0 <+45048>:	cmp    $0xfd,%dl
0x00000000005838b3 <+45051>:	jbe    0x583906 <_PyEval_EvalFrameDefault+45134>
0x00000000005838b5 <+45053>:	cmpw   $0x0,0x53bb8f(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005838bd <+45061>:	jne    0x58391f <_PyEval_EvalFrameDefault+45159>
0x00000000005838bf <+45063>:	mov    $0x0,%edx
0x00000000005838c4 <+45068>:	or     %edx,%eax
0x00000000005838c6 <+45070>:	or     %eax,%r12d
0x00000000005838c9 <+45073>:	movzbl %r12b,%eax
0x00000000005838cd <+45077>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005838d5 <+45085>:	mov    %r15,%r13
0x00000000005838d8 <+45088>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005838dd <+45093>:	mov    $0x7444e0,%ecx
0x00000000005838e2 <+45098>:	mov    $0x104e,%edx
0x00000000005838e7 <+45103>:	mov    $0x74045c,%esi
0x00000000005838ec <+45108>:	mov    $0x7408ec,%edi
0x00000000005838f1 <+45113>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005838f6 <+45118>:	mov    %r15,%rdx
0x00000000005838f9 <+45121>:	mov    %rbx,%rsi
0x00000000005838fc <+45124>:	mov    %rbp,%rdi
0x00000000005838ff <+45127>:	call   0x573f7b <lltrace_instruction>
0x0000000000583904 <+45132>:	jmp    0x5838a5 <_PyEval_EvalFrameDefault+45037>
0x0000000000583906 <+45134>:	mov    $0x7444e0,%ecx
0x000000000058390b <+45139>:	mov    $0x1050,%edx
0x0000000000583910 <+45144>:	mov    $0x74045c,%esi
0x0000000000583915 <+45149>:	mov    $0x742a50,%edi
0x000000000058391a <+45154>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058391f <+45159>:	mov    $0xffffffff,%edx
0x0000000000583924 <+45164>:	jmp    0x5838c4 <_PyEval_EvalFrameDefault+45068>
0x0000000000583926 <+45166>:	movslq 0x8(%rsp),%rax
0x000000000058392b <+45171>:	lea    (%r15,%rax,2),%r13
0x000000000058392f <+45175>:	movzwl 0x0(%r13),%r12d
0x0000000000583934 <+45180>:	mov    %r12d,%eax
0x0000000000583937 <+45183>:	shr    $0x8,%ax
0x000000000058393b <+45187>:	movzwl %ax,%eax
0x000000000058393e <+45190>:	mov    %eax,0x8(%rsp)
0x0000000000583942 <+45194>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583947 <+45199>:	jne    0x58397e <_PyEval_EvalFrameDefault+45254>
0x0000000000583949 <+45201>:	movzbl 0xc0(%rsp),%eax
0x0000000000583951 <+45209>:	lea    -0x1(%rax),%edx
0x0000000000583954 <+45212>:	cmp    $0xfd,%dl
0x0000000000583957 <+45215>:	jbe    0x58398e <_PyEval_EvalFrameDefault+45270>
0x0000000000583959 <+45217>:	cmpw   $0x0,0x53baeb(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583961 <+45225>:	jne    0x5839a7 <_PyEval_EvalFrameDefault+45295>
0x0000000000583963 <+45227>:	mov    $0x0,%edx
0x0000000000583968 <+45232>:	or     %edx,%eax
0x000000000058396a <+45234>:	or     %eax,%r12d
0x000000000058396d <+45237>:	movzbl %r12b,%eax
0x0000000000583971 <+45241>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583979 <+45249>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058397e <+45254>:	mov    %r13,%rdx
0x0000000000583981 <+45257>:	mov    %rbx,%rsi
0x0000000000583984 <+45260>:	mov    %rbp,%rdi
0x0000000000583987 <+45263>:	call   0x573f7b <lltrace_instruction>
0x000000000058398c <+45268>:	jmp    0x583949 <_PyEval_EvalFrameDefault+45201>
0x000000000058398e <+45270>:	mov    $0x7444e0,%ecx
0x0000000000583993 <+45275>:	mov    $0x1054,%edx
0x0000000000583998 <+45280>:	mov    $0x74045c,%esi
0x000000000058399d <+45285>:	mov    $0x742a50,%edi
0x00000000005839a2 <+45290>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005839a7 <+45295>:	mov    $0xffffffff,%edx
0x00000000005839ac <+45300>:	jmp    0x583968 <_PyEval_EvalFrameDefault+45232>
0x00000000005839ae <+45302>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005839b4 <+45308>:	mov    0x20(%rbp),%rax
0x00000000005839b8 <+45312>:	movslq 0x4c(%rax),%rax
0x00000000005839bc <+45316>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005839c1 <+45321>:	mov    %rbx,%rax
0x00000000005839c4 <+45324>:	sub    %rdx,%rax
0x00000000005839c7 <+45327>:	sar    $0x3,%rax
0x00000000005839cb <+45331>:	test   %eax,%eax
0x00000000005839cd <+45333>:	jle    0x5839ed <_PyEval_EvalFrameDefault+45365>
0x00000000005839cf <+45335>:	sub    $0x8,%rbx
0x00000000005839d3 <+45339>:	mov    %r12,%rdx
0x00000000005839d6 <+45342>:	mov    $0x105c,%esi
0x00000000005839db <+45347>:	mov    $0x74045c,%edi
0x00000000005839e0 <+45352>:	call   0x573c83 <Py_DECREF>
0x00000000005839e5 <+45357>:	mov    %r15,%r13
0x00000000005839e8 <+45360>:	jmp    0x58380a <_PyEval_EvalFrameDefault+44882>
0x00000000005839ed <+45365>:	mov    $0x7444e0,%ecx
0x00000000005839f2 <+45370>:	mov    $0x105b,%edx
0x00000000005839f7 <+45375>:	mov    $0x74045c,%esi
0x00000000005839fc <+45380>:	mov    $0x7408ec,%edi
0x0000000000583a01 <+45385>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583a06 <+45390>:	mov    %r13,%rdx
0x0000000000583a09 <+45393>:	mov    %rbx,%rsi
0x0000000000583a0c <+45396>:	mov    %rbp,%rdi
0x0000000000583a0f <+45399>:	call   0x573f7b <lltrace_instruction>
0x0000000000583a14 <+45404>:	jmp    0x583828 <_PyEval_EvalFrameDefault+44912>
0x0000000000583a19 <+45409>:	mov    $0x7444e0,%ecx
0x0000000000583a1e <+45414>:	mov    $0x1060,%edx
0x0000000000583a23 <+45419>:	mov    $0x74045c,%esi
0x0000000000583a28 <+45424>:	mov    $0x742a50,%edi
0x0000000000583a2d <+45429>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583a32 <+45434>:	mov    $0xffffffff,%edx
0x0000000000583a37 <+45439>:	jmp    0x58384f <_PyEval_EvalFrameDefault+44951>
0x0000000000583a3c <+45444>:	mov    %r13,0x38(%rbp)
0x0000000000583a40 <+45448>:	mov    0x8(%rsp),%eax
0x0000000000583a44 <+45452>:	neg    %eax
0x0000000000583a46 <+45454>:	cltq
0x0000000000583a48 <+45456>:	lea    0x2(%r13,%rax,2),%r13
0x0000000000583a4d <+45461>:	movzwl 0x0(%r13),%r12d
0x0000000000583a52 <+45466>:	mov    %r12d,%eax
0x0000000000583a55 <+45469>:	shr    $0x8,%ax
0x0000000000583a59 <+45473>:	movzwl %ax,%eax
0x0000000000583a5c <+45476>:	mov    %eax,0x8(%rsp)
0x0000000000583a60 <+45480>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583a65 <+45485>:	jne    0x583a9c <_PyEval_EvalFrameDefault+45540>
0x0000000000583a67 <+45487>:	movzbl 0xc0(%rsp),%eax
0x0000000000583a6f <+45495>:	lea    -0x1(%rax),%edx
0x0000000000583a72 <+45498>:	cmp    $0xfd,%dl
0x0000000000583a75 <+45501>:	jbe    0x583aac <_PyEval_EvalFrameDefault+45556>
0x0000000000583a77 <+45503>:	cmpw   $0x0,0x53b9cd(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583a7f <+45511>:	jne    0x583ac5 <_PyEval_EvalFrameDefault+45581>
0x0000000000583a81 <+45513>:	mov    $0x0,%edx
0x0000000000583a86 <+45518>:	or     %edx,%eax
0x0000000000583a88 <+45520>:	or     %eax,%r12d
0x0000000000583a8b <+45523>:	movzbl %r12b,%eax
0x0000000000583a8f <+45527>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583a97 <+45535>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583a9c <+45540>:	mov    %r13,%rdx
0x0000000000583a9f <+45543>:	mov    %rbx,%rsi
0x0000000000583aa2 <+45546>:	mov    %rbp,%rdi
0x0000000000583aa5 <+45549>:	call   0x573f7b <lltrace_instruction>
0x0000000000583aaa <+45554>:	jmp    0x583a67 <_PyEval_EvalFrameDefault+45487>
0x0000000000583aac <+45556>:	mov    $0x7444e0,%ecx
0x0000000000583ab1 <+45561>:	mov    $0x106a,%edx
0x0000000000583ab6 <+45566>:	mov    $0x74045c,%esi
0x0000000000583abb <+45571>:	mov    $0x742a50,%edi
0x0000000000583ac0 <+45576>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583ac5 <+45581>:	mov    $0xffffffff,%edx
0x0000000000583aca <+45586>:	jmp    0x583a86 <_PyEval_EvalFrameDefault+45518>
0x0000000000583acc <+45588>:	lea    0x2(%r13),%r12
0x0000000000583ad0 <+45592>:	mov    %r13,0x38(%rbp)
0x0000000000583ad4 <+45596>:	jmp    0x5828ca <_PyEval_EvalFrameDefault+40978>
0x0000000000583ad9 <+45601>:	mov    $0x7444e0,%ecx
0x0000000000583ade <+45606>:	mov    $0x106f,%edx
0x0000000000583ae3 <+45611>:	mov    $0x74045c,%esi
0x0000000000583ae8 <+45616>:	mov    $0x740b92,%edi
0x0000000000583aed <+45621>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583af2 <+45626>:	mov    %r13,%rdx
0x0000000000583af5 <+45629>:	mov    %rbx,%rsi
0x0000000000583af8 <+45632>:	mov    %rbp,%rdi
0x0000000000583afb <+45635>:	call   0x573f7b <lltrace_instruction>
0x0000000000583b00 <+45640>:	jmp    0x58291e <_PyEval_EvalFrameDefault+41062>
0x0000000000583b05 <+45645>:	mov    $0x7444e0,%ecx
0x0000000000583b0a <+45650>:	mov    $0x1072,%edx
0x0000000000583b0f <+45655>:	mov    $0x74045c,%esi
0x0000000000583b14 <+45660>:	mov    $0x742a50,%edi
0x0000000000583b19 <+45665>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583b1e <+45670>:	mov    $0xffffffff,%edx
0x0000000000583b23 <+45675>:	jmp    0x582945 <_PyEval_EvalFrameDefault+41101>
0x0000000000583b28 <+45680>:	lea    0x2(%r13),%r15
0x0000000000583b2c <+45684>:	mov    %r13,0x38(%rbp)
0x0000000000583b30 <+45688>:	mov    -0x8(%rbx),%rdi
0x0000000000583b34 <+45692>:	call   0x4938d1 <PyObject_Size>
0x0000000000583b39 <+45697>:	mov    %rax,%rdi
0x0000000000583b3c <+45700>:	test   %rax,%rax
0x0000000000583b3f <+45703>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000583b45 <+45709>:	call   0x4d7360 <PyLong_FromSsize_t>
0x0000000000583b4a <+45714>:	test   %rax,%rax
0x0000000000583b4d <+45717>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000583b53 <+45723>:	lea    0x8(%rbx),%r13
0x0000000000583b57 <+45727>:	mov    %rax,(%rbx)
0x0000000000583b5a <+45730>:	mov    0x20(%rbp),%rdx
0x0000000000583b5e <+45734>:	movslq 0x4c(%rdx),%rax
0x0000000000583b62 <+45738>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000583b67 <+45743>:	mov    %r13,%rax
0x0000000000583b6a <+45746>:	sub    %rcx,%rax
0x0000000000583b6d <+45749>:	sar    $0x3,%rax
0x0000000000583b71 <+45753>:	cmp    %eax,0x44(%rdx)
0x0000000000583b74 <+45756>:	jl     0x583bca <_PyEval_EvalFrameDefault+45842>
0x0000000000583b76 <+45758>:	movzwl (%r15),%r12d
0x0000000000583b7a <+45762>:	mov    %r12d,%eax
0x0000000000583b7d <+45765>:	shr    $0x8,%ax
0x0000000000583b81 <+45769>:	movzwl %ax,%eax
0x0000000000583b84 <+45772>:	mov    %eax,0x8(%rsp)
0x0000000000583b88 <+45776>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583b8d <+45781>:	jne    0x583be3 <_PyEval_EvalFrameDefault+45867>
0x0000000000583b8f <+45783>:	movzbl 0xc0(%rsp),%eax
0x0000000000583b97 <+45791>:	lea    -0x1(%rax),%edx
0x0000000000583b9a <+45794>:	cmp    $0xfd,%dl
0x0000000000583b9d <+45797>:	jbe    0x583bf3 <_PyEval_EvalFrameDefault+45883>
0x0000000000583b9f <+45799>:	cmpw   $0x0,0x53b8a5(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583ba7 <+45807>:	jne    0x583c0c <_PyEval_EvalFrameDefault+45908>
0x0000000000583ba9 <+45809>:	mov    $0x0,%edx
0x0000000000583bae <+45814>:	or     %edx,%eax
0x0000000000583bb0 <+45816>:	or     %eax,%r12d
0x0000000000583bb3 <+45819>:	movzbl %r12b,%eax
0x0000000000583bb7 <+45823>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583bbf <+45831>:	mov    %r13,%rbx
0x0000000000583bc2 <+45834>:	mov    %r15,%r13
0x0000000000583bc5 <+45837>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583bca <+45842>:	mov    $0x7444e0,%ecx
0x0000000000583bcf <+45847>:	mov    $0x107f,%edx
0x0000000000583bd4 <+45852>:	mov    $0x74045c,%esi
0x0000000000583bd9 <+45857>:	mov    $0x7408bc,%edi
0x0000000000583bde <+45862>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583be3 <+45867>:	mov    %r15,%rdx
0x0000000000583be6 <+45870>:	mov    %r13,%rsi
0x0000000000583be9 <+45873>:	mov    %rbp,%rdi
0x0000000000583bec <+45876>:	call   0x573f7b <lltrace_instruction>
0x0000000000583bf1 <+45881>:	jmp    0x583b8f <_PyEval_EvalFrameDefault+45783>
0x0000000000583bf3 <+45883>:	mov    $0x7444e0,%ecx
0x0000000000583bf8 <+45888>:	mov    $0x1080,%edx
0x0000000000583bfd <+45893>:	mov    $0x74045c,%esi
0x0000000000583c02 <+45898>:	mov    $0x742a50,%edi
0x0000000000583c07 <+45903>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583c0c <+45908>:	mov    $0xffffffff,%edx
0x0000000000583c11 <+45913>:	jmp    0x583bae <_PyEval_EvalFrameDefault+45814>
0x0000000000583c13 <+45915>:	lea    0x2(%r13),%r15
0x0000000000583c17 <+45919>:	mov    %r13,0x38(%rbp)
0x0000000000583c1b <+45923>:	mov    0x20(%rbp),%rax
0x0000000000583c1f <+45927>:	movslq 0x4c(%rax),%rax
0x0000000000583c23 <+45931>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000583c28 <+45936>:	mov    %rbx,%rax
0x0000000000583c2b <+45939>:	sub    %rdx,%rax
0x0000000000583c2e <+45942>:	sar    $0x3,%rax
0x0000000000583c32 <+45946>:	test   %eax,%eax
0x0000000000583c34 <+45948>:	jle    0x583d4a <_PyEval_EvalFrameDefault+46226>
0x0000000000583c3a <+45954>:	lea    -0x8(%rbx),%rax
0x0000000000583c3e <+45958>:	mov    -0x8(%rbx),%r12
0x0000000000583c42 <+45962>:	sub    %rdx,%rax
0x0000000000583c45 <+45965>:	sar    $0x3,%rax
0x0000000000583c49 <+45969>:	test   %eax,%eax
0x0000000000583c4b <+45971>:	jle    0x583d63 <_PyEval_EvalFrameDefault+46251>
0x0000000000583c51 <+45977>:	lea    -0x10(%rbx),%r13
0x0000000000583c55 <+45981>:	mov    -0x10(%rbx),%rax
0x0000000000583c59 <+45985>:	mov    %rax,0x48(%rsp)
0x0000000000583c5e <+45990>:	mov    -0x18(%rbx),%rax
0x0000000000583c62 <+45994>:	mov    %rax,0x50(%rsp)
0x0000000000583c67 <+45999>:	cmpq   $0x999820,0x8(%r12)
0x0000000000583c70 <+46008>:	jne    0x583d7c <_PyEval_EvalFrameDefault+46276>
0x0000000000583c76 <+46014>:	movslq 0x8(%rsp),%rcx
0x0000000000583c7b <+46019>:	mov    %r12,%r8
0x0000000000583c7e <+46022>:	mov    0x48(%rsp),%rdx
0x0000000000583c83 <+46027>:	mov    0x50(%rsp),%rsi
0x0000000000583c88 <+46032>:	mov    0x18(%rsp),%rdi
0x0000000000583c8d <+46037>:	call   0x5751d8 <match_class>
0x0000000000583c92 <+46042>:	mov    %rax,%r14
0x0000000000583c95 <+46045>:	mov    %r12,%rdx
0x0000000000583c98 <+46048>:	mov    $0x108b,%esi
0x0000000000583c9d <+46053>:	mov    $0x74045c,%edi
0x0000000000583ca2 <+46058>:	call   0x573c83 <Py_DECREF>
0x0000000000583ca7 <+46063>:	mov    0x48(%rsp),%rdx
0x0000000000583cac <+46068>:	mov    $0x108c,%esi
0x0000000000583cb1 <+46073>:	mov    $0x74045c,%edi
0x0000000000583cb6 <+46078>:	call   0x573c83 <Py_DECREF>
0x0000000000583cbb <+46083>:	test   %r14,%r14
0x0000000000583cbe <+46086>:	je     0x583dae <_PyEval_EvalFrameDefault+46326>
0x0000000000583cc4 <+46092>:	cmpq   $0x999820,0x8(%r14)
0x0000000000583ccc <+46100>:	jne    0x583d95 <_PyEval_EvalFrameDefault+46301>
0x0000000000583cd2 <+46106>:	mov    %r14,-0x18(%rbx)
0x0000000000583cd6 <+46110>:	mov    0x50(%rsp),%rdx
0x0000000000583cdb <+46115>:	mov    $0x109b,%esi
0x0000000000583ce0 <+46120>:	mov    $0x74045c,%edi
0x0000000000583ce5 <+46125>:	call   0x573c83 <Py_DECREF>
0x0000000000583cea <+46130>:	movzwl (%r15),%r12d
0x0000000000583cee <+46134>:	mov    %r12d,%eax
0x0000000000583cf1 <+46137>:	shr    $0x8,%ax
0x0000000000583cf5 <+46141>:	movzwl %ax,%eax
0x0000000000583cf8 <+46144>:	mov    %eax,0x8(%rsp)
0x0000000000583cfc <+46148>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583d01 <+46153>:	jne    0x583de8 <_PyEval_EvalFrameDefault+46384>
0x0000000000583d07 <+46159>:	movzbl 0xc0(%rsp),%eax
0x0000000000583d0f <+46167>:	lea    -0x1(%rax),%edx
0x0000000000583d12 <+46170>:	cmp    $0xfd,%dl
0x0000000000583d15 <+46173>:	jbe    0x583dfb <_PyEval_EvalFrameDefault+46403>
0x0000000000583d1b <+46179>:	cmpw   $0x0,0x53b729(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583d23 <+46187>:	jne    0x583e14 <_PyEval_EvalFrameDefault+46428>
0x0000000000583d29 <+46193>:	mov    $0x0,%edx
0x0000000000583d2e <+46198>:	or     %edx,%eax
0x0000000000583d30 <+46200>:	or     %eax,%r12d
0x0000000000583d33 <+46203>:	movzbl %r12b,%eax
0x0000000000583d37 <+46207>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583d3f <+46215>:	mov    %r13,%rbx
0x0000000000583d42 <+46218>:	mov    %r15,%r13
0x0000000000583d45 <+46221>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583d4a <+46226>:	mov    $0x7444e0,%ecx
0x0000000000583d4f <+46231>:	mov    $0x1086,%edx
0x0000000000583d54 <+46236>:	mov    $0x74045c,%esi
0x0000000000583d59 <+46241>:	mov    $0x7408da,%edi
0x0000000000583d5e <+46246>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583d63 <+46251>:	mov    $0x7444e0,%ecx
0x0000000000583d68 <+46256>:	mov    $0x1087,%edx
0x0000000000583d6d <+46261>:	mov    $0x74045c,%esi
0x0000000000583d72 <+46266>:	mov    $0x7408da,%edi
0x0000000000583d77 <+46271>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583d7c <+46276>:	mov    $0x7444e0,%ecx
0x0000000000583d81 <+46281>:	mov    $0x1089,%edx
0x0000000000583d86 <+46286>:	mov    $0x74045c,%esi
0x0000000000583d8b <+46291>:	mov    $0x740ba9,%edi
0x0000000000583d90 <+46296>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583d95 <+46301>:	mov    $0x7444e0,%ecx
0x0000000000583d9a <+46306>:	mov    $0x108f,%edx
0x0000000000583d9f <+46311>:	mov    $0x74045c,%esi
0x0000000000583da4 <+46316>:	mov    $0x740bc3,%edi
0x0000000000583da9 <+46321>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583dae <+46326>:	mov    0x18(%rsp),%rdi
0x0000000000583db3 <+46331>:	call   0x573630 <_PyErr_Occurred>
0x0000000000583db8 <+46336>:	test   %rax,%rax
0x0000000000583dbb <+46339>:	jne    0x589b9d <_PyEval_EvalFrameDefault+70373>
0x0000000000583dc1 <+46345>:	addq   $0x1,0x53fcbf(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000583dc9 <+46353>:	mov    0x413350(%rip),%rax        # 0x997120 <_Py_NoneStruct>
0x0000000000583dd0 <+46360>:	add    $0x1,%rax
0x0000000000583dd4 <+46364>:	mov    %rax,0x413345(%rip)        # 0x997120 <_Py_NoneStruct>
0x0000000000583ddb <+46371>:	movq   $0x997120,-0x18(%rbx)
0x0000000000583de3 <+46379>:	jmp    0x583cd6 <_PyEval_EvalFrameDefault+46110>
0x0000000000583de8 <+46384>:	mov    %r15,%rdx
0x0000000000583deb <+46387>:	mov    %r13,%rsi
0x0000000000583dee <+46390>:	mov    %rbp,%rdi
0x0000000000583df1 <+46393>:	call   0x573f7b <lltrace_instruction>
0x0000000000583df6 <+46398>:	jmp    0x583d07 <_PyEval_EvalFrameDefault+46159>
0x0000000000583dfb <+46403>:	mov    $0x7444e0,%ecx
0x0000000000583e00 <+46408>:	mov    $0x109c,%edx
0x0000000000583e05 <+46413>:	mov    $0x74045c,%esi
0x0000000000583e0a <+46418>:	mov    $0x742a50,%edi
0x0000000000583e0f <+46423>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583e14 <+46428>:	mov    $0xffffffff,%edx
0x0000000000583e19 <+46433>:	jmp    0x583d2e <_PyEval_EvalFrameDefault+46198>
0x0000000000583e1e <+46438>:	lea    0x2(%r13),%r14
0x0000000000583e22 <+46442>:	mov    %r13,0x38(%rbp)
0x0000000000583e26 <+46446>:	mov    -0x8(%rbx),%rax
0x0000000000583e2a <+46450>:	mov    0x8(%rax),%rax
0x0000000000583e2e <+46454>:	testb  $0x40,0xa8(%rax)
0x0000000000583e35 <+46461>:	je     0x583ec9 <_PyEval_EvalFrameDefault+46609>
0x0000000000583e3b <+46467>:	mov    $0x982300,%eax
0x0000000000583e40 <+46472>:	addq   $0x1,0x53fc40(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000583e48 <+46480>:	mov    (%rax),%rcx
0x0000000000583e4b <+46483>:	lea    0x1(%rcx),%rdx
0x0000000000583e4f <+46487>:	mov    %rdx,(%rax)
0x0000000000583e52 <+46490>:	lea    0x8(%rbx),%r13
0x0000000000583e56 <+46494>:	mov    %rax,(%rbx)
0x0000000000583e59 <+46497>:	mov    0x20(%rbp),%rdx
0x0000000000583e5d <+46501>:	movslq 0x4c(%rdx),%rax
0x0000000000583e61 <+46505>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000583e66 <+46510>:	mov    %r13,%rax
0x0000000000583e69 <+46513>:	sub    %rcx,%rax
0x0000000000583e6c <+46516>:	sar    $0x3,%rax
0x0000000000583e70 <+46520>:	cmp    %eax,0x44(%rdx)
0x0000000000583e73 <+46523>:	jl     0x583ed3 <_PyEval_EvalFrameDefault+46619>
0x0000000000583e75 <+46525>:	movzwl (%r14),%r12d
0x0000000000583e79 <+46529>:	mov    %r12d,%eax
0x0000000000583e7c <+46532>:	shr    $0x8,%ax
0x0000000000583e80 <+46536>:	movzwl %ax,%eax
0x0000000000583e83 <+46539>:	mov    %eax,0x8(%rsp)
0x0000000000583e87 <+46543>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583e8c <+46548>:	jne    0x583eec <_PyEval_EvalFrameDefault+46644>
0x0000000000583e8e <+46550>:	movzbl 0xc0(%rsp),%eax
0x0000000000583e96 <+46558>:	lea    -0x1(%rax),%edx
0x0000000000583e99 <+46561>:	cmp    $0xfd,%dl
0x0000000000583e9c <+46564>:	jbe    0x583efc <_PyEval_EvalFrameDefault+46660>
0x0000000000583e9e <+46566>:	cmpw   $0x0,0x53b5a6(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583ea6 <+46574>:	jne    0x583f15 <_PyEval_EvalFrameDefault+46685>
0x0000000000583ea8 <+46576>:	mov    $0x0,%edx
0x0000000000583ead <+46581>:	or     %edx,%eax
0x0000000000583eaf <+46583>:	or     %eax,%r12d
0x0000000000583eb2 <+46586>:	movzbl %r12b,%eax
0x0000000000583eb6 <+46590>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583ebe <+46598>:	mov    %r13,%rbx
0x0000000000583ec1 <+46601>:	mov    %r14,%r13
0x0000000000583ec4 <+46604>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583ec9 <+46609>:	mov    $0x982320,%eax
0x0000000000583ece <+46614>:	jmp    0x583e40 <_PyEval_EvalFrameDefault+46472>
0x0000000000583ed3 <+46619>:	mov    $0x7444e0,%ecx
0x0000000000583ed8 <+46624>:	mov    $0x10a4,%edx
0x0000000000583edd <+46629>:	mov    $0x74045c,%esi
0x0000000000583ee2 <+46634>:	mov    $0x7408bc,%edi
0x0000000000583ee7 <+46639>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583eec <+46644>:	mov    %r14,%rdx
0x0000000000583eef <+46647>:	mov    %r13,%rsi
0x0000000000583ef2 <+46650>:	mov    %rbp,%rdi
0x0000000000583ef5 <+46653>:	call   0x573f7b <lltrace_instruction>
0x0000000000583efa <+46658>:	jmp    0x583e8e <_PyEval_EvalFrameDefault+46550>
0x0000000000583efc <+46660>:	mov    $0x7444e0,%ecx
0x0000000000583f01 <+46665>:	mov    $0x10a7,%edx
0x0000000000583f06 <+46670>:	mov    $0x74045c,%esi
0x0000000000583f0b <+46675>:	mov    $0x742a50,%edi
0x0000000000583f10 <+46680>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583f15 <+46685>:	mov    $0xffffffff,%edx
0x0000000000583f1a <+46690>:	jmp    0x583ead <_PyEval_EvalFrameDefault+46581>
0x0000000000583f1c <+46692>:	lea    0x2(%r13),%r14
0x0000000000583f20 <+46696>:	mov    %r13,0x38(%rbp)
0x0000000000583f24 <+46700>:	mov    -0x8(%rbx),%rax
0x0000000000583f28 <+46704>:	mov    0x8(%rax),%rax
0x0000000000583f2c <+46708>:	testb  $0x20,0xa8(%rax)
0x0000000000583f33 <+46715>:	je     0x583fc7 <_PyEval_EvalFrameDefault+46863>
0x0000000000583f39 <+46721>:	mov    $0x982300,%eax
0x0000000000583f3e <+46726>:	addq   $0x1,0x53fb42(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000583f46 <+46734>:	mov    (%rax),%rcx
0x0000000000583f49 <+46737>:	lea    0x1(%rcx),%rdx
0x0000000000583f4d <+46741>:	mov    %rdx,(%rax)
0x0000000000583f50 <+46744>:	lea    0x8(%rbx),%r13
0x0000000000583f54 <+46748>:	mov    %rax,(%rbx)
0x0000000000583f57 <+46751>:	mov    0x20(%rbp),%rdx
0x0000000000583f5b <+46755>:	movslq 0x4c(%rdx),%rax
0x0000000000583f5f <+46759>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000583f64 <+46764>:	mov    %r13,%rax
0x0000000000583f67 <+46767>:	sub    %rcx,%rax
0x0000000000583f6a <+46770>:	sar    $0x3,%rax
0x0000000000583f6e <+46774>:	cmp    %eax,0x44(%rdx)
0x0000000000583f71 <+46777>:	jl     0x583fd1 <_PyEval_EvalFrameDefault+46873>
0x0000000000583f73 <+46779>:	movzwl (%r14),%r12d
0x0000000000583f77 <+46783>:	mov    %r12d,%eax
0x0000000000583f7a <+46786>:	shr    $0x8,%ax
0x0000000000583f7e <+46790>:	movzwl %ax,%eax
0x0000000000583f81 <+46793>:	mov    %eax,0x8(%rsp)
0x0000000000583f85 <+46797>:	cmpl   $0x0,0x14(%rsp)
0x0000000000583f8a <+46802>:	jne    0x583fea <_PyEval_EvalFrameDefault+46898>
0x0000000000583f8c <+46804>:	movzbl 0xc0(%rsp),%eax
0x0000000000583f94 <+46812>:	lea    -0x1(%rax),%edx
0x0000000000583f97 <+46815>:	cmp    $0xfd,%dl
0x0000000000583f9a <+46818>:	jbe    0x583ffa <_PyEval_EvalFrameDefault+46914>
0x0000000000583f9c <+46820>:	cmpw   $0x0,0x53b4a8(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000583fa4 <+46828>:	jne    0x584013 <_PyEval_EvalFrameDefault+46939>
0x0000000000583fa6 <+46830>:	mov    $0x0,%edx
0x0000000000583fab <+46835>:	or     %edx,%eax
0x0000000000583fad <+46837>:	or     %eax,%r12d
0x0000000000583fb0 <+46840>:	movzbl %r12b,%eax
0x0000000000583fb4 <+46844>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000583fbc <+46852>:	mov    %r13,%rbx
0x0000000000583fbf <+46855>:	mov    %r14,%r13
0x0000000000583fc2 <+46858>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000583fc7 <+46863>:	mov    $0x982320,%eax
0x0000000000583fcc <+46868>:	jmp    0x583f3e <_PyEval_EvalFrameDefault+46726>
0x0000000000583fd1 <+46873>:	mov    $0x7444e0,%ecx
0x0000000000583fd6 <+46878>:	mov    $0x10af,%edx
0x0000000000583fdb <+46883>:	mov    $0x74045c,%esi
0x0000000000583fe0 <+46888>:	mov    $0x7408bc,%edi
0x0000000000583fe5 <+46893>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000583fea <+46898>:	mov    %r14,%rdx
0x0000000000583fed <+46901>:	mov    %r13,%rsi
0x0000000000583ff0 <+46904>:	mov    %rbp,%rdi
0x0000000000583ff3 <+46907>:	call   0x573f7b <lltrace_instruction>
0x0000000000583ff8 <+46912>:	jmp    0x583f8c <_PyEval_EvalFrameDefault+46804>
0x0000000000583ffa <+46914>:	mov    $0x7444e0,%ecx
0x0000000000583fff <+46919>:	mov    $0x10b2,%edx
0x0000000000584004 <+46924>:	mov    $0x74045c,%esi
0x0000000000584009 <+46929>:	mov    $0x742a50,%edi
0x000000000058400e <+46934>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584013 <+46939>:	mov    $0xffffffff,%edx
0x0000000000584018 <+46944>:	jmp    0x583fab <_PyEval_EvalFrameDefault+46835>
0x000000000058401a <+46946>:	lea    0x2(%r13),%r15
0x000000000058401e <+46950>:	mov    %r13,0x38(%rbp)
0x0000000000584022 <+46954>:	mov    -0x8(%rbx),%rdx
0x0000000000584026 <+46958>:	mov    -0x10(%rbx),%rsi
0x000000000058402a <+46962>:	mov    0x18(%rsp),%rdi
0x000000000058402f <+46967>:	call   0x575a2b <match_keys>
0x0000000000584034 <+46972>:	test   %rax,%rax
0x0000000000584037 <+46975>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058403d <+46981>:	lea    0x8(%rbx),%r13
0x0000000000584041 <+46985>:	mov    %rax,(%rbx)
0x0000000000584044 <+46988>:	mov    0x20(%rbp),%rdx
0x0000000000584048 <+46992>:	movslq 0x4c(%rdx),%rax
0x000000000058404c <+46996>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584051 <+47001>:	mov    %r13,%rax
0x0000000000584054 <+47004>:	sub    %rcx,%rax
0x0000000000584057 <+47007>:	sar    $0x3,%rax
0x000000000058405b <+47011>:	cmp    %eax,0x44(%rdx)
0x000000000058405e <+47014>:	jl     0x5840b4 <_PyEval_EvalFrameDefault+47100>
0x0000000000584060 <+47016>:	movzwl (%r15),%r12d
0x0000000000584064 <+47020>:	mov    %r12d,%eax
0x0000000000584067 <+47023>:	shr    $0x8,%ax
0x000000000058406b <+47027>:	movzwl %ax,%eax
0x000000000058406e <+47030>:	mov    %eax,0x8(%rsp)
0x0000000000584072 <+47034>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584077 <+47039>:	jne    0x5840cd <_PyEval_EvalFrameDefault+47125>
0x0000000000584079 <+47041>:	movzbl 0xc0(%rsp),%eax
0x0000000000584081 <+47049>:	lea    -0x1(%rax),%edx
0x0000000000584084 <+47052>:	cmp    $0xfd,%dl
0x0000000000584087 <+47055>:	jbe    0x5840dd <_PyEval_EvalFrameDefault+47141>
0x0000000000584089 <+47057>:	cmpw   $0x0,0x53b3bb(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584091 <+47065>:	jne    0x5840f6 <_PyEval_EvalFrameDefault+47166>
0x0000000000584093 <+47067>:	mov    $0x0,%edx
0x0000000000584098 <+47072>:	or     %edx,%eax
0x000000000058409a <+47074>:	or     %eax,%r12d
0x000000000058409d <+47077>:	movzbl %r12b,%eax
0x00000000005840a1 <+47081>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005840a9 <+47089>:	mov    %r13,%rbx
0x00000000005840ac <+47092>:	mov    %r15,%r13
0x00000000005840af <+47095>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005840b4 <+47100>:	mov    $0x7444e0,%ecx
0x00000000005840b9 <+47105>:	mov    $0x10bd,%edx
0x00000000005840be <+47110>:	mov    $0x74045c,%esi
0x00000000005840c3 <+47115>:	mov    $0x7408bc,%edi
0x00000000005840c8 <+47120>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005840cd <+47125>:	mov    %r15,%rdx
0x00000000005840d0 <+47128>:	mov    %r13,%rsi
0x00000000005840d3 <+47131>:	mov    %rbp,%rdi
0x00000000005840d6 <+47134>:	call   0x573f7b <lltrace_instruction>
0x00000000005840db <+47139>:	jmp    0x584079 <_PyEval_EvalFrameDefault+47041>
0x00000000005840dd <+47141>:	mov    $0x7444e0,%ecx
0x00000000005840e2 <+47146>:	mov    $0x10be,%edx
0x00000000005840e7 <+47151>:	mov    $0x74045c,%esi
0x00000000005840ec <+47156>:	mov    $0x742a50,%edi
0x00000000005840f1 <+47161>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005840f6 <+47166>:	mov    $0xffffffff,%edx
0x00000000005840fb <+47171>:	jmp    0x584098 <_PyEval_EvalFrameDefault+47072>
0x00000000005840fd <+47173>:	lea    0x2(%r13),%r15
0x0000000000584101 <+47177>:	mov    %r13,0x38(%rbp)
0x0000000000584105 <+47181>:	mov    -0x8(%rbx),%r14
0x0000000000584109 <+47185>:	mov    %r14,%rdi
0x000000000058410c <+47188>:	call   0x493d05 <PyObject_GetIter>
0x0000000000584111 <+47193>:	mov    %rax,%r12
0x0000000000584114 <+47196>:	mov    %r14,%rdx
0x0000000000584117 <+47199>:	mov    $0x10c5,%esi
0x000000000058411c <+47204>:	mov    $0x74045c,%edi
0x0000000000584121 <+47209>:	call   0x573c83 <Py_DECREF>
0x0000000000584126 <+47214>:	mov    %r12,-0x8(%rbx)
0x000000000058412a <+47218>:	test   %r12,%r12
0x000000000058412d <+47221>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584133 <+47227>:	movzwl 0x2(%r13),%r12d
0x0000000000584138 <+47232>:	mov    %r12d,%eax
0x000000000058413b <+47235>:	shr    $0x8,%ax
0x000000000058413f <+47239>:	movzwl %ax,%eax
0x0000000000584142 <+47242>:	mov    %eax,0x8(%rsp)
0x0000000000584146 <+47246>:	cmpl   $0x0,0x14(%rsp)
0x000000000058414b <+47251>:	jne    0x584185 <_PyEval_EvalFrameDefault+47309>
0x000000000058414d <+47253>:	movzbl 0xc0(%rsp),%eax
0x0000000000584155 <+47261>:	lea    -0x1(%rax),%edx
0x0000000000584158 <+47264>:	cmp    $0xfd,%dl
0x000000000058415b <+47267>:	jbe    0x584195 <_PyEval_EvalFrameDefault+47325>
0x000000000058415d <+47269>:	cmpw   $0x0,0x53b2e7(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584165 <+47277>:	jne    0x5841ae <_PyEval_EvalFrameDefault+47350>
0x0000000000584167 <+47279>:	mov    $0x0,%edx
0x000000000058416c <+47284>:	or     %edx,%eax
0x000000000058416e <+47286>:	or     %eax,%r12d
0x0000000000584171 <+47289>:	movzbl %r12b,%eax
0x0000000000584175 <+47293>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058417d <+47301>:	mov    %r15,%r13
0x0000000000584180 <+47304>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584185 <+47309>:	mov    %r15,%rdx
0x0000000000584188 <+47312>:	mov    %rbx,%rsi
0x000000000058418b <+47315>:	mov    %rbp,%rdi
0x000000000058418e <+47318>:	call   0x573f7b <lltrace_instruction>
0x0000000000584193 <+47323>:	jmp    0x58414d <_PyEval_EvalFrameDefault+47253>
0x0000000000584195 <+47325>:	mov    $0x7444e0,%ecx
0x000000000058419a <+47330>:	mov    $0x10ca,%edx
0x000000000058419f <+47335>:	mov    $0x74045c,%esi
0x00000000005841a4 <+47340>:	mov    $0x742a50,%edi
0x00000000005841a9 <+47345>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005841ae <+47350>:	mov    $0xffffffff,%edx
0x00000000005841b3 <+47355>:	jmp    0x58416c <_PyEval_EvalFrameDefault+47284>
0x00000000005841b5 <+47357>:	lea    0x2(%r13),%r15
0x00000000005841b9 <+47361>:	mov    %r13,0x38(%rbp)
0x00000000005841bd <+47365>:	mov    -0x8(%rbx),%r12
0x00000000005841c1 <+47369>:	mov    0x8(%r12),%rax
0x00000000005841c6 <+47374>:	cmp    $0x98fb20,%rax
0x00000000005841cc <+47380>:	je     0x584261 <_PyEval_EvalFrameDefault+47529>
0x00000000005841d2 <+47386>:	cmp    $0x98ff20,%rax
0x00000000005841d8 <+47392>:	je     0x584204 <_PyEval_EvalFrameDefault+47436>
0x00000000005841da <+47394>:	mov    %r12,%rdi
0x00000000005841dd <+47397>:	call   0x493d05 <PyObject_GetIter>
0x00000000005841e2 <+47402>:	mov    %rax,%r13
0x00000000005841e5 <+47405>:	mov    %r12,%rdx
0x00000000005841e8 <+47408>:	mov    $0x10e1,%esi
0x00000000005841ed <+47413>:	mov    $0x74045c,%edi
0x00000000005841f2 <+47418>:	call   0x573c83 <Py_DECREF>
0x00000000005841f7 <+47423>:	mov    %r13,-0x8(%rbx)
0x00000000005841fb <+47427>:	test   %r13,%r13
0x00000000005841fe <+47430>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584204 <+47436>:	movzwl (%r15),%r12d
0x0000000000584208 <+47440>:	mov    %r12d,%eax
0x000000000058420b <+47443>:	shr    $0x8,%ax
0x000000000058420f <+47447>:	movzwl %ax,%eax
0x0000000000584212 <+47450>:	mov    %eax,0x8(%rsp)
0x0000000000584216 <+47454>:	cmpl   $0x0,0x14(%rsp)
0x000000000058421b <+47459>:	jne    0x5842a3 <_PyEval_EvalFrameDefault+47595>
0x0000000000584221 <+47465>:	movzbl 0xc0(%rsp),%eax
0x0000000000584229 <+47473>:	lea    -0x1(%rax),%edx
0x000000000058422c <+47476>:	cmp    $0xfd,%dl
0x000000000058422f <+47479>:	jbe    0x5842b6 <_PyEval_EvalFrameDefault+47614>
0x0000000000584235 <+47485>:	cmpw   $0x0,0x53b20f(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058423d <+47493>:	jne    0x5842cf <_PyEval_EvalFrameDefault+47639>
0x0000000000584243 <+47499>:	mov    $0x0,%edx
0x0000000000584248 <+47504>:	or     %edx,%eax
0x000000000058424a <+47506>:	or     %eax,%r12d
0x000000000058424d <+47509>:	movzbl %r12b,%eax
0x0000000000584251 <+47513>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000584259 <+47521>:	mov    %r15,%r13
0x000000000058425c <+47524>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584261 <+47529>:	mov    0x20(%rbp),%rax
0x0000000000584265 <+47533>:	testl  $0x180,0x30(%rax)
0x000000000058426c <+47540>:	jne    0x584204 <_PyEval_EvalFrameDefault+47436>
0x000000000058426e <+47542>:	mov    %r12,%rdx
0x0000000000584271 <+47545>:	mov    $0x10d6,%esi
0x0000000000584276 <+47550>:	mov    $0x74045c,%edi
0x000000000058427b <+47555>:	call   0x573c83 <Py_DECREF>
0x0000000000584280 <+47560>:	movq   $0x0,-0x8(%rbx)
0x0000000000584288 <+47568>:	mov    $0x7430a8,%edx
0x000000000058428d <+47573>:	mov    0x409ee4(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x0000000000584294 <+47580>:	mov    0x18(%rsp),%rdi
0x0000000000584299 <+47585>:	call   0x5a33b2 <_PyErr_SetString>
0x000000000058429e <+47590>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005842a3 <+47595>:	mov    %r15,%rdx
0x00000000005842a6 <+47598>:	mov    %rbx,%rsi
0x00000000005842a9 <+47601>:	mov    %rbp,%rdi
0x00000000005842ac <+47604>:	call   0x573f7b <lltrace_instruction>
0x00000000005842b1 <+47609>:	jmp    0x584221 <_PyEval_EvalFrameDefault+47465>
0x00000000005842b6 <+47614>:	mov    $0x7444e0,%ecx
0x00000000005842bb <+47619>:	mov    $0x10e7,%edx
0x00000000005842c0 <+47624>:	mov    $0x74045c,%esi
0x00000000005842c5 <+47629>:	mov    $0x742a50,%edi
0x00000000005842ca <+47634>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005842cf <+47639>:	mov    $0xffffffff,%edx
0x00000000005842d4 <+47644>:	jmp    0x584248 <_PyEval_EvalFrameDefault+47504>
0x00000000005842d9 <+47649>:	lea    0x2(%r13),%r15
0x00000000005842dd <+47653>:	mov    %r13,0x38(%rbp)
0x00000000005842e1 <+47657>:	mov    -0x8(%rbx),%r12
0x00000000005842e5 <+47661>:	mov    0x8(%r12),%rax
0x00000000005842ea <+47666>:	mov    %r12,%rdi
0x00000000005842ed <+47669>:	call   *0xe0(%rax)
0x00000000005842f3 <+47675>:	test   %rax,%rax
0x00000000005842f6 <+47678>:	je     0x5843bc <_PyEval_EvalFrameDefault+47876>
0x00000000005842fc <+47684>:	lea    0x8(%rbx),%r13
0x0000000000584300 <+47688>:	mov    %rax,(%rbx)
0x0000000000584303 <+47691>:	mov    0x20(%rbp),%rdx
0x0000000000584307 <+47695>:	movslq 0x4c(%rdx),%rax
0x000000000058430b <+47699>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584310 <+47704>:	mov    %r13,%rax
0x0000000000584313 <+47707>:	sub    %rcx,%rax
0x0000000000584316 <+47710>:	sar    $0x3,%rax
0x000000000058431a <+47714>:	cmp    %eax,0x44(%rdx)
0x000000000058431d <+47717>:	jl     0x584373 <_PyEval_EvalFrameDefault+47803>
0x000000000058431f <+47719>:	movzwl (%r15),%r12d
0x0000000000584323 <+47723>:	mov    %r12d,%eax
0x0000000000584326 <+47726>:	shr    $0x8,%ax
0x000000000058432a <+47730>:	movzwl %ax,%eax
0x000000000058432d <+47733>:	mov    %eax,0x8(%rsp)
0x0000000000584331 <+47737>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584336 <+47742>:	jne    0x58438c <_PyEval_EvalFrameDefault+47828>
0x0000000000584338 <+47744>:	movzbl 0xc0(%rsp),%eax
0x0000000000584340 <+47752>:	lea    -0x1(%rax),%edx
0x0000000000584343 <+47755>:	cmp    $0xfd,%dl
0x0000000000584346 <+47758>:	jbe    0x58439c <_PyEval_EvalFrameDefault+47844>
0x0000000000584348 <+47760>:	cmpw   $0x0,0x53b0fc(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584350 <+47768>:	jne    0x5843b5 <_PyEval_EvalFrameDefault+47869>
0x0000000000584352 <+47770>:	mov    $0x0,%edx
0x0000000000584357 <+47775>:	or     %edx,%eax
0x0000000000584359 <+47777>:	or     %eax,%r12d
0x000000000058435c <+47780>:	movzbl %r12b,%eax
0x0000000000584360 <+47784>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000584368 <+47792>:	mov    %r13,%rbx
0x000000000058436b <+47795>:	mov    %r15,%r13
0x000000000058436e <+47798>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584373 <+47803>:	mov    $0x7444e0,%ecx
0x0000000000584378 <+47808>:	mov    $0x10f5,%edx
0x000000000058437d <+47813>:	mov    $0x74045c,%esi
0x0000000000584382 <+47818>:	mov    $0x7408bc,%edi
0x0000000000584387 <+47823>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058438c <+47828>:	mov    %r15,%rdx
0x000000000058438f <+47831>:	mov    %r13,%rsi
0x0000000000584392 <+47834>:	mov    %rbp,%rdi
0x0000000000584395 <+47837>:	call   0x573f7b <lltrace_instruction>
0x000000000058439a <+47842>:	jmp    0x584338 <_PyEval_EvalFrameDefault+47744>
0x000000000058439c <+47844>:	mov    $0x7444e0,%ecx
0x00000000005843a1 <+47849>:	mov    $0x10f8,%edx
0x00000000005843a6 <+47854>:	mov    $0x74045c,%esi
0x00000000005843ab <+47859>:	mov    $0x742a50,%edi
0x00000000005843b0 <+47864>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005843b5 <+47869>:	mov    $0xffffffff,%edx
0x00000000005843ba <+47874>:	jmp    0x584357 <_PyEval_EvalFrameDefault+47775>
0x00000000005843bc <+47876>:	mov    0x18(%rsp),%r14
0x00000000005843c1 <+47881>:	mov    %r14,%rdi
0x00000000005843c4 <+47884>:	call   0x573630 <_PyErr_Occurred>
0x00000000005843c9 <+47889>:	test   %rax,%rax
0x00000000005843cc <+47892>:	je     0x584407 <_PyEval_EvalFrameDefault+47951>
0x00000000005843ce <+47894>:	mov    0x409a03(%rip),%rsi        # 0x98ddd8 <PyExc_StopIteration>
0x00000000005843d5 <+47901>:	mov    %r14,%rdi
0x00000000005843d8 <+47904>:	call   0x5a26c6 <_PyErr_ExceptionMatches>
0x00000000005843dd <+47909>:	test   %eax,%eax
0x00000000005843df <+47911>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005843e5 <+47917>:	mov    %r14,%rdx
0x00000000005843e8 <+47920>:	mov    0x48(%r14),%rdi
0x00000000005843ec <+47924>:	test   %rdi,%rdi
0x00000000005843ef <+47927>:	je     0x5843fd <_PyEval_EvalFrameDefault+47941>
0x00000000005843f1 <+47929>:	mov    0x58(%r14),%rsi
0x00000000005843f5 <+47933>:	mov    %rbp,%rcx
0x00000000005843f8 <+47936>:	call   0x578770 <call_exc_trace>
0x00000000005843fd <+47941>:	mov    0x18(%rsp),%rdi
0x0000000000584402 <+47946>:	call   0x5a273b <_PyErr_Clear>
0x0000000000584407 <+47951>:	mov    0x20(%rbp),%rax
0x000000000058440b <+47955>:	movslq 0x4c(%rax),%rax
0x000000000058440f <+47959>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000584414 <+47964>:	mov    %rbx,%rax
0x0000000000584417 <+47967>:	sub    %rdx,%rax
0x000000000058441a <+47970>:	sar    $0x3,%rax
0x000000000058441e <+47974>:	test   %eax,%eax
0x0000000000584420 <+47976>:	jle    0x584490 <_PyEval_EvalFrameDefault+48088>
0x0000000000584422 <+47978>:	sub    $0x8,%rbx
0x0000000000584426 <+47982>:	mov    %r12,%rdx
0x0000000000584429 <+47985>:	mov    $0x1105,%esi
0x000000000058442e <+47990>:	mov    $0x74045c,%edi
0x0000000000584433 <+47995>:	call   0x573c83 <Py_DECREF>
0x0000000000584438 <+48000>:	movslq 0x8(%rsp),%rax
0x000000000058443d <+48005>:	lea    (%r15,%rax,2),%r13
0x0000000000584441 <+48009>:	movzwl 0x0(%r13),%r12d
0x0000000000584446 <+48014>:	mov    %r12d,%eax
0x0000000000584449 <+48017>:	shr    $0x8,%ax
0x000000000058444d <+48021>:	movzwl %ax,%eax
0x0000000000584450 <+48024>:	mov    %eax,0x8(%rsp)
0x0000000000584454 <+48028>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584459 <+48033>:	jne    0x5844a9 <_PyEval_EvalFrameDefault+48113>
0x000000000058445b <+48035>:	movzbl 0xc0(%rsp),%eax
0x0000000000584463 <+48043>:	lea    -0x1(%rax),%edx
0x0000000000584466 <+48046>:	cmp    $0xfd,%dl
0x0000000000584469 <+48049>:	jbe    0x5844b9 <_PyEval_EvalFrameDefault+48129>
0x000000000058446b <+48051>:	cmpw   $0x0,0x53afd9(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584473 <+48059>:	jne    0x5844d2 <_PyEval_EvalFrameDefault+48154>
0x0000000000584475 <+48061>:	mov    $0x0,%edx
0x000000000058447a <+48066>:	or     %edx,%eax
0x000000000058447c <+48068>:	or     %eax,%r12d
0x000000000058447f <+48071>:	movzbl %r12b,%eax
0x0000000000584483 <+48075>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058448b <+48083>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584490 <+48088>:	mov    $0x7444e0,%ecx
0x0000000000584495 <+48093>:	mov    $0x1104,%edx
0x000000000058449a <+48098>:	mov    $0x74045c,%esi
0x000000000058449f <+48103>:	mov    $0x7408ec,%edi
0x00000000005844a4 <+48108>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005844a9 <+48113>:	mov    %r13,%rdx
0x00000000005844ac <+48116>:	mov    %rbx,%rsi
0x00000000005844af <+48119>:	mov    %rbp,%rdi
0x00000000005844b2 <+48122>:	call   0x573f7b <lltrace_instruction>
0x00000000005844b7 <+48127>:	jmp    0x58445b <_PyEval_EvalFrameDefault+48035>
0x00000000005844b9 <+48129>:	mov    $0x7444e0,%ecx
0x00000000005844be <+48134>:	mov    $0x1107,%edx
0x00000000005844c3 <+48139>:	mov    $0x74045c,%esi
0x00000000005844c8 <+48144>:	mov    $0x742a50,%edi
0x00000000005844cd <+48149>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005844d2 <+48154>:	mov    $0xffffffff,%edx
0x00000000005844d7 <+48159>:	jmp    0x58447a <_PyEval_EvalFrameDefault+48066>
0x00000000005844d9 <+48161>:	lea    0x2(%r13),%r15
0x00000000005844dd <+48165>:	mov    %r13,0x38(%rbp)
0x00000000005844e1 <+48169>:	mov    -0x8(%rbx),%r12
0x00000000005844e5 <+48173>:	mov    $0xa9c438,%esi
0x00000000005844ea <+48178>:	mov    %r12,%rdi
0x00000000005844ed <+48181>:	call   0x50e902 <_PyObject_LookupSpecial>
0x00000000005844f2 <+48186>:	mov    %rax,%r13
0x00000000005844f5 <+48189>:	test   %rax,%rax
0x00000000005844f8 <+48192>:	je     0x5845d7 <_PyEval_EvalFrameDefault+48415>
0x00000000005844fe <+48198>:	mov    $0xa9c478,%esi
0x0000000000584503 <+48203>:	mov    %r12,%rdi
0x0000000000584506 <+48206>:	call   0x50e902 <_PyObject_LookupSpecial>
0x000000000058450b <+48211>:	test   %rax,%rax
0x000000000058450e <+48214>:	je     0x584613 <_PyEval_EvalFrameDefault+48475>
0x0000000000584514 <+48220>:	mov    %rax,-0x8(%rbx)
0x0000000000584518 <+48224>:	mov    %r12,%rdx
0x000000000058451b <+48227>:	mov    $0x1124,%esi
0x0000000000584520 <+48232>:	mov    $0x74045c,%edi
0x0000000000584525 <+48237>:	call   0x573c83 <Py_DECREF>
0x000000000058452a <+48242>:	mov    %r13,%rdi
0x000000000058452d <+48245>:	call   0x57574f <_PyObject_CallNoArgs>
0x0000000000584532 <+48250>:	mov    %rax,%r12
0x0000000000584535 <+48253>:	mov    %r13,%rdx
0x0000000000584538 <+48256>:	mov    $0x1126,%esi
0x000000000058453d <+48261>:	mov    $0x74045c,%edi
0x0000000000584542 <+48266>:	call   0x573c83 <Py_DECREF>
0x0000000000584547 <+48271>:	test   %r12,%r12
0x000000000058454a <+48274>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584550 <+48280>:	lea    0x8(%rbx),%r13
0x0000000000584554 <+48284>:	mov    %r12,(%rbx)
0x0000000000584557 <+48287>:	mov    0x20(%rbp),%rdx
0x000000000058455b <+48291>:	movslq 0x4c(%rdx),%rax
0x000000000058455f <+48295>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584564 <+48300>:	mov    %r13,%rax
0x0000000000584567 <+48303>:	sub    %rcx,%rax
0x000000000058456a <+48306>:	sar    $0x3,%rax
0x000000000058456e <+48310>:	cmp    %eax,0x44(%rdx)
0x0000000000584571 <+48313>:	jl     0x58465f <_PyEval_EvalFrameDefault+48551>
0x0000000000584577 <+48319>:	movzwl (%r15),%r12d
0x000000000058457b <+48323>:	mov    %r12d,%eax
0x000000000058457e <+48326>:	shr    $0x8,%ax
0x0000000000584582 <+48330>:	movzwl %ax,%eax
0x0000000000584585 <+48333>:	mov    %eax,0x8(%rsp)
0x0000000000584589 <+48337>:	cmpl   $0x0,0x14(%rsp)
0x000000000058458e <+48342>:	jne    0x584678 <_PyEval_EvalFrameDefault+48576>
0x0000000000584594 <+48348>:	movzbl 0xc0(%rsp),%eax
0x000000000058459c <+48356>:	lea    -0x1(%rax),%edx
0x000000000058459f <+48359>:	cmp    $0xfd,%dl
0x00000000005845a2 <+48362>:	jbe    0x58468b <_PyEval_EvalFrameDefault+48595>
0x00000000005845a8 <+48368>:	cmpw   $0x0,0x53ae9c(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005845b0 <+48376>:	jne    0x5846a4 <_PyEval_EvalFrameDefault+48620>
0x00000000005845b6 <+48382>:	mov    $0x0,%edx
0x00000000005845bb <+48387>:	or     %edx,%eax
0x00000000005845bd <+48389>:	or     %eax,%r12d
0x00000000005845c0 <+48392>:	movzbl %r12b,%eax
0x00000000005845c4 <+48396>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005845cc <+48404>:	mov    %r13,%rbx
0x00000000005845cf <+48407>:	mov    %r15,%r13
0x00000000005845d2 <+48410>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005845d7 <+48415>:	mov    0x18(%rsp),%rdi
0x00000000005845dc <+48420>:	call   0x573630 <_PyErr_Occurred>
0x00000000005845e1 <+48425>:	test   %rax,%rax
0x00000000005845e4 <+48428>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005845ea <+48434>:	mov    0x8(%r12),%rax
0x00000000005845ef <+48439>:	mov    0x18(%rax),%rcx
0x00000000005845f3 <+48443>:	mov    $0x7430f0,%edx
0x00000000005845f8 <+48448>:	mov    0x409b79(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x00000000005845ff <+48455>:	mov    0x18(%rsp),%rdi
0x0000000000584604 <+48460>:	mov    $0x0,%eax
0x0000000000584609 <+48465>:	call   0x5a3574 <_PyErr_Format>
0x000000000058460e <+48470>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584613 <+48475>:	mov    0x18(%rsp),%rdi
0x0000000000584618 <+48480>:	call   0x573630 <_PyErr_Occurred>
0x000000000058461d <+48485>:	test   %rax,%rax
0x0000000000584620 <+48488>:	je     0x584639 <_PyEval_EvalFrameDefault+48513>
0x0000000000584622 <+48490>:	mov    %r13,%rdx
0x0000000000584625 <+48493>:	mov    $0x1120,%esi
0x000000000058462a <+48498>:	mov    $0x74045c,%edi
0x000000000058462f <+48503>:	call   0x573c83 <Py_DECREF>
0x0000000000584634 <+48508>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584639 <+48513>:	mov    0x8(%r12),%rax
0x000000000058463e <+48518>:	mov    0x18(%rax),%rcx
0x0000000000584642 <+48522>:	mov    $0x743140,%edx
0x0000000000584647 <+48527>:	mov    0x409b2a(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x000000000058464e <+48534>:	mov    0x18(%rsp),%rdi
0x0000000000584653 <+48539>:	mov    $0x0,%eax
0x0000000000584658 <+48544>:	call   0x5a3574 <_PyErr_Format>
0x000000000058465d <+48549>:	jmp    0x584622 <_PyEval_EvalFrameDefault+48490>
0x000000000058465f <+48551>:	mov    $0x7444e0,%ecx
0x0000000000584664 <+48556>:	mov    $0x1129,%edx
0x0000000000584669 <+48561>:	mov    $0x74045c,%esi
0x000000000058466e <+48566>:	mov    $0x7408bc,%edi
0x0000000000584673 <+48571>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584678 <+48576>:	mov    %r15,%rdx
0x000000000058467b <+48579>:	mov    %r13,%rsi
0x000000000058467e <+48582>:	mov    %rbp,%rdi
0x0000000000584681 <+48585>:	call   0x573f7b <lltrace_instruction>
0x0000000000584686 <+48590>:	jmp    0x584594 <_PyEval_EvalFrameDefault+48348>
0x000000000058468b <+48595>:	mov    $0x7444e0,%ecx
0x0000000000584690 <+48600>:	mov    $0x112b,%edx
0x0000000000584695 <+48605>:	mov    $0x74045c,%esi
0x000000000058469a <+48610>:	mov    $0x742a50,%edi
0x000000000058469f <+48615>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005846a4 <+48620>:	mov    $0xffffffff,%edx
0x00000000005846a9 <+48625>:	jmp    0x5845bb <_PyEval_EvalFrameDefault+48387>
0x00000000005846ae <+48630>:	lea    0x2(%r13),%r15
0x00000000005846b2 <+48634>:	mov    %r13,0x38(%rbp)
0x00000000005846b6 <+48638>:	mov    -0x8(%rbx),%r12
0x00000000005846ba <+48642>:	mov    $0xa9cb98,%esi
0x00000000005846bf <+48647>:	mov    %r12,%rdi
0x00000000005846c2 <+48650>:	call   0x50e902 <_PyObject_LookupSpecial>
0x00000000005846c7 <+48655>:	mov    %rax,%r13
0x00000000005846ca <+48658>:	test   %rax,%rax
0x00000000005846cd <+48661>:	je     0x5847ac <_PyEval_EvalFrameDefault+48884>
0x00000000005846d3 <+48667>:	mov    $0xa9cc10,%esi
0x00000000005846d8 <+48672>:	mov    %r12,%rdi
0x00000000005846db <+48675>:	call   0x50e902 <_PyObject_LookupSpecial>
0x00000000005846e0 <+48680>:	test   %rax,%rax
0x00000000005846e3 <+48683>:	je     0x5847e8 <_PyEval_EvalFrameDefault+48944>
0x00000000005846e9 <+48689>:	mov    %rax,-0x8(%rbx)
0x00000000005846ed <+48693>:	mov    %r12,%rdx
0x00000000005846f0 <+48696>:	mov    $0x1148,%esi
0x00000000005846f5 <+48701>:	mov    $0x74045c,%edi
0x00000000005846fa <+48706>:	call   0x573c83 <Py_DECREF>
0x00000000005846ff <+48711>:	mov    %r13,%rdi
0x0000000000584702 <+48714>:	call   0x57574f <_PyObject_CallNoArgs>
0x0000000000584707 <+48719>:	mov    %rax,%r12
0x000000000058470a <+48722>:	mov    %r13,%rdx
0x000000000058470d <+48725>:	mov    $0x114a,%esi
0x0000000000584712 <+48730>:	mov    $0x74045c,%edi
0x0000000000584717 <+48735>:	call   0x573c83 <Py_DECREF>
0x000000000058471c <+48740>:	test   %r12,%r12
0x000000000058471f <+48743>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584725 <+48749>:	lea    0x8(%rbx),%r13
0x0000000000584729 <+48753>:	mov    %r12,(%rbx)
0x000000000058472c <+48756>:	mov    0x20(%rbp),%rdx
0x0000000000584730 <+48760>:	movslq 0x4c(%rdx),%rax
0x0000000000584734 <+48764>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584739 <+48769>:	mov    %r13,%rax
0x000000000058473c <+48772>:	sub    %rcx,%rax
0x000000000058473f <+48775>:	sar    $0x3,%rax
0x0000000000584743 <+48779>:	cmp    %eax,0x44(%rdx)
0x0000000000584746 <+48782>:	jl     0x584834 <_PyEval_EvalFrameDefault+49020>
0x000000000058474c <+48788>:	movzwl (%r15),%r12d
0x0000000000584750 <+48792>:	mov    %r12d,%eax
0x0000000000584753 <+48795>:	shr    $0x8,%ax
0x0000000000584757 <+48799>:	movzwl %ax,%eax
0x000000000058475a <+48802>:	mov    %eax,0x8(%rsp)
0x000000000058475e <+48806>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584763 <+48811>:	jne    0x58484d <_PyEval_EvalFrameDefault+49045>
0x0000000000584769 <+48817>:	movzbl 0xc0(%rsp),%eax
0x0000000000584771 <+48825>:	lea    -0x1(%rax),%edx
0x0000000000584774 <+48828>:	cmp    $0xfd,%dl
0x0000000000584777 <+48831>:	jbe    0x584860 <_PyEval_EvalFrameDefault+49064>
0x000000000058477d <+48837>:	cmpw   $0x0,0x53acc7(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584785 <+48845>:	jne    0x584879 <_PyEval_EvalFrameDefault+49089>
0x000000000058478b <+48851>:	mov    $0x0,%edx
0x0000000000584790 <+48856>:	or     %edx,%eax
0x0000000000584792 <+48858>:	or     %eax,%r12d
0x0000000000584795 <+48861>:	movzbl %r12b,%eax
0x0000000000584799 <+48865>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005847a1 <+48873>:	mov    %r13,%rbx
0x00000000005847a4 <+48876>:	mov    %r15,%r13
0x00000000005847a7 <+48879>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005847ac <+48884>:	mov    0x18(%rsp),%rdi
0x00000000005847b1 <+48889>:	call   0x573630 <_PyErr_Occurred>
0x00000000005847b6 <+48894>:	test   %rax,%rax
0x00000000005847b9 <+48897>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005847bf <+48903>:	mov    0x8(%r12),%rax
0x00000000005847c4 <+48908>:	mov    0x18(%rax),%rcx
0x00000000005847c8 <+48912>:	mov    $0x7431a8,%edx
0x00000000005847cd <+48917>:	mov    0x4099a4(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x00000000005847d4 <+48924>:	mov    0x18(%rsp),%rdi
0x00000000005847d9 <+48929>:	mov    $0x0,%eax
0x00000000005847de <+48934>:	call   0x5a3574 <_PyErr_Format>
0x00000000005847e3 <+48939>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005847e8 <+48944>:	mov    0x18(%rsp),%rdi
0x00000000005847ed <+48949>:	call   0x573630 <_PyErr_Occurred>
0x00000000005847f2 <+48954>:	test   %rax,%rax
0x00000000005847f5 <+48957>:	je     0x58480e <_PyEval_EvalFrameDefault+48982>
0x00000000005847f7 <+48959>:	mov    %r13,%rdx
0x00000000005847fa <+48962>:	mov    $0x1144,%esi
0x00000000005847ff <+48967>:	mov    $0x74045c,%edi
0x0000000000584804 <+48972>:	call   0x573c83 <Py_DECREF>
0x0000000000584809 <+48977>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058480e <+48982>:	mov    0x8(%r12),%rax
0x0000000000584813 <+48987>:	mov    0x18(%rax),%rcx
0x0000000000584817 <+48991>:	mov    $0x7431e8,%edx
0x000000000058481c <+48996>:	mov    0x409955(%rip),%rsi        # 0x98e178 <PyExc_TypeError>
0x0000000000584823 <+49003>:	mov    0x18(%rsp),%rdi
0x0000000000584828 <+49008>:	mov    $0x0,%eax
0x000000000058482d <+49013>:	call   0x5a3574 <_PyErr_Format>
0x0000000000584832 <+49018>:	jmp    0x5847f7 <_PyEval_EvalFrameDefault+48959>
0x0000000000584834 <+49020>:	mov    $0x7444e0,%ecx
0x0000000000584839 <+49025>:	mov    $0x114e,%edx
0x000000000058483e <+49030>:	mov    $0x74045c,%esi
0x0000000000584843 <+49035>:	mov    $0x7408bc,%edi
0x0000000000584848 <+49040>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058484d <+49045>:	mov    %r15,%rdx
0x0000000000584850 <+49048>:	mov    %r13,%rsi
0x0000000000584853 <+49051>:	mov    %rbp,%rdi
0x0000000000584856 <+49054>:	call   0x573f7b <lltrace_instruction>
0x000000000058485b <+49059>:	jmp    0x584769 <_PyEval_EvalFrameDefault+48817>
0x0000000000584860 <+49064>:	mov    $0x7444e0,%ecx
0x0000000000584865 <+49069>:	mov    $0x114f,%edx
0x000000000058486a <+49074>:	mov    $0x74045c,%esi
0x000000000058486f <+49079>:	mov    $0x742a50,%edi
0x0000000000584874 <+49084>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584879 <+49089>:	mov    $0xffffffff,%edx
0x000000000058487e <+49094>:	jmp    0x584790 <_PyEval_EvalFrameDefault+48856>
0x0000000000584883 <+49099>:	lea    0x2(%r13),%r15
0x0000000000584887 <+49103>:	mov    %r13,0x38(%rbp)
0x000000000058488b <+49107>:	mov    -0x8(%rbx),%r13
0x000000000058488f <+49111>:	test   %r13,%r13
0x0000000000584892 <+49114>:	je     0x5849a6 <_PyEval_EvalFrameDefault+49390>
0x0000000000584898 <+49120>:	mov    0x8(%r13),%r14
0x000000000058489c <+49124>:	testb  $0x40,0xab(%r14)
0x00000000005848a4 <+49132>:	je     0x5849a6 <_PyEval_EvalFrameDefault+49390>
0x00000000005848aa <+49138>:	mov    %r13,%rdi
0x00000000005848ad <+49141>:	call   0x4ba45d <PyException_GetTraceback>
0x00000000005848b2 <+49146>:	mov    %rax,%r12
0x00000000005848b5 <+49149>:	mov    %rax,%rdi
0x00000000005848b8 <+49152>:	call   0x573cb3 <Py_XDECREF>
0x00000000005848bd <+49157>:	mov    -0x18(%rbx),%rax
0x00000000005848c1 <+49161>:	mov    0x8(%rax),%rax
0x00000000005848c5 <+49165>:	testb  $0x1,0xab(%rax)
0x00000000005848cc <+49172>:	je     0x5849bf <_PyEval_EvalFrameDefault+49415>
0x00000000005848d2 <+49178>:	mov    -0x20(%rbx),%rdi
0x00000000005848d6 <+49182>:	movq   $0x0,0xe0(%rsp)
0x00000000005848e2 <+49194>:	mov    %r14,0xe8(%rsp)
0x00000000005848ea <+49202>:	mov    %r13,0xf0(%rsp)
0x00000000005848f2 <+49210>:	mov    %r12,0xf8(%rsp)
0x00000000005848fa <+49218>:	mov    $0x0,%ecx
0x00000000005848ff <+49223>:	movabs $0x8000000000000003,%rdx
0x0000000000584909 <+49233>:	lea    0xe8(%rsp),%rsi
0x0000000000584911 <+49241>:	call   0x4a9fb2 <PyObject_Vectorcall>
0x0000000000584916 <+49246>:	test   %rax,%rax
0x0000000000584919 <+49249>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058491f <+49255>:	lea    0x8(%rbx),%r13
0x0000000000584923 <+49259>:	mov    %rax,(%rbx)
0x0000000000584926 <+49262>:	mov    0x20(%rbp),%rdx
0x000000000058492a <+49266>:	movslq 0x4c(%rdx),%rax
0x000000000058492e <+49270>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584933 <+49275>:	mov    %r13,%rax
0x0000000000584936 <+49278>:	sub    %rcx,%rax
0x0000000000584939 <+49281>:	sar    $0x3,%rax
0x000000000058493d <+49285>:	cmp    %eax,0x44(%rdx)
0x0000000000584940 <+49288>:	jl     0x5849d8 <_PyEval_EvalFrameDefault+49440>
0x0000000000584946 <+49294>:	movzwl (%r15),%r12d
0x000000000058494a <+49298>:	mov    %r12d,%eax
0x000000000058494d <+49301>:	shr    $0x8,%ax
0x0000000000584951 <+49305>:	movzwl %ax,%eax
0x0000000000584954 <+49308>:	mov    %eax,0x8(%rsp)
0x0000000000584958 <+49312>:	cmpl   $0x0,0x14(%rsp)
0x000000000058495d <+49317>:	jne    0x5849f1 <_PyEval_EvalFrameDefault+49465>
0x0000000000584963 <+49323>:	movzbl 0xc0(%rsp),%eax
0x000000000058496b <+49331>:	lea    -0x1(%rax),%edx
0x000000000058496e <+49334>:	cmp    $0xfd,%dl
0x0000000000584971 <+49337>:	jbe    0x584a04 <_PyEval_EvalFrameDefault+49484>
0x0000000000584977 <+49343>:	cmpw   $0x0,0x53aacd(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058497f <+49351>:	jne    0x584a1d <_PyEval_EvalFrameDefault+49509>
0x0000000000584985 <+49357>:	mov    $0x0,%edx
0x000000000058498a <+49362>:	or     %edx,%eax
0x000000000058498c <+49364>:	or     %eax,%r12d
0x000000000058498f <+49367>:	movzbl %r12b,%eax
0x0000000000584993 <+49371>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058499b <+49379>:	mov    %r13,%rbx
0x000000000058499e <+49382>:	mov    %r15,%r13
0x00000000005849a1 <+49385>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005849a6 <+49390>:	mov    $0x7444e0,%ecx
0x00000000005849ab <+49395>:	mov    $0x115f,%edx
0x00000000005849b0 <+49400>:	mov    $0x74045c,%esi
0x00000000005849b5 <+49405>:	mov    $0x742c98,%edi
0x00000000005849ba <+49410>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005849bf <+49415>:	mov    $0x7444e0,%ecx
0x00000000005849c4 <+49420>:	mov    $0x1163,%edx
0x00000000005849c9 <+49425>:	mov    $0x74045c,%esi
0x00000000005849ce <+49430>:	mov    $0x740bdd,%edi
0x00000000005849d3 <+49435>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005849d8 <+49440>:	mov    $0x7444e0,%ecx
0x00000000005849dd <+49445>:	mov    $0x116b,%edx
0x00000000005849e2 <+49450>:	mov    $0x74045c,%esi
0x00000000005849e7 <+49455>:	mov    $0x7408bc,%edi
0x00000000005849ec <+49460>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005849f1 <+49465>:	mov    %r15,%rdx
0x00000000005849f4 <+49468>:	mov    %r13,%rsi
0x00000000005849f7 <+49471>:	mov    %rbp,%rdi
0x00000000005849fa <+49474>:	call   0x573f7b <lltrace_instruction>
0x00000000005849ff <+49479>:	jmp    0x584963 <_PyEval_EvalFrameDefault+49323>
0x0000000000584a04 <+49484>:	mov    $0x7444e0,%ecx
0x0000000000584a09 <+49489>:	mov    $0x116c,%edx
0x0000000000584a0e <+49494>:	mov    $0x74045c,%esi
0x0000000000584a13 <+49499>:	mov    $0x742a50,%edi
0x0000000000584a18 <+49504>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584a1d <+49509>:	mov    $0xffffffff,%edx
0x0000000000584a22 <+49514>:	jmp    0x58498a <_PyEval_EvalFrameDefault+49362>
0x0000000000584a27 <+49519>:	lea    0x2(%r13),%r14
0x0000000000584a2b <+49523>:	mov    %r13,0x38(%rbp)
0x0000000000584a2f <+49527>:	mov    -0x8(%rbx),%rdx
0x0000000000584a33 <+49531>:	mov    0x18(%rsp),%rax
0x0000000000584a38 <+49536>:	mov    0x78(%rax),%rcx
0x0000000000584a3c <+49540>:	mov    (%rcx),%rax
0x0000000000584a3f <+49543>:	test   %rax,%rax
0x0000000000584a42 <+49546>:	je     0x584af9 <_PyEval_EvalFrameDefault+49729>
0x0000000000584a48 <+49552>:	mov    %rax,-0x8(%rbx)
0x0000000000584a4c <+49556>:	addq   $0x1,0x53f034(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000584a54 <+49564>:	mov    (%rdx),%rax
0x0000000000584a57 <+49567>:	add    $0x1,%rax
0x0000000000584a5b <+49571>:	mov    %rax,(%rdx)
0x0000000000584a5e <+49574>:	lea    0x8(%rbx),%r13
0x0000000000584a62 <+49578>:	mov    %rdx,(%rbx)
0x0000000000584a65 <+49581>:	mov    0x20(%rbp),%rsi
0x0000000000584a69 <+49585>:	movslq 0x4c(%rsi),%rax
0x0000000000584a6d <+49589>:	lea    0x48(%rbp,%rax,8),%rdi
0x0000000000584a72 <+49594>:	mov    %r13,%rax
0x0000000000584a75 <+49597>:	sub    %rdi,%rax
0x0000000000584a78 <+49600>:	sar    $0x3,%rax
0x0000000000584a7c <+49604>:	cmp    %eax,0x44(%rsi)
0x0000000000584a7f <+49607>:	jl     0x584b20 <_PyEval_EvalFrameDefault+49768>
0x0000000000584a85 <+49613>:	mov    0x8(%rdx),%rax
0x0000000000584a89 <+49617>:	testb  $0x40,0xab(%rax)
0x0000000000584a90 <+49624>:	je     0x584b39 <_PyEval_EvalFrameDefault+49793>
0x0000000000584a96 <+49630>:	mov    %rdx,(%rcx)
0x0000000000584a99 <+49633>:	movzwl (%r14),%r12d
0x0000000000584a9d <+49637>:	mov    %r12d,%eax
0x0000000000584aa0 <+49640>:	shr    $0x8,%ax
0x0000000000584aa4 <+49644>:	movzwl %ax,%eax
0x0000000000584aa7 <+49647>:	mov    %eax,0x8(%rsp)
0x0000000000584aab <+49651>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584ab0 <+49656>:	jne    0x584b52 <_PyEval_EvalFrameDefault+49818>
0x0000000000584ab6 <+49662>:	movzbl 0xc0(%rsp),%eax
0x0000000000584abe <+49670>:	lea    -0x1(%rax),%edx
0x0000000000584ac1 <+49673>:	cmp    $0xfd,%dl
0x0000000000584ac4 <+49676>:	jbe    0x584b65 <_PyEval_EvalFrameDefault+49837>
0x0000000000584aca <+49682>:	cmpw   $0x0,0x53a97a(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584ad2 <+49690>:	jne    0x584b7e <_PyEval_EvalFrameDefault+49862>
0x0000000000584ad8 <+49696>:	mov    $0x0,%edx
0x0000000000584add <+49701>:	or     %edx,%eax
0x0000000000584adf <+49703>:	or     %eax,%r12d
0x0000000000584ae2 <+49706>:	movzbl %r12b,%eax
0x0000000000584ae6 <+49710>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000584aee <+49718>:	mov    %r13,%rbx
0x0000000000584af1 <+49721>:	mov    %r14,%r13
0x0000000000584af4 <+49724>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584af9 <+49729>:	addq   $0x1,0x53ef87(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000584b01 <+49737>:	mov    0x412618(%rip),%rax        # 0x997120 <_Py_NoneStruct>
0x0000000000584b08 <+49744>:	add    $0x1,%rax
0x0000000000584b0c <+49748>:	mov    %rax,0x41260d(%rip)        # 0x997120 <_Py_NoneStruct>
0x0000000000584b13 <+49755>:	movq   $0x997120,-0x8(%rbx)
0x0000000000584b1b <+49763>:	jmp    0x584a4c <_PyEval_EvalFrameDefault+49556>
0x0000000000584b20 <+49768>:	mov    $0x7444e0,%ecx
0x0000000000584b25 <+49773>:	mov    $0x117c,%edx
0x0000000000584b2a <+49778>:	mov    $0x74045c,%esi
0x0000000000584b2f <+49783>:	mov    $0x7408bc,%edi
0x0000000000584b34 <+49788>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584b39 <+49793>:	mov    $0x7444e0,%ecx
0x0000000000584b3e <+49798>:	mov    $0x117d,%edx
0x0000000000584b43 <+49803>:	mov    $0x74045c,%esi
0x0000000000584b48 <+49808>:	mov    $0x742420,%edi
0x0000000000584b4d <+49813>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584b52 <+49818>:	mov    %r14,%rdx
0x0000000000584b55 <+49821>:	mov    %r13,%rsi
0x0000000000584b58 <+49824>:	mov    %rbp,%rdi
0x0000000000584b5b <+49827>:	call   0x573f7b <lltrace_instruction>
0x0000000000584b60 <+49832>:	jmp    0x584ab6 <_PyEval_EvalFrameDefault+49662>
0x0000000000584b65 <+49837>:	mov    $0x7444e0,%ecx
0x0000000000584b6a <+49842>:	mov    $0x1180,%edx
0x0000000000584b6f <+49847>:	mov    $0x74045c,%esi
0x0000000000584b74 <+49852>:	mov    $0x742a50,%edi
0x0000000000584b79 <+49857>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584b7e <+49862>:	mov    $0xffffffff,%edx
0x0000000000584b83 <+49867>:	jmp    0x584add <_PyEval_EvalFrameDefault+49701>
0x0000000000584b88 <+49872>:	lea    0x2(%r13),%r15
0x0000000000584b8c <+49876>:	mov    %r13,0x38(%rbp)
0x0000000000584b90 <+49880>:	movslq 0x8(%rsp),%rsi
0x0000000000584b95 <+49885>:	mov    0x30(%rsp),%rdi
0x0000000000584b9a <+49890>:	call   0x500470 <PyTuple_GetItem>
0x0000000000584b9f <+49895>:	mov    %rax,%rsi
0x0000000000584ba2 <+49898>:	mov    -0x8(%rbx),%r12
0x0000000000584ba6 <+49902>:	movq   $0x0,0xa0(%rsp)
0x0000000000584bb2 <+49914>:	lea    0xa0(%rsp),%rdx
0x0000000000584bba <+49922>:	mov    %r12,%rdi
0x0000000000584bbd <+49925>:	call   0x4f1903 <_PyObject_GetMethod>
0x0000000000584bc2 <+49930>:	mov    0xa0(%rsp),%rdx
0x0000000000584bca <+49938>:	test   %rdx,%rdx
0x0000000000584bcd <+49941>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584bd3 <+49947>:	test   %eax,%eax
0x0000000000584bd5 <+49949>:	je     0x584c7d <_PyEval_EvalFrameDefault+50117>
0x0000000000584bdb <+49955>:	mov    %rdx,-0x8(%rbx)
0x0000000000584bdf <+49959>:	lea    0x8(%rbx),%r14
0x0000000000584be3 <+49963>:	mov    %r12,(%rbx)
0x0000000000584be6 <+49966>:	mov    0x20(%rbp),%rdx
0x0000000000584bea <+49970>:	movslq 0x4c(%rdx),%rax
0x0000000000584bee <+49974>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584bf3 <+49979>:	mov    %r14,%rax
0x0000000000584bf6 <+49982>:	sub    %rcx,%rax
0x0000000000584bf9 <+49985>:	sar    $0x3,%rax
0x0000000000584bfd <+49989>:	cmp    %eax,0x44(%rdx)
0x0000000000584c00 <+49992>:	jl     0x584c64 <_PyEval_EvalFrameDefault+50092>
0x0000000000584c02 <+49994>:	lea    0x14(%r15),%r13
0x0000000000584c06 <+49998>:	movzwl 0x14(%r15),%r12d
0x0000000000584c0b <+50003>:	mov    %r12d,%eax
0x0000000000584c0e <+50006>:	shr    $0x8,%ax
0x0000000000584c12 <+50010>:	movzwl %ax,%eax
0x0000000000584c15 <+50013>:	mov    %eax,0x8(%rsp)
0x0000000000584c19 <+50017>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584c1e <+50022>:	jne    0x584cdf <_PyEval_EvalFrameDefault+50215>
0x0000000000584c24 <+50028>:	movzbl 0xc0(%rsp),%eax
0x0000000000584c2c <+50036>:	lea    -0x1(%rax),%edx
0x0000000000584c2f <+50039>:	cmp    $0xfd,%dl
0x0000000000584c32 <+50042>:	jbe    0x584cf2 <_PyEval_EvalFrameDefault+50234>
0x0000000000584c38 <+50048>:	cmpw   $0x0,0x53a80c(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584c40 <+50056>:	jne    0x584d0b <_PyEval_EvalFrameDefault+50259>
0x0000000000584c46 <+50062>:	mov    $0x0,%edx
0x0000000000584c4b <+50067>:	or     %edx,%eax
0x0000000000584c4d <+50069>:	or     %eax,%r12d
0x0000000000584c50 <+50072>:	movzbl %r12b,%eax
0x0000000000584c54 <+50076>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000584c5c <+50084>:	mov    %r14,%rbx
0x0000000000584c5f <+50087>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584c64 <+50092>:	mov    $0x7444e0,%ecx
0x0000000000584c69 <+50097>:	mov    $0x1198,%edx
0x0000000000584c6e <+50102>:	mov    $0x74045c,%esi
0x0000000000584c73 <+50107>:	mov    $0x7408bc,%edi
0x0000000000584c78 <+50112>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584c7d <+50117>:	movq   $0x0,-0x8(%rbx)
0x0000000000584c85 <+50125>:	mov    %r12,%rdx
0x0000000000584c88 <+50128>:	mov    $0x11a3,%esi
0x0000000000584c8d <+50133>:	mov    $0x74045c,%edi
0x0000000000584c92 <+50138>:	call   0x573c83 <Py_DECREF>
0x0000000000584c97 <+50143>:	lea    0x8(%rbx),%r14
0x0000000000584c9b <+50147>:	mov    0xa0(%rsp),%rax
0x0000000000584ca3 <+50155>:	mov    %rax,(%rbx)
0x0000000000584ca6 <+50158>:	mov    0x20(%rbp),%rdx
0x0000000000584caa <+50162>:	movslq 0x4c(%rdx),%rax
0x0000000000584cae <+50166>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584cb3 <+50171>:	mov    %r14,%rax
0x0000000000584cb6 <+50174>:	sub    %rcx,%rax
0x0000000000584cb9 <+50177>:	sar    $0x3,%rax
0x0000000000584cbd <+50181>:	cmp    %eax,0x44(%rdx)
0x0000000000584cc0 <+50184>:	jge    0x584c02 <_PyEval_EvalFrameDefault+49994>
0x0000000000584cc6 <+50190>:	mov    $0x7444e0,%ecx
0x0000000000584ccb <+50195>:	mov    $0x11a4,%edx
0x0000000000584cd0 <+50200>:	mov    $0x74045c,%esi
0x0000000000584cd5 <+50205>:	mov    $0x7408bc,%edi
0x0000000000584cda <+50210>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584cdf <+50215>:	mov    %r13,%rdx
0x0000000000584ce2 <+50218>:	mov    %r14,%rsi
0x0000000000584ce5 <+50221>:	mov    %rbp,%rdi
0x0000000000584ce8 <+50224>:	call   0x573f7b <lltrace_instruction>
0x0000000000584ced <+50229>:	jmp    0x584c24 <_PyEval_EvalFrameDefault+50028>
0x0000000000584cf2 <+50234>:	mov    $0x7444e0,%ecx
0x0000000000584cf7 <+50239>:	mov    $0x11a7,%edx
0x0000000000584cfc <+50244>:	mov    $0x74045c,%esi
0x0000000000584d01 <+50249>:	mov    $0x742a50,%edi
0x0000000000584d06 <+50254>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584d0b <+50259>:	mov    $0xffffffff,%edx
0x0000000000584d10 <+50264>:	jmp    0x584c4b <_PyEval_EvalFrameDefault+50067>
0x0000000000584d15 <+50269>:	lea    0x2(%r13),%r15
0x0000000000584d19 <+50273>:	mov    %r13,0x38(%rbp)
0x0000000000584d1d <+50277>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000584d25 <+50285>:	jne    0x584d3f <_PyEval_EvalFrameDefault+50311>
0x0000000000584d27 <+50287>:	movzwl 0x2(%r13),%eax
0x0000000000584d2c <+50292>:	cmp    $0xf,%ax
0x0000000000584d30 <+50296>:	jbe    0x584d58 <_PyEval_EvalFrameDefault+50336>
0x0000000000584d32 <+50298>:	sub    $0x10,%eax
0x0000000000584d35 <+50301>:	mov    %ax,0x2(%r13)
0x0000000000584d3a <+50306>:	jmp    0x584b90 <_PyEval_EvalFrameDefault+49880>
0x0000000000584d3f <+50311>:	mov    $0x7444e0,%ecx
0x0000000000584d44 <+50316>:	mov    $0x11ab,%edx
0x0000000000584d49 <+50321>:	mov    $0x74045c,%esi
0x0000000000584d4e <+50326>:	mov    $0x7408ff,%edi
0x0000000000584d53 <+50331>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584d58 <+50336>:	mov    -0x8(%rbx),%r12
0x0000000000584d5c <+50340>:	movslq 0x8(%rsp),%rsi
0x0000000000584d61 <+50345>:	mov    0x30(%rsp),%rdi
0x0000000000584d66 <+50350>:	call   0x500470 <PyTuple_GetItem>
0x0000000000584d6b <+50355>:	mov    %rax,%rdx
0x0000000000584d6e <+50358>:	mov    %r13,%rsi
0x0000000000584d71 <+50361>:	mov    %r12,%rdi
0x0000000000584d74 <+50364>:	call   0x5cfad6 <_Py_Specialize_LoadMethod>
0x0000000000584d79 <+50369>:	test   %eax,%eax
0x0000000000584d7b <+50371>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000584d81 <+50377>:	movzwl 0x0(%r13),%r14d
0x0000000000584d86 <+50382>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584d8b <+50387>:	jne    0x584dbc <_PyEval_EvalFrameDefault+50436>
0x0000000000584d8d <+50389>:	movzbl 0xc0(%rsp),%r12d
0x0000000000584d96 <+50398>:	cmpw   $0x0,0x53a6ae(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584d9e <+50406>:	jne    0x584dcc <_PyEval_EvalFrameDefault+50452>
0x0000000000584da0 <+50408>:	mov    $0x0,%eax
0x0000000000584da5 <+50413>:	or     %eax,%r12d
0x0000000000584da8 <+50416>:	or     %r14d,%r12d
0x0000000000584dab <+50419>:	movzbl %r12b,%eax
0x0000000000584daf <+50423>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000584db7 <+50431>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584dbc <+50436>:	mov    %r13,%rdx
0x0000000000584dbf <+50439>:	mov    %rbx,%rsi
0x0000000000584dc2 <+50442>:	mov    %rbp,%rdi
0x0000000000584dc5 <+50445>:	call   0x573f7b <lltrace_instruction>
0x0000000000584dca <+50450>:	jmp    0x584d8d <_PyEval_EvalFrameDefault+50389>
0x0000000000584dcc <+50452>:	mov    $0xffffffff,%eax
0x0000000000584dd1 <+50457>:	jmp    0x584da5 <_PyEval_EvalFrameDefault+50413>
0x0000000000584dd3 <+50459>:	lea    0x2(%r13),%r15
0x0000000000584dd7 <+50463>:	mov    %r13,0x38(%rbp)
0x0000000000584ddb <+50467>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000584de3 <+50475>:	jne    0x584f40 <_PyEval_EvalFrameDefault+50824>
0x0000000000584de9 <+50481>:	mov    -0x8(%rbx),%rax
0x0000000000584ded <+50485>:	mov    %rax,0x48(%rsp)
0x0000000000584df2 <+50490>:	mov    0x8(%rax),%r14
0x0000000000584df6 <+50494>:	movzwl 0x4(%r13),%eax
0x0000000000584dfb <+50499>:	movzwl 0x6(%r13),%edx
0x0000000000584e00 <+50504>:	shl    $0x10,%edx
0x0000000000584e03 <+50507>:	or     %edx,%eax
0x0000000000584e05 <+50509>:	je     0x584f59 <_PyEval_EvalFrameDefault+50849>
0x0000000000584e0b <+50515>:	cmp    %eax,0x180(%r14)
0x0000000000584e12 <+50522>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000584e18 <+50528>:	testb  $0x10,0xa8(%r14)
0x0000000000584e20 <+50536>:	je     0x584f72 <_PyEval_EvalFrameDefault+50874>
0x0000000000584e26 <+50542>:	mov    0x48(%rsp),%rdi
0x0000000000584e2b <+50547>:	call   0x5733a2 <_PyObject_ManagedDictPointer>
0x0000000000584e30 <+50552>:	cmpq   $0x0,(%rax)
0x0000000000584e34 <+50556>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000584e3a <+50562>:	mov    0x368(%r14),%rcx
0x0000000000584e41 <+50569>:	movzwl 0xa(%r13),%eax
0x0000000000584e46 <+50574>:	movzwl 0xc(%r13),%edx
0x0000000000584e4b <+50579>:	shl    $0x10,%edx
0x0000000000584e4e <+50582>:	or     %edx,%eax
0x0000000000584e50 <+50584>:	cmp    %eax,0xc(%rcx)
0x0000000000584e53 <+50587>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000584e59 <+50593>:	movzwl 0xe(%r13),%eax
0x0000000000584e5e <+50598>:	movzwl 0x10(%r13),%edx
0x0000000000584e63 <+50603>:	shl    $0x10,%rdx
0x0000000000584e67 <+50607>:	or     %rdx,%rax
0x0000000000584e6a <+50610>:	movzwl 0x12(%r13),%edx
0x0000000000584e6f <+50615>:	shl    $0x20,%rdx
0x0000000000584e73 <+50619>:	or     %rdx,%rax
0x0000000000584e76 <+50622>:	movzwl 0x14(%r13),%edx
0x0000000000584e7b <+50627>:	shl    $0x30,%rdx
0x0000000000584e7f <+50631>:	or     %rdx,%rax
0x0000000000584e82 <+50634>:	je     0x584f8b <_PyEval_EvalFrameDefault+50899>
0x0000000000584e88 <+50640>:	mov    0x8(%rax),%rdx
0x0000000000584e8c <+50644>:	testb  $0x2,0xaa(%rdx)
0x0000000000584e93 <+50651>:	je     0x584fa4 <_PyEval_EvalFrameDefault+50924>
0x0000000000584e99 <+50657>:	addq   $0x1,0x53ebe7(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000584ea1 <+50665>:	mov    (%rax),%rcx
0x0000000000584ea4 <+50668>:	lea    0x1(%rcx),%rdx
0x0000000000584ea8 <+50672>:	mov    %rdx,(%rax)
0x0000000000584eab <+50675>:	mov    %rax,-0x8(%rbx)
0x0000000000584eaf <+50679>:	lea    0x8(%rbx),%r14
0x0000000000584eb3 <+50683>:	mov    0x48(%rsp),%rax
0x0000000000584eb8 <+50688>:	mov    %rax,(%rbx)
0x0000000000584ebb <+50691>:	mov    0x20(%rbp),%rdx
0x0000000000584ebf <+50695>:	movslq 0x4c(%rdx),%rax
0x0000000000584ec3 <+50699>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000584ec8 <+50704>:	mov    %r14,%rax
0x0000000000584ecb <+50707>:	sub    %rcx,%rax
0x0000000000584ece <+50710>:	sar    $0x3,%rax
0x0000000000584ed2 <+50714>:	cmp    %eax,0x44(%rdx)
0x0000000000584ed5 <+50717>:	jl     0x584fbd <_PyEval_EvalFrameDefault+50949>
0x0000000000584edb <+50723>:	lea    0x16(%r13),%r15
0x0000000000584edf <+50727>:	movzwl 0x16(%r13),%r12d
0x0000000000584ee4 <+50732>:	mov    %r12d,%eax
0x0000000000584ee7 <+50735>:	shr    $0x8,%ax
0x0000000000584eeb <+50739>:	movzwl %ax,%eax
0x0000000000584eee <+50742>:	mov    %eax,0x8(%rsp)
0x0000000000584ef2 <+50746>:	cmpl   $0x0,0x14(%rsp)
0x0000000000584ef7 <+50751>:	jne    0x584fd6 <_PyEval_EvalFrameDefault+50974>
0x0000000000584efd <+50757>:	movzbl 0xc0(%rsp),%eax
0x0000000000584f05 <+50765>:	lea    -0x1(%rax),%edx
0x0000000000584f08 <+50768>:	cmp    $0xfd,%dl
0x0000000000584f0b <+50771>:	jbe    0x584fe9 <_PyEval_EvalFrameDefault+50993>
0x0000000000584f11 <+50777>:	cmpw   $0x0,0x53a533(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000584f19 <+50785>:	jne    0x585002 <_PyEval_EvalFrameDefault+51018>
0x0000000000584f1f <+50791>:	mov    $0x0,%edx
0x0000000000584f24 <+50796>:	or     %edx,%eax
0x0000000000584f26 <+50798>:	or     %eax,%r12d
0x0000000000584f29 <+50801>:	movzbl %r12b,%eax
0x0000000000584f2d <+50805>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000584f35 <+50813>:	mov    %r14,%rbx
0x0000000000584f38 <+50816>:	mov    %r15,%r13
0x0000000000584f3b <+50819>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000584f40 <+50824>:	mov    $0x7444e0,%ecx
0x0000000000584f45 <+50829>:	mov    $0x11c0,%edx
0x0000000000584f4a <+50834>:	mov    $0x74045c,%esi
0x0000000000584f4f <+50839>:	mov    $0x7408ff,%edi
0x0000000000584f54 <+50844>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584f59 <+50849>:	mov    $0x7444e0,%ecx
0x0000000000584f5e <+50854>:	mov    $0x11c5,%edx
0x0000000000584f63 <+50859>:	mov    $0x74045c,%esi
0x0000000000584f68 <+50864>:	mov    $0x740b38,%edi
0x0000000000584f6d <+50869>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584f72 <+50874>:	mov    $0x7444e0,%ecx
0x0000000000584f77 <+50879>:	mov    $0x11c7,%edx
0x0000000000584f7c <+50884>:	mov    $0x74045c,%esi
0x0000000000584f81 <+50889>:	mov    $0x743240,%edi
0x0000000000584f86 <+50894>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584f8b <+50899>:	mov    $0x7444e0,%ecx
0x0000000000584f90 <+50904>:	mov    $0x11cf,%edx
0x0000000000584f95 <+50909>:	mov    $0x74045c,%esi
0x0000000000584f9a <+50914>:	mov    $0x74093f,%edi
0x0000000000584f9f <+50919>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584fa4 <+50924>:	mov    $0x7444e0,%ecx
0x0000000000584fa9 <+50929>:	mov    $0x11d0,%edx
0x0000000000584fae <+50934>:	mov    $0x74045c,%esi
0x0000000000584fb3 <+50939>:	mov    $0x743270,%edi
0x0000000000584fb8 <+50944>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584fbd <+50949>:	mov    $0x7444e0,%ecx
0x0000000000584fc2 <+50954>:	mov    $0x11d3,%edx
0x0000000000584fc7 <+50959>:	mov    $0x74045c,%esi
0x0000000000584fcc <+50964>:	mov    $0x7408bc,%edi
0x0000000000584fd1 <+50969>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000584fd6 <+50974>:	mov    %r15,%rdx
0x0000000000584fd9 <+50977>:	mov    %r14,%rsi
0x0000000000584fdc <+50980>:	mov    %rbp,%rdi
0x0000000000584fdf <+50983>:	call   0x573f7b <lltrace_instruction>
0x0000000000584fe4 <+50988>:	jmp    0x584efd <_PyEval_EvalFrameDefault+50757>
0x0000000000584fe9 <+50993>:	mov    $0x7444e0,%ecx
0x0000000000584fee <+50998>:	mov    $0x11d5,%edx
0x0000000000584ff3 <+51003>:	mov    $0x74045c,%esi
0x0000000000584ff8 <+51008>:	mov    $0x742a50,%edi
0x0000000000584ffd <+51013>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585002 <+51018>:	mov    $0xffffffff,%edx
0x0000000000585007 <+51023>:	jmp    0x584f24 <_PyEval_EvalFrameDefault+50796>
0x000000000058500c <+51028>:	lea    0x2(%r13),%r15
0x0000000000585010 <+51032>:	mov    %r13,0x38(%rbp)
0x0000000000585014 <+51036>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058501c <+51044>:	jne    0x58517d <_PyEval_EvalFrameDefault+51397>
0x0000000000585022 <+51050>:	mov    -0x8(%rbx),%rcx
0x0000000000585026 <+51054>:	mov    0x8(%rcx),%rsi
0x000000000058502a <+51058>:	movzwl 0x4(%r13),%eax
0x000000000058502f <+51063>:	movzwl 0x6(%r13),%edx
0x0000000000585034 <+51068>:	shl    $0x10,%edx
0x0000000000585037 <+51071>:	or     %edx,%eax
0x0000000000585039 <+51073>:	cmp    %eax,0x180(%rsi)
0x000000000058503f <+51079>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585045 <+51085>:	movzwl 0x8(%r13),%eax
0x000000000058504a <+51090>:	movswl %ax,%edi
0x000000000058504d <+51093>:	movswq %ax,%rdx
0x0000000000585051 <+51097>:	add    %rcx,%rdx
0x0000000000585054 <+51100>:	cmp    $0xffe8,%ax
0x0000000000585058 <+51104>:	je     0x585073 <_PyEval_EvalFrameDefault+51131>
0x000000000058505a <+51106>:	movswq %ax,%rax
0x000000000058505e <+51110>:	cmp    0x120(%rsi),%rax
0x0000000000585065 <+51117>:	jne    0x585196 <_PyEval_EvalFrameDefault+51422>
0x000000000058506b <+51123>:	test   %edi,%edi
0x000000000058506d <+51125>:	jle    0x585196 <_PyEval_EvalFrameDefault+51422>
0x0000000000585073 <+51131>:	mov    (%rdx),%rax
0x0000000000585076 <+51134>:	test   %rax,%rax
0x0000000000585079 <+51137>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058507f <+51143>:	mov    0x20(%rax),%rsi
0x0000000000585083 <+51147>:	movzwl 0xa(%r13),%eax
0x0000000000585088 <+51152>:	movzwl 0xc(%r13),%edx
0x000000000058508d <+51157>:	shl    $0x10,%edx
0x0000000000585090 <+51160>:	or     %edx,%eax
0x0000000000585092 <+51162>:	cmp    %eax,0xc(%rsi)
0x0000000000585095 <+51165>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058509b <+51171>:	movzwl 0xe(%r13),%eax
0x00000000005850a0 <+51176>:	movzwl 0x10(%r13),%edx
0x00000000005850a5 <+51181>:	shl    $0x10,%rdx
0x00000000005850a9 <+51185>:	or     %rdx,%rax
0x00000000005850ac <+51188>:	movzwl 0x12(%r13),%edx
0x00000000005850b1 <+51193>:	shl    $0x20,%rdx
0x00000000005850b5 <+51197>:	or     %rdx,%rax
0x00000000005850b8 <+51200>:	movzwl 0x14(%r13),%edx
0x00000000005850bd <+51205>:	shl    $0x30,%rdx
0x00000000005850c1 <+51209>:	or     %rdx,%rax
0x00000000005850c4 <+51212>:	je     0x5851af <_PyEval_EvalFrameDefault+51447>
0x00000000005850ca <+51218>:	mov    0x8(%rax),%rdx
0x00000000005850ce <+51222>:	testb  $0x2,0xaa(%rdx)
0x00000000005850d5 <+51229>:	je     0x5851c8 <_PyEval_EvalFrameDefault+51472>
0x00000000005850db <+51235>:	addq   $0x1,0x53e9a5(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005850e3 <+51243>:	mov    (%rax),%rsi
0x00000000005850e6 <+51246>:	lea    0x1(%rsi),%rdx
0x00000000005850ea <+51250>:	mov    %rdx,(%rax)
0x00000000005850ed <+51253>:	mov    %rax,-0x8(%rbx)
0x00000000005850f1 <+51257>:	lea    0x8(%rbx),%r14
0x00000000005850f5 <+51261>:	mov    %rcx,(%rbx)
0x00000000005850f8 <+51264>:	mov    0x20(%rbp),%rdx
0x00000000005850fc <+51268>:	movslq 0x4c(%rdx),%rax
0x0000000000585100 <+51272>:	lea    0x48(%rbp,%rax,8),%rcx
0x0000000000585105 <+51277>:	mov    %r14,%rax
0x0000000000585108 <+51280>:	sub    %rcx,%rax
0x000000000058510b <+51283>:	sar    $0x3,%rax
0x000000000058510f <+51287>:	cmp    %eax,0x44(%rdx)
0x0000000000585112 <+51290>:	jl     0x5851e1 <_PyEval_EvalFrameDefault+51497>
0x0000000000585118 <+51296>:	lea    0x16(%r13),%r15
0x000000000058511c <+51300>:	movzwl 0x16(%r13),%r12d
0x0000000000585121 <+51305>:	mov    %r12d,%eax
0x0000000000585124 <+51308>:	shr    $0x8,%ax
0x0000000000585128 <+51312>:	movzwl %ax,%eax
0x000000000058512b <+51315>:	mov    %eax,0x8(%rsp)
0x000000000058512f <+51319>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585134 <+51324>:	jne    0x5851fa <_PyEval_EvalFrameDefault+51522>
0x000000000058513a <+51330>:	movzbl 0xc0(%rsp),%eax
0x0000000000585142 <+51338>:	lea    -0x1(%rax),%edx
0x0000000000585145 <+51341>:	cmp    $0xfd,%dl
0x0000000000585148 <+51344>:	jbe    0x58520d <_PyEval_EvalFrameDefault+51541>
0x000000000058514e <+51350>:	cmpw   $0x0,0x53a2f6(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585156 <+51358>:	jne    0x585226 <_PyEval_EvalFrameDefault+51566>
0x000000000058515c <+51364>:	mov    $0x0,%edx
0x0000000000585161 <+51369>:	or     %edx,%eax
0x0000000000585163 <+51371>:	or     %eax,%r12d
0x0000000000585166 <+51374>:	movzbl %r12b,%eax
0x000000000058516a <+51378>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585172 <+51386>:	mov    %r14,%rbx
0x0000000000585175 <+51389>:	mov    %r15,%r13
0x0000000000585178 <+51392>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058517d <+51397>:	mov    $0x7444e0,%ecx
0x0000000000585182 <+51402>:	mov    $0x11db,%edx
0x0000000000585187 <+51407>:	mov    $0x74045c,%esi
0x000000000058518c <+51412>:	mov    $0x7408ff,%edi
0x0000000000585191 <+51417>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585196 <+51422>:	mov    $0x7444e0,%ecx
0x000000000058519b <+51427>:	mov    $0x11e5,%edx
0x00000000005851a0 <+51432>:	mov    $0x74045c,%esi
0x00000000005851a5 <+51437>:	mov    $0x7432b0,%edi
0x00000000005851aa <+51442>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005851af <+51447>:	mov    $0x7444e0,%ecx
0x00000000005851b4 <+51452>:	mov    $0x11ef,%edx
0x00000000005851b9 <+51457>:	mov    $0x74045c,%esi
0x00000000005851be <+51462>:	mov    $0x74093f,%edi
0x00000000005851c3 <+51467>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005851c8 <+51472>:	mov    $0x7444e0,%ecx
0x00000000005851cd <+51477>:	mov    $0x11f0,%edx
0x00000000005851d2 <+51482>:	mov    $0x74045c,%esi
0x00000000005851d7 <+51487>:	mov    $0x743270,%edi
0x00000000005851dc <+51492>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005851e1 <+51497>:	mov    $0x7444e0,%ecx
0x00000000005851e6 <+51502>:	mov    $0x11f3,%edx
0x00000000005851eb <+51507>:	mov    $0x74045c,%esi
0x00000000005851f0 <+51512>:	mov    $0x7408bc,%edi
0x00000000005851f5 <+51517>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005851fa <+51522>:	mov    %r15,%rdx
0x00000000005851fd <+51525>:	mov    %r14,%rsi
0x0000000000585200 <+51528>:	mov    %rbp,%rdi
0x0000000000585203 <+51531>:	call   0x573f7b <lltrace_instruction>
0x0000000000585208 <+51536>:	jmp    0x58513a <_PyEval_EvalFrameDefault+51330>
0x000000000058520d <+51541>:	mov    $0x7444e0,%ecx
0x0000000000585212 <+51546>:	mov    $0x11f5,%edx
0x0000000000585217 <+51551>:	mov    $0x74045c,%esi
0x000000000058521c <+51556>:	mov    $0x742a50,%edi
0x0000000000585221 <+51561>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585226 <+51566>:	mov    $0xffffffff,%edx
0x000000000058522b <+51571>:	jmp    0x585161 <_PyEval_EvalFrameDefault+51369>
0x0000000000585230 <+51576>:	lea    0x2(%r13),%r15
0x0000000000585234 <+51580>:	mov    %r13,0x38(%rbp)
0x0000000000585238 <+51584>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000585240 <+51592>:	jne    0x585359 <_PyEval_EvalFrameDefault+51873>
0x0000000000585246 <+51598>:	mov    -0x8(%rbx),%rcx
0x000000000058524a <+51602>:	mov    0x8(%rcx),%rsi
0x000000000058524e <+51606>:	movzwl 0x4(%r13),%eax
0x0000000000585253 <+51611>:	movzwl 0x6(%r13),%edx
0x0000000000585258 <+51616>:	shl    $0x10,%edx
0x000000000058525b <+51619>:	or     %edx,%eax
0x000000000058525d <+51621>:	cmp    %eax,0x180(%rsi)
0x0000000000585263 <+51627>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585269 <+51633>:	cmpq   $0x0,0x120(%rsi)
0x0000000000585271 <+51641>:	jne    0x585372 <_PyEval_EvalFrameDefault+51898>
0x0000000000585277 <+51647>:	movzwl 0xe(%r13),%eax
0x000000000058527c <+51652>:	movzwl 0x10(%r13),%edx
0x0000000000585281 <+51657>:	shl    $0x10,%rdx
0x0000000000585285 <+51661>:	or     %rdx,%rax
0x0000000000585288 <+51664>:	movzwl 0x12(%r13),%edx
0x000000000058528d <+51669>:	shl    $0x20,%rdx
0x0000000000585291 <+51673>:	or     %rdx,%rax
0x0000000000585294 <+51676>:	movzwl 0x14(%r13),%edx
0x0000000000585299 <+51681>:	shl    $0x30,%rdx
0x000000000058529d <+51685>:	or     %rdx,%rax
0x00000000005852a0 <+51688>:	je     0x58538b <_PyEval_EvalFrameDefault+51923>
0x00000000005852a6 <+51694>:	mov    0x8(%rax),%rdx
0x00000000005852aa <+51698>:	testb  $0x2,0xaa(%rdx)
0x00000000005852b1 <+51705>:	je     0x5853a4 <_PyEval_EvalFrameDefault+51948>
0x00000000005852b7 <+51711>:	addq   $0x1,0x53e7c9(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005852bf <+51719>:	mov    (%rax),%rsi
0x00000000005852c2 <+51722>:	lea    0x1(%rsi),%rdx
0x00000000005852c6 <+51726>:	mov    %rdx,(%rax)
0x00000000005852c9 <+51729>:	mov    %rax,-0x8(%rbx)
0x00000000005852cd <+51733>:	lea    0x8(%rbx),%r14
0x00000000005852d1 <+51737>:	mov    %rcx,(%rbx)
0x00000000005852d4 <+51740>:	mov    0x20(%rbp),%rdx
0x00000000005852d8 <+51744>:	movslq 0x4c(%rdx),%rax
0x00000000005852dc <+51748>:	lea    0x48(%rbp,%rax,8),%rcx
0x00000000005852e1 <+51753>:	mov    %r14,%rax
0x00000000005852e4 <+51756>:	sub    %rcx,%rax
0x00000000005852e7 <+51759>:	sar    $0x3,%rax
0x00000000005852eb <+51763>:	cmp    %eax,0x44(%rdx)
0x00000000005852ee <+51766>:	jl     0x5853bd <_PyEval_EvalFrameDefault+51973>
0x00000000005852f4 <+51772>:	lea    0x16(%r13),%r15
0x00000000005852f8 <+51776>:	movzwl 0x16(%r13),%r12d
0x00000000005852fd <+51781>:	mov    %r12d,%eax
0x0000000000585300 <+51784>:	shr    $0x8,%ax
0x0000000000585304 <+51788>:	movzwl %ax,%eax
0x0000000000585307 <+51791>:	mov    %eax,0x8(%rsp)
0x000000000058530b <+51795>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585310 <+51800>:	jne    0x5853d6 <_PyEval_EvalFrameDefault+51998>
0x0000000000585316 <+51806>:	movzbl 0xc0(%rsp),%eax
0x000000000058531e <+51814>:	lea    -0x1(%rax),%edx
0x0000000000585321 <+51817>:	cmp    $0xfd,%dl
0x0000000000585324 <+51820>:	jbe    0x5853e9 <_PyEval_EvalFrameDefault+52017>
0x000000000058532a <+51826>:	cmpw   $0x0,0x53a11a(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585332 <+51834>:	jne    0x585402 <_PyEval_EvalFrameDefault+52042>
0x0000000000585338 <+51840>:	mov    $0x0,%edx
0x000000000058533d <+51845>:	or     %edx,%eax
0x000000000058533f <+51847>:	or     %eax,%r12d
0x0000000000585342 <+51850>:	movzbl %r12b,%eax
0x0000000000585346 <+51854>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058534e <+51862>:	mov    %r14,%rbx
0x0000000000585351 <+51865>:	mov    %r15,%r13
0x0000000000585354 <+51868>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000585359 <+51873>:	mov    $0x7444e0,%ecx
0x000000000058535e <+51878>:	mov    $0x11f9,%edx
0x0000000000585363 <+51883>:	mov    $0x74045c,%esi
0x0000000000585368 <+51888>:	mov    $0x7408ff,%edi
0x000000000058536d <+51893>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585372 <+51898>:	mov    $0x7444e0,%ecx
0x0000000000585377 <+51903>:	mov    $0x11ff,%edx
0x000000000058537c <+51908>:	mov    $0x74045c,%esi
0x0000000000585381 <+51913>:	mov    $0x740bf3,%edi
0x0000000000585386 <+51918>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058538b <+51923>:	mov    $0x7444e0,%ecx
0x0000000000585390 <+51928>:	mov    $0x1202,%edx
0x0000000000585395 <+51933>:	mov    $0x74045c,%esi
0x000000000058539a <+51938>:	mov    $0x74093f,%edi
0x000000000058539f <+51943>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005853a4 <+51948>:	mov    $0x7444e0,%ecx
0x00000000005853a9 <+51953>:	mov    $0x1203,%edx
0x00000000005853ae <+51958>:	mov    $0x74045c,%esi
0x00000000005853b3 <+51963>:	mov    $0x743270,%edi
0x00000000005853b8 <+51968>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005853bd <+51973>:	mov    $0x7444e0,%ecx
0x00000000005853c2 <+51978>:	mov    $0x1206,%edx
0x00000000005853c7 <+51983>:	mov    $0x74045c,%esi
0x00000000005853cc <+51988>:	mov    $0x7408bc,%edi
0x00000000005853d1 <+51993>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005853d6 <+51998>:	mov    %r15,%rdx
0x00000000005853d9 <+52001>:	mov    %r14,%rsi
0x00000000005853dc <+52004>:	mov    %rbp,%rdi
0x00000000005853df <+52007>:	call   0x573f7b <lltrace_instruction>
0x00000000005853e4 <+52012>:	jmp    0x585316 <_PyEval_EvalFrameDefault+51806>
0x00000000005853e9 <+52017>:	mov    $0x7444e0,%ecx
0x00000000005853ee <+52022>:	mov    $0x1208,%edx
0x00000000005853f3 <+52027>:	mov    $0x74045c,%esi
0x00000000005853f8 <+52032>:	mov    $0x742a50,%edi
0x00000000005853fd <+52037>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585402 <+52042>:	mov    $0xffffffff,%edx
0x0000000000585407 <+52047>:	jmp    0x58533d <_PyEval_EvalFrameDefault+51845>
0x000000000058540c <+52052>:	lea    0x2(%r13),%r15
0x0000000000585410 <+52056>:	mov    %r13,0x38(%rbp)
0x0000000000585414 <+52060>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058541c <+52068>:	jne    0x585560 <_PyEval_EvalFrameDefault+52392>
0x0000000000585422 <+52074>:	mov    -0x8(%rbx),%rsi
0x0000000000585426 <+52078>:	cmpq   $0x996780,0x8(%rsi)
0x000000000058542e <+52086>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585434 <+52092>:	mov    0x10(%rsi),%rax
0x0000000000585438 <+52096>:	test   %rax,%rax
0x000000000058543b <+52099>:	je     0x585579 <_PyEval_EvalFrameDefault+52417>
0x0000000000585441 <+52105>:	mov    0x20(%rax),%rdx
0x0000000000585445 <+52109>:	movzwl 0x4(%r13),%eax
0x000000000058544a <+52114>:	movzwl 0x6(%r13),%ecx
0x000000000058544f <+52119>:	shl    $0x10,%ecx
0x0000000000585452 <+52122>:	or     %ecx,%eax
0x0000000000585454 <+52124>:	cmp    %eax,0xc(%rdx)
0x0000000000585457 <+52127>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058545d <+52133>:	movzbl 0xa(%rdx),%ecx
0x0000000000585461 <+52137>:	cmp    $0x1,%cl
0x0000000000585464 <+52140>:	jne    0x585592 <_PyEval_EvalFrameDefault+52442>
0x000000000058546a <+52146>:	movzwl 0x8(%r13),%eax
0x000000000058546f <+52151>:	movzwl %ax,%edi
0x0000000000585472 <+52154>:	cmp    0x18(%rdx),%rdi
0x0000000000585476 <+52158>:	jge    0x5855ab <_PyEval_EvalFrameDefault+52467>
0x000000000058547c <+52164>:	test   %cl,%cl
0x000000000058547e <+52166>:	je     0x5855c4 <_PyEval_EvalFrameDefault+52492>
0x0000000000585484 <+52172>:	movzbl 0x9(%rdx),%ecx
0x0000000000585488 <+52176>:	mov    $0x1,%edi
0x000000000058548d <+52181>:	shl    %cl,%rdi
0x0000000000585490 <+52184>:	movzwl %ax,%eax
0x0000000000585493 <+52187>:	shl    $0x4,%rax
0x0000000000585497 <+52191>:	add    %rdi,%rax
0x000000000058549a <+52194>:	mov    0x28(%rdx,%rax,1),%r14
0x000000000058549f <+52199>:	test   %r14,%r14
0x00000000005854a2 <+52202>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005854a8 <+52208>:	addq   $0x1,0x53e5d8(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005854b0 <+52216>:	mov    (%r14),%rax
0x00000000005854b3 <+52219>:	add    $0x1,%rax
0x00000000005854b7 <+52223>:	mov    %rax,(%r14)
0x00000000005854ba <+52226>:	movq   $0x0,-0x8(%rbx)
0x00000000005854c2 <+52234>:	mov    %rsi,%rdx
0x00000000005854c5 <+52237>:	mov    $0x1212,%esi
0x00000000005854ca <+52242>:	mov    $0x74045c,%edi
0x00000000005854cf <+52247>:	call   0x573c83 <Py_DECREF>
0x00000000005854d4 <+52252>:	lea    0x8(%rbx),%r15
0x00000000005854d8 <+52256>:	mov    %r14,(%rbx)
0x00000000005854db <+52259>:	mov    0x20(%rbp),%rdx
0x00000000005854df <+52263>:	movslq 0x4c(%rdx),%rax
0x00000000005854e3 <+52267>:	lea    0x48(%rbp,%rax,8),%rcx
0x00000000005854e8 <+52272>:	mov    %r15,%rax
0x00000000005854eb <+52275>:	sub    %rcx,%rax
0x00000000005854ee <+52278>:	sar    $0x3,%rax
0x00000000005854f2 <+52282>:	cmp    %eax,0x44(%rdx)
0x00000000005854f5 <+52285>:	jl     0x5855dd <_PyEval_EvalFrameDefault+52517>
0x00000000005854fb <+52291>:	lea    0x16(%r13),%r14
0x00000000005854ff <+52295>:	movzwl 0x16(%r13),%r12d
0x0000000000585504 <+52300>:	mov    %r12d,%eax
0x0000000000585507 <+52303>:	shr    $0x8,%ax
0x000000000058550b <+52307>:	movzwl %ax,%eax
0x000000000058550e <+52310>:	mov    %eax,0x8(%rsp)
0x0000000000585512 <+52314>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585517 <+52319>:	jne    0x5855f6 <_PyEval_EvalFrameDefault+52542>
0x000000000058551d <+52325>:	movzbl 0xc0(%rsp),%eax
0x0000000000585525 <+52333>:	lea    -0x1(%rax),%edx
0x0000000000585528 <+52336>:	cmp    $0xfd,%dl
0x000000000058552b <+52339>:	jbe    0x585609 <_PyEval_EvalFrameDefault+52561>
0x0000000000585531 <+52345>:	cmpw   $0x0,0x539f13(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585539 <+52353>:	jne    0x585622 <_PyEval_EvalFrameDefault+52586>
0x000000000058553f <+52359>:	mov    $0x0,%edx
0x0000000000585544 <+52364>:	or     %edx,%eax
0x0000000000585546 <+52366>:	or     %eax,%r12d
0x0000000000585549 <+52369>:	movzbl %r12b,%eax
0x000000000058554d <+52373>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585555 <+52381>:	mov    %r15,%rbx
0x0000000000585558 <+52384>:	mov    %r14,%r13
0x000000000058555b <+52387>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000585560 <+52392>:	mov    $0x7444e0,%ecx
0x0000000000585565 <+52397>:	mov    $0x120d,%edx
0x000000000058556a <+52402>:	mov    $0x74045c,%esi
0x000000000058556f <+52407>:	mov    $0x7408ff,%edi
0x0000000000585574 <+52412>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585579 <+52417>:	mov    $0x7444e0,%ecx
0x000000000058557e <+52422>:	mov    $0x1210,%edx
0x0000000000585583 <+52427>:	mov    $0x74045c,%esi
0x0000000000585588 <+52432>:	mov    $0x6f1275,%edi
0x000000000058558d <+52437>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585592 <+52442>:	mov    $0x7444e0,%ecx
0x0000000000585597 <+52447>:	mov    $0x1210,%edx
0x000000000058559c <+52452>:	mov    $0x74045c,%esi
0x00000000005855a1 <+52457>:	mov    $0x742e00,%edi
0x00000000005855a6 <+52462>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005855ab <+52467>:	mov    $0x7444e0,%ecx
0x00000000005855b0 <+52472>:	mov    $0x1210,%edx
0x00000000005855b5 <+52477>:	mov    $0x74045c,%esi
0x00000000005855ba <+52482>:	mov    $0x742e30,%edi
0x00000000005855bf <+52487>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005855c4 <+52492>:	mov    $0x7444e0,%ecx
0x00000000005855c9 <+52497>:	mov    $0x1210,%edx
0x00000000005855ce <+52502>:	mov    $0x74045c,%esi
0x00000000005855d3 <+52507>:	mov    $0x742e60,%edi
0x00000000005855d8 <+52512>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005855dd <+52517>:	mov    $0x7444e0,%ecx
0x00000000005855e2 <+52522>:	mov    $0x1213,%edx
0x00000000005855e7 <+52527>:	mov    $0x74045c,%esi
0x00000000005855ec <+52532>:	mov    $0x7408bc,%edi
0x00000000005855f1 <+52537>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005855f6 <+52542>:	mov    %r14,%rdx
0x00000000005855f9 <+52545>:	mov    %r15,%rsi
0x00000000005855fc <+52548>:	mov    %rbp,%rdi
0x00000000005855ff <+52551>:	call   0x573f7b <lltrace_instruction>
0x0000000000585604 <+52556>:	jmp    0x58551d <_PyEval_EvalFrameDefault+52325>
0x0000000000585609 <+52561>:	mov    $0x7444e0,%ecx
0x000000000058560e <+52566>:	mov    $0x1215,%edx
0x0000000000585613 <+52571>:	mov    $0x74045c,%esi
0x0000000000585618 <+52576>:	mov    $0x742a50,%edi
0x000000000058561d <+52581>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585622 <+52586>:	mov    $0xffffffff,%edx
0x0000000000585627 <+52591>:	jmp    0x585544 <_PyEval_EvalFrameDefault+52364>
0x000000000058562c <+52596>:	lea    0x2(%r13),%r15
0x0000000000585630 <+52600>:	mov    %r13,0x38(%rbp)
0x0000000000585634 <+52604>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058563c <+52612>:	jne    0x585760 <_PyEval_EvalFrameDefault+52904>
0x0000000000585642 <+52618>:	mov    -0x8(%rbx),%rdx
0x0000000000585646 <+52622>:	mov    0x8(%rdx),%rax
0x000000000058564a <+52626>:	testb  $0x80,0xab(%rax)
0x0000000000585651 <+52633>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585657 <+52639>:	movzwl 0x4(%r13),%eax
0x000000000058565c <+52644>:	movzwl 0x6(%r13),%ecx
0x0000000000585661 <+52649>:	shl    $0x10,%ecx
0x0000000000585664 <+52652>:	or     %ecx,%eax
0x0000000000585666 <+52654>:	cmp    %eax,0x180(%rdx)
0x000000000058566c <+52660>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585672 <+52666>:	test   %eax,%eax
0x0000000000585674 <+52668>:	je     0x585779 <_PyEval_EvalFrameDefault+52929>
0x000000000058567a <+52674>:	movzwl 0xe(%r13),%r12d
0x000000000058567f <+52679>:	movzwl 0x10(%r13),%eax
0x0000000000585684 <+52684>:	shl    $0x10,%rax
0x0000000000585688 <+52688>:	or     %rax,%r12
0x000000000058568b <+52691>:	movzwl 0x12(%r13),%eax
0x0000000000585690 <+52696>:	shl    $0x20,%rax
0x0000000000585694 <+52700>:	or     %rax,%r12
0x0000000000585697 <+52703>:	movzwl 0x14(%r13),%eax
0x000000000058569c <+52708>:	shl    $0x30,%rax
0x00000000005856a0 <+52712>:	or     %rax,%r12
0x00000000005856a3 <+52715>:	je     0x585792 <_PyEval_EvalFrameDefault+52954>
0x00000000005856a9 <+52721>:	addq   $0x1,0x53e3d7(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005856b1 <+52729>:	mov    (%r12),%rax
0x00000000005856b5 <+52733>:	add    $0x1,%rax
0x00000000005856b9 <+52737>:	mov    %rax,(%r12)
0x00000000005856bd <+52741>:	movq   $0x0,-0x8(%rbx)
0x00000000005856c5 <+52749>:	mov    $0x1229,%esi
0x00000000005856ca <+52754>:	mov    $0x74045c,%edi
0x00000000005856cf <+52759>:	call   0x573c83 <Py_DECREF>
0x00000000005856d4 <+52764>:	lea    0x8(%rbx),%r14
0x00000000005856d8 <+52768>:	mov    %r12,(%rbx)
0x00000000005856db <+52771>:	mov    0x20(%rbp),%rdx
0x00000000005856df <+52775>:	movslq 0x4c(%rdx),%rax
0x00000000005856e3 <+52779>:	lea    0x48(%rbp,%rax,8),%rcx
0x00000000005856e8 <+52784>:	mov    %r14,%rax
0x00000000005856eb <+52787>:	sub    %rcx,%rax
0x00000000005856ee <+52790>:	sar    $0x3,%rax
0x00000000005856f2 <+52794>:	cmp    %eax,0x44(%rdx)
0x00000000005856f5 <+52797>:	jl     0x5857ab <_PyEval_EvalFrameDefault+52979>
0x00000000005856fb <+52803>:	lea    0x16(%r13),%r15
0x00000000005856ff <+52807>:	movzwl 0x16(%r13),%r12d
0x0000000000585704 <+52812>:	mov    %r12d,%eax
0x0000000000585707 <+52815>:	shr    $0x8,%ax
0x000000000058570b <+52819>:	movzwl %ax,%eax
0x000000000058570e <+52822>:	mov    %eax,0x8(%rsp)
0x0000000000585712 <+52826>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585717 <+52831>:	jne    0x5857c4 <_PyEval_EvalFrameDefault+53004>
0x000000000058571d <+52837>:	movzbl 0xc0(%rsp),%eax
0x0000000000585725 <+52845>:	lea    -0x1(%rax),%edx
0x0000000000585728 <+52848>:	cmp    $0xfd,%dl
0x000000000058572b <+52851>:	jbe    0x5857d7 <_PyEval_EvalFrameDefault+53023>
0x0000000000585731 <+52857>:	cmpw   $0x0,0x539d13(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585739 <+52865>:	jne    0x5857f0 <_PyEval_EvalFrameDefault+53048>
0x000000000058573f <+52871>:	mov    $0x0,%edx
0x0000000000585744 <+52876>:	or     %edx,%eax
0x0000000000585746 <+52878>:	or     %eax,%r12d
0x0000000000585749 <+52881>:	movzbl %r12b,%eax
0x000000000058574d <+52885>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585755 <+52893>:	mov    %r14,%rbx
0x0000000000585758 <+52896>:	mov    %r15,%r13
0x000000000058575b <+52899>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000585760 <+52904>:	mov    $0x7444e0,%ecx
0x0000000000585765 <+52909>:	mov    $0x121a,%edx
0x000000000058576a <+52914>:	mov    $0x74045c,%esi
0x000000000058576f <+52919>:	mov    $0x7408ff,%edi
0x0000000000585774 <+52924>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585779 <+52929>:	mov    $0x7444e0,%ecx
0x000000000058577e <+52934>:	mov    $0x1222,%edx
0x0000000000585783 <+52939>:	mov    $0x74045c,%esi
0x0000000000585788 <+52944>:	mov    $0x740b38,%edi
0x000000000058578d <+52949>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585792 <+52954>:	mov    $0x7444e0,%ecx
0x0000000000585797 <+52959>:	mov    $0x1226,%edx
0x000000000058579c <+52964>:	mov    $0x74045c,%esi
0x00000000005857a1 <+52969>:	mov    $0x74093f,%edi
0x00000000005857a6 <+52974>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005857ab <+52979>:	mov    $0x7444e0,%ecx
0x00000000005857b0 <+52984>:	mov    $0x122a,%edx
0x00000000005857b5 <+52989>:	mov    $0x74045c,%esi
0x00000000005857ba <+52994>:	mov    $0x7408bc,%edi
0x00000000005857bf <+52999>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005857c4 <+53004>:	mov    %r15,%rdx
0x00000000005857c7 <+53007>:	mov    %r14,%rsi
0x00000000005857ca <+53010>:	mov    %rbp,%rdi
0x00000000005857cd <+53013>:	call   0x573f7b <lltrace_instruction>
0x00000000005857d2 <+53018>:	jmp    0x58571d <_PyEval_EvalFrameDefault+52837>
0x00000000005857d7 <+53023>:	mov    $0x7444e0,%ecx
0x00000000005857dc <+53028>:	mov    $0x122c,%edx
0x00000000005857e1 <+53033>:	mov    $0x74045c,%esi
0x00000000005857e6 <+53038>:	mov    $0x742a50,%edi
0x00000000005857eb <+53043>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005857f0 <+53048>:	mov    $0xffffffff,%edx
0x00000000005857f5 <+53053>:	jmp    0x585744 <_PyEval_EvalFrameDefault+52876>
0x00000000005857fa <+53058>:	lea    0x2(%r13),%r15
0x00000000005857fe <+53062>:	mov    %r13,0x38(%rbp)
0x0000000000585802 <+53066>:	mov    $0xfffffffe,%eax
0x0000000000585807 <+53071>:	mov    0x8(%rsp),%edi
0x000000000058580b <+53075>:	sub    %edi,%eax
0x000000000058580d <+53077>:	cltq
0x000000000058580f <+53079>:	lea    (%rbx,%rax,8),%rsi
0x0000000000585813 <+53083>:	mov    (%rsi),%rcx
0x0000000000585816 <+53086>:	test   %rcx,%rcx
0x0000000000585819 <+53089>:	setne  %al
0x000000000058581c <+53092>:	movzbl %al,%eax
0x000000000058581f <+53095>:	add    %edi,%eax
0x0000000000585821 <+53097>:	not    %eax
0x0000000000585823 <+53099>:	cltq
0x0000000000585825 <+53101>:	mov    (%rbx,%rax,8),%rdx
0x0000000000585829 <+53105>:	test   %rcx,%rcx
0x000000000058582c <+53108>:	je     0x58588d <_PyEval_EvalFrameDefault+53205>
0x000000000058582e <+53110>:	lea    0x2(%r15),%r13
0x0000000000585832 <+53114>:	movzwl 0x2(%r15),%r12d
0x0000000000585837 <+53119>:	mov    %r12d,%eax
0x000000000058583a <+53122>:	shr    $0x8,%ax
0x000000000058583e <+53126>:	movzwl %ax,%eax
0x0000000000585841 <+53129>:	mov    %eax,0x8(%rsp)
0x0000000000585845 <+53133>:	cmpl   $0x0,0x14(%rsp)
0x000000000058584a <+53138>:	jne    0x5858e7 <_PyEval_EvalFrameDefault+53295>
0x0000000000585850 <+53144>:	movzbl 0xc0(%rsp),%eax
0x0000000000585858 <+53152>:	lea    -0x1(%rax),%edx
0x000000000058585b <+53155>:	cmp    $0xfd,%dl
0x000000000058585e <+53158>:	jbe    0x5858fa <_PyEval_EvalFrameDefault+53314>
0x0000000000585864 <+53164>:	cmpw   $0x0,0x539be0(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058586c <+53172>:	jne    0x585913 <_PyEval_EvalFrameDefault+53339>
0x0000000000585872 <+53178>:	mov    $0x0,%edx
0x0000000000585877 <+53183>:	or     %edx,%eax
0x0000000000585879 <+53185>:	or     %eax,%r12d
0x000000000058587c <+53188>:	movzbl %r12b,%eax
0x0000000000585880 <+53192>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585888 <+53200>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058588d <+53205>:	cmpq   $0x984780,0x8(%rdx)
0x0000000000585895 <+53213>:	jne    0x58582e <_PyEval_EvalFrameDefault+53110>
0x0000000000585897 <+53215>:	mov    0x10(%rdx),%rax
0x000000000058589b <+53219>:	mov    0x18(%rdx),%rdi
0x000000000058589f <+53223>:	addq   $0x1,0x53e1e1(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005858a7 <+53231>:	mov    (%rax),%rcx
0x00000000005858aa <+53234>:	add    $0x1,%rcx
0x00000000005858ae <+53238>:	mov    %rcx,(%rax)
0x00000000005858b1 <+53241>:	addq   $0x1,0x53e1cf(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005858b9 <+53249>:	mov    (%rdi),%rcx
0x00000000005858bc <+53252>:	add    $0x1,%rcx
0x00000000005858c0 <+53256>:	mov    %rcx,(%rdi)
0x00000000005858c3 <+53259>:	mov    0x8(%rsp),%ecx
0x00000000005858c7 <+53263>:	not    %ecx
0x00000000005858c9 <+53265>:	movslq %ecx,%rcx
0x00000000005858cc <+53268>:	mov    %rdi,(%rbx,%rcx,8)
0x00000000005858d0 <+53272>:	mov    %rax,(%rsi)
0x00000000005858d3 <+53275>:	mov    $0x1257,%esi
0x00000000005858d8 <+53280>:	mov    $0x74045c,%edi
0x00000000005858dd <+53285>:	call   0x573c83 <Py_DECREF>
0x00000000005858e2 <+53290>:	jmp    0x58582e <_PyEval_EvalFrameDefault+53110>
0x00000000005858e7 <+53295>:	mov    %r13,%rdx
0x00000000005858ea <+53298>:	mov    %rbx,%rsi
0x00000000005858ed <+53301>:	mov    %rbp,%rdi
0x00000000005858f0 <+53304>:	call   0x573f7b <lltrace_instruction>
0x00000000005858f5 <+53309>:	jmp    0x585850 <_PyEval_EvalFrameDefault+53144>
0x00000000005858fa <+53314>:	mov    $0x7444e0,%ecx
0x00000000005858ff <+53319>:	mov    $0x125a,%edx
0x0000000000585904 <+53324>:	mov    $0x74045c,%esi
0x0000000000585909 <+53329>:	mov    $0x742a50,%edi
0x000000000058590e <+53334>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585913 <+53339>:	mov    $0xffffffff,%edx
0x0000000000585918 <+53344>:	jmp    0x585877 <_PyEval_EvalFrameDefault+53183>
0x000000000058591d <+53349>:	lea    0x2(%r13),%r15
0x0000000000585921 <+53353>:	mov    %r13,0x38(%rbp)
0x0000000000585925 <+53357>:	mov    $0xfffffffe,%eax
0x000000000058592a <+53362>:	mov    0x8(%rsp),%ecx
0x000000000058592e <+53366>:	sub    %ecx,%eax
0x0000000000585930 <+53368>:	cltq
0x0000000000585932 <+53370>:	lea    (%rbx,%rax,8),%rdi
0x0000000000585936 <+53374>:	cmpq   $0x0,(%rdi)
0x000000000058593a <+53378>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585940 <+53384>:	mov    %ecx,%eax
0x0000000000585942 <+53386>:	not    %eax
0x0000000000585944 <+53388>:	cltq
0x0000000000585946 <+53390>:	lea    (%rbx,%rax,8),%r8
0x000000000058594a <+53394>:	mov    (%r8),%rdx
0x000000000058594d <+53397>:	cmpq   $0x984780,0x8(%rdx)
0x0000000000585955 <+53405>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058595b <+53411>:	mov    0x10(%rdx),%rax
0x000000000058595f <+53415>:	mov    0x18(%rdx),%rcx
0x0000000000585963 <+53419>:	addq   $0x1,0x53e11d(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000058596b <+53427>:	mov    (%rax),%rsi
0x000000000058596e <+53430>:	add    $0x1,%rsi
0x0000000000585972 <+53434>:	mov    %rsi,(%rax)
0x0000000000585975 <+53437>:	addq   $0x1,0x53e10b(%rip)        # 0xac3a88 <_Py_RefTotal>
0x000000000058597d <+53445>:	mov    (%rcx),%rsi
0x0000000000585980 <+53448>:	add    $0x1,%rsi
0x0000000000585984 <+53452>:	mov    %rsi,(%rcx)
0x0000000000585987 <+53455>:	mov    %rcx,(%r8)
0x000000000058598a <+53458>:	mov    %rax,(%rdi)
0x000000000058598d <+53461>:	mov    $0x1268,%esi
0x0000000000585992 <+53466>:	mov    $0x74045c,%edi
0x0000000000585997 <+53471>:	call   0x573c83 <Py_DECREF>
0x000000000058599c <+53476>:	lea    0x4(%r13),%r14
0x00000000005859a0 <+53480>:	movzwl 0x4(%r13),%r12d
0x00000000005859a5 <+53485>:	mov    %r12d,%eax
0x00000000005859a8 <+53488>:	shr    $0x8,%ax
0x00000000005859ac <+53492>:	movzwl %ax,%eax
0x00000000005859af <+53495>:	mov    %eax,0x8(%rsp)
0x00000000005859b3 <+53499>:	cmpl   $0x0,0x14(%rsp)
0x00000000005859b8 <+53504>:	jne    0x5859f2 <_PyEval_EvalFrameDefault+53562>
0x00000000005859ba <+53506>:	movzbl 0xc0(%rsp),%eax
0x00000000005859c2 <+53514>:	lea    -0x1(%rax),%edx
0x00000000005859c5 <+53517>:	cmp    $0xfd,%dl
0x00000000005859c8 <+53520>:	jbe    0x585a02 <_PyEval_EvalFrameDefault+53578>
0x00000000005859ca <+53522>:	cmpw   $0x0,0x539a7a(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005859d2 <+53530>:	jne    0x585a1b <_PyEval_EvalFrameDefault+53603>
0x00000000005859d4 <+53532>:	mov    $0x0,%edx
0x00000000005859d9 <+53537>:	or     %edx,%eax
0x00000000005859db <+53539>:	or     %eax,%r12d
0x00000000005859de <+53542>:	movzbl %r12b,%eax
0x00000000005859e2 <+53546>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005859ea <+53554>:	mov    %r14,%r13
0x00000000005859ed <+53557>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005859f2 <+53562>:	mov    %r14,%rdx
0x00000000005859f5 <+53565>:	mov    %rbx,%rsi
0x00000000005859f8 <+53568>:	mov    %rbp,%rdi
0x00000000005859fb <+53571>:	call   0x573f7b <lltrace_instruction>
0x0000000000585a00 <+53576>:	jmp    0x5859ba <_PyEval_EvalFrameDefault+53506>
0x0000000000585a02 <+53578>:	mov    $0x7444e0,%ecx
0x0000000000585a07 <+53583>:	mov    $0x126a,%edx
0x0000000000585a0c <+53588>:	mov    $0x74045c,%esi
0x0000000000585a11 <+53593>:	mov    $0x742a50,%edi
0x0000000000585a16 <+53598>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585a1b <+53603>:	mov    $0xffffffff,%edx
0x0000000000585a20 <+53608>:	jmp    0x5859d9 <_PyEval_EvalFrameDefault+53537>
0x0000000000585a22 <+53610>:	lea    0x2(%r13),%r15
0x0000000000585a26 <+53614>:	mov    %r13,0x38(%rbp)
0x0000000000585a2a <+53618>:	mov    $0xfffffffe,%eax
0x0000000000585a2f <+53623>:	mov    0x8(%rsp),%ecx
0x0000000000585a33 <+53627>:	sub    %ecx,%eax
0x0000000000585a35 <+53629>:	cltq
0x0000000000585a37 <+53631>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000585a3c <+53636>:	setne  %al
0x0000000000585a3f <+53639>:	movzbl %al,%eax
0x0000000000585a42 <+53642>:	add    %ecx,%eax
0x0000000000585a44 <+53644>:	not    %eax
0x0000000000585a46 <+53646>:	cltq
0x0000000000585a48 <+53648>:	mov    (%rbx,%rax,8),%rax
0x0000000000585a4c <+53652>:	cmpq   $0x991540,0x8(%rax)
0x0000000000585a54 <+53660>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000585a5a <+53666>:	lea    0x4(%r13),%r14
0x0000000000585a5e <+53670>:	movzwl 0x4(%r13),%r12d
0x0000000000585a63 <+53675>:	mov    %r12d,%eax
0x0000000000585a66 <+53678>:	shr    $0x8,%ax
0x0000000000585a6a <+53682>:	movzwl %ax,%eax
0x0000000000585a6d <+53685>:	mov    %eax,0x8(%rsp)
0x0000000000585a71 <+53689>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585a76 <+53694>:	jne    0x585ab0 <_PyEval_EvalFrameDefault+53752>
0x0000000000585a78 <+53696>:	movzbl 0xc0(%rsp),%eax
0x0000000000585a80 <+53704>:	lea    -0x1(%rax),%edx
0x0000000000585a83 <+53707>:	cmp    $0xfd,%dl
0x0000000000585a86 <+53710>:	jbe    0x585ac0 <_PyEval_EvalFrameDefault+53768>
0x0000000000585a88 <+53712>:	cmpw   $0x0,0x5399bc(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585a90 <+53720>:	jne    0x585ad9 <_PyEval_EvalFrameDefault+53793>
0x0000000000585a92 <+53722>:	mov    $0x0,%edx
0x0000000000585a97 <+53727>:	or     %edx,%eax
0x0000000000585a99 <+53729>:	or     %eax,%r12d
0x0000000000585a9c <+53732>:	movzbl %r12b,%eax
0x0000000000585aa0 <+53736>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585aa8 <+53744>:	mov    %r14,%r13
0x0000000000585aab <+53747>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000585ab0 <+53752>:	mov    %r14,%rdx
0x0000000000585ab3 <+53755>:	mov    %rbx,%rsi
0x0000000000585ab6 <+53758>:	mov    %rbp,%rdi
0x0000000000585ab9 <+53761>:	call   0x573f7b <lltrace_instruction>
0x0000000000585abe <+53766>:	jmp    0x585a78 <_PyEval_EvalFrameDefault+53696>
0x0000000000585ac0 <+53768>:	mov    $0x7444e0,%ecx
0x0000000000585ac5 <+53773>:	mov    $0x1273,%edx
0x0000000000585aca <+53778>:	mov    $0x74045c,%esi
0x0000000000585acf <+53783>:	mov    $0x742a50,%edi
0x0000000000585ad4 <+53788>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585ad9 <+53793>:	mov    $0xffffffff,%edx
0x0000000000585ade <+53798>:	jmp    0x585a97 <_PyEval_EvalFrameDefault+53727>
0x0000000000585ae0 <+53800>:	lea    0x2(%r13),%r14
0x0000000000585ae4 <+53804>:	mov    %r13,0x38(%rbp)
0x0000000000585ae8 <+53808>:	cmpq   $0x0,0x20(%rsp)
0x0000000000585aee <+53814>:	jne    0x585b67 <_PyEval_EvalFrameDefault+53935>
0x0000000000585af0 <+53816>:	movslq 0x8(%rsp),%r12
0x0000000000585af5 <+53821>:	mov    0x40(%rsp),%rdi
0x0000000000585afa <+53826>:	call   0x573476 <PyTuple_GET_SIZE>
0x0000000000585aff <+53831>:	cmp    %rax,%r12
0x0000000000585b02 <+53834>:	jge    0x585b80 <_PyEval_EvalFrameDefault+53960>
0x0000000000585b04 <+53836>:	mov    %r12,%rsi
0x0000000000585b07 <+53839>:	mov    0x40(%rsp),%rdi
0x0000000000585b0c <+53844>:	call   0x500470 <PyTuple_GetItem>
0x0000000000585b11 <+53849>:	mov    %rax,0x20(%rsp)
0x0000000000585b16 <+53854>:	movzwl (%r14),%r12d
0x0000000000585b1a <+53858>:	mov    %r12d,%eax
0x0000000000585b1d <+53861>:	shr    $0x8,%ax
0x0000000000585b21 <+53865>:	movzwl %ax,%eax
0x0000000000585b24 <+53868>:	mov    %eax,0x8(%rsp)
0x0000000000585b28 <+53872>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585b2d <+53877>:	jne    0x585b99 <_PyEval_EvalFrameDefault+53985>
0x0000000000585b2f <+53879>:	movzbl 0xc0(%rsp),%eax
0x0000000000585b37 <+53887>:	lea    -0x1(%rax),%edx
0x0000000000585b3a <+53890>:	cmp    $0xfd,%dl
0x0000000000585b3d <+53893>:	jbe    0x585ba9 <_PyEval_EvalFrameDefault+54001>
0x0000000000585b3f <+53895>:	cmpw   $0x0,0x539905(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585b47 <+53903>:	jne    0x585bc2 <_PyEval_EvalFrameDefault+54026>
0x0000000000585b49 <+53905>:	mov    $0x0,%edx
0x0000000000585b4e <+53910>:	or     %edx,%eax
0x0000000000585b50 <+53912>:	or     %eax,%r12d
0x0000000000585b53 <+53915>:	movzbl %r12b,%eax
0x0000000000585b57 <+53919>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585b5f <+53927>:	mov    %r14,%r13
0x0000000000585b62 <+53930>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000585b67 <+53935>:	mov    $0x7444e0,%ecx
0x0000000000585b6c <+53940>:	mov    $0x1277,%edx
0x0000000000585b71 <+53945>:	mov    $0x74045c,%esi
0x0000000000585b76 <+53950>:	mov    $0x740c10,%edi
0x0000000000585b7b <+53955>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585b80 <+53960>:	mov    $0x7444e0,%ecx
0x0000000000585b85 <+53965>:	mov    $0x1278,%edx
0x0000000000585b8a <+53970>:	mov    $0x74045c,%esi
0x0000000000585b8f <+53975>:	mov    $0x743310,%edi
0x0000000000585b94 <+53980>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585b99 <+53985>:	mov    %r14,%rdx
0x0000000000585b9c <+53988>:	mov    %rbx,%rsi
0x0000000000585b9f <+53991>:	mov    %rbp,%rdi
0x0000000000585ba2 <+53994>:	call   0x573f7b <lltrace_instruction>
0x0000000000585ba7 <+53999>:	jmp    0x585b2f <_PyEval_EvalFrameDefault+53879>
0x0000000000585ba9 <+54001>:	mov    $0x7444e0,%ecx
0x0000000000585bae <+54006>:	mov    $0x127a,%edx
0x0000000000585bb3 <+54011>:	mov    $0x74045c,%esi
0x0000000000585bb8 <+54016>:	mov    $0x742a50,%edi
0x0000000000585bbd <+54021>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585bc2 <+54026>:	mov    $0xffffffff,%edx
0x0000000000585bc7 <+54031>:	jmp    0x585b4e <_PyEval_EvalFrameDefault+53910>
0x0000000000585bc9 <+54033>:	lea    0x2(%r13),%r15
0x0000000000585bcd <+54037>:	mov    %r13,0x38(%rbp)
0x0000000000585bd1 <+54041>:	mov    $0xfffffffe,%eax
0x0000000000585bd6 <+54046>:	mov    0x8(%rsp),%ecx
0x0000000000585bda <+54050>:	sub    %ecx,%eax
0x0000000000585bdc <+54052>:	cltq
0x0000000000585bde <+54054>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000585be3 <+54059>:	setne  %al
0x0000000000585be6 <+54062>:	movzbl %al,%eax
0x0000000000585be9 <+54065>:	mov    %eax,0x48(%rsp)
0x0000000000585bed <+54069>:	lea    (%rcx,%rax,1),%r12d
0x0000000000585bf1 <+54073>:	mov    %r12d,%eax
0x0000000000585bf4 <+54076>:	not    %eax
0x0000000000585bf6 <+54078>:	cltq
0x0000000000585bf8 <+54080>:	mov    (%rbx,%rax,8),%r13
0x0000000000585bfc <+54084>:	mov    0x20(%rsp),%rdi
0x0000000000585c01 <+54089>:	mov    %rdi,0x8(%rsp)
0x0000000000585c06 <+54094>:	test   %rdi,%rdi
0x0000000000585c09 <+54097>:	je     0x585cdc <_PyEval_EvalFrameDefault+54308>
0x0000000000585c0f <+54103>:	call   0x573476 <PyTuple_GET_SIZE>
0x0000000000585c14 <+54108>:	mov    %r12d,%r8d
0x0000000000585c17 <+54111>:	sub    %eax,%r8d
0x0000000000585c1a <+54114>:	cmpq   $0x991540,0x8(%r13)
0x0000000000585c22 <+54122>:	je     0x585ce6 <_PyEval_EvalFrameDefault+54318>
0x0000000000585c28 <+54128>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000585c30 <+54136>:	je     0x585e4b <_PyEval_EvalFrameDefault+54675>
0x0000000000585c36 <+54142>:	movslq %r12d,%rax
0x0000000000585c39 <+54145>:	shl    $0x3,%rax
0x0000000000585c3d <+54149>:	movslq %r8d,%rcx
0x0000000000585c40 <+54152>:	mov    %rbx,%rdx
0x0000000000585c43 <+54155>:	sub    %rax,%rdx
0x0000000000585c46 <+54158>:	mov    0x8(%rsp),%r8
0x0000000000585c4b <+54163>:	mov    %r13,%rsi
0x0000000000585c4e <+54166>:	mov    0x18(%rsp),%rdi
0x0000000000585c53 <+54171>:	call   0x5780bc <trace_call_function>
0x0000000000585c58 <+54176>:	mov    %rax,0x8(%rsp)
0x0000000000585c5d <+54181>:	movq   $0x0,0x20(%rsp)
0x0000000000585c66 <+54190>:	cmpq   $0x0,0x8(%rsp)
0x0000000000585c6c <+54196>:	setne  %r14b
0x0000000000585c70 <+54200>:	mov    0x18(%rsp),%rdi
0x0000000000585c75 <+54205>:	call   0x573630 <_PyErr_Occurred>
0x0000000000585c7a <+54210>:	test   %rax,%rax
0x0000000000585c7d <+54213>:	setne  %al
0x0000000000585c80 <+54216>:	cmp    %al,%r14b
0x0000000000585c83 <+54219>:	je     0x585e77 <_PyEval_EvalFrameDefault+54719>
0x0000000000585c89 <+54225>:	mov    %r13,%rdx
0x0000000000585c8c <+54228>:	mov    $0x12ab,%esi
0x0000000000585c91 <+54233>:	mov    $0x74045c,%edi
0x0000000000585c96 <+54238>:	call   0x573c83 <Py_DECREF>
0x0000000000585c9b <+54243>:	test   %r12d,%r12d
0x0000000000585c9e <+54246>:	js     0x585e90 <_PyEval_EvalFrameDefault+54744>
0x0000000000585ca4 <+54252>:	lea    0x48(%rbp),%r14
0x0000000000585ca8 <+54256>:	mov    0x20(%rbp),%rax
0x0000000000585cac <+54260>:	movslq 0x4c(%rax),%rax
0x0000000000585cb0 <+54264>:	lea    (%r14,%rax,8),%rdx
0x0000000000585cb4 <+54268>:	mov    %rbx,%rax
0x0000000000585cb7 <+54271>:	sub    %rdx,%rax
0x0000000000585cba <+54274>:	sar    $0x3,%rax
0x0000000000585cbe <+54278>:	cmp    %r12d,%eax
0x0000000000585cc1 <+54281>:	jl     0x585ea9 <_PyEval_EvalFrameDefault+54769>
0x0000000000585cc7 <+54287>:	mov    %r12d,%eax
0x0000000000585cca <+54290>:	neg    %eax
0x0000000000585ccc <+54292>:	cltq
0x0000000000585cce <+54294>:	lea    (%rbx,%rax,8),%r13
0x0000000000585cd2 <+54298>:	mov    $0x0,%ebx
0x0000000000585cd7 <+54303>:	jmp    0x585edc <_PyEval_EvalFrameDefault+54820>
0x0000000000585cdc <+54308>:	mov    $0x0,%eax
0x0000000000585ce1 <+54313>:	jmp    0x585c14 <_PyEval_EvalFrameDefault+54108>
0x0000000000585ce6 <+54318>:	mov    0x18(%rsp),%rax
0x0000000000585ceb <+54323>:	mov    0x10(%rax),%rax
0x0000000000585cef <+54327>:	cmpq   $0x0,0x590(%rax)
0x0000000000585cf7 <+54335>:	jne    0x585c28 <_PyEval_EvalFrameDefault+54128>
0x0000000000585cfd <+54341>:	mov    0x30(%r13),%rax
0x0000000000585d01 <+54345>:	testb  $0x1,0x30(%rax)
0x0000000000585d05 <+54349>:	jne    0x585ddd <_PyEval_EvalFrameDefault+54565>
0x0000000000585d0b <+54355>:	mov    0x10(%r13),%rdx
0x0000000000585d0f <+54359>:	test   %r12d,%r12d
0x0000000000585d12 <+54362>:	js     0x585de7 <_PyEval_EvalFrameDefault+54575>
0x0000000000585d18 <+54368>:	lea    0x48(%rbp),%r14
0x0000000000585d1c <+54372>:	mov    0x20(%rbp),%rax
0x0000000000585d20 <+54376>:	movslq 0x4c(%rax),%rax
0x0000000000585d24 <+54380>:	lea    (%r14,%rax,8),%rcx
0x0000000000585d28 <+54384>:	mov    %rbx,%rax
0x0000000000585d2b <+54387>:	sub    %rcx,%rax
0x0000000000585d2e <+54390>:	sar    $0x3,%rax
0x0000000000585d32 <+54394>:	cmp    %r12d,%eax
0x0000000000585d35 <+54397>:	jl     0x585e00 <_PyEval_EvalFrameDefault+54600>
0x0000000000585d3b <+54403>:	mov    %r12d,%eax
0x0000000000585d3e <+54406>:	neg    %eax
0x0000000000585d40 <+54408>:	cltq
0x0000000000585d42 <+54410>:	lea    (%rbx,%rax,8),%rbx
0x0000000000585d46 <+54414>:	mov    0x8(%rsp),%r9
0x0000000000585d4b <+54419>:	movslq %r8d,%r8
0x0000000000585d4e <+54422>:	mov    %rbx,%rcx
0x0000000000585d51 <+54425>:	mov    %r13,%rsi
0x0000000000585d54 <+54428>:	mov    0x18(%rsp),%rdi
0x0000000000585d59 <+54433>:	call   0x577075 <_PyEvalFramePushAndInit>
0x0000000000585d5e <+54438>:	mov    %rax,%rcx
0x0000000000585d61 <+54441>:	movq   $0x0,0x20(%rsp)
0x0000000000585d6a <+54450>:	mov    $0x2,%eax
0x0000000000585d6f <+54455>:	mov    0x48(%rsp),%esi
0x0000000000585d73 <+54459>:	sub    %esi,%eax
0x0000000000585d75 <+54461>:	js     0x585e19 <_PyEval_EvalFrameDefault+54625>
0x0000000000585d7b <+54467>:	mov    0x20(%rbp),%rdx
0x0000000000585d7f <+54471>:	movslq 0x4c(%rdx),%rdx
0x0000000000585d83 <+54475>:	lea    (%r14,%rdx,8),%rsi
0x0000000000585d87 <+54479>:	mov    %rbx,%rdx
0x0000000000585d8a <+54482>:	sub    %rsi,%rdx
0x0000000000585d8d <+54485>:	sar    $0x3,%rdx
0x0000000000585d91 <+54489>:	cmp    %edx,%eax
0x0000000000585d93 <+54491>:	jg     0x585e32 <_PyEval_EvalFrameDefault+54650>
0x0000000000585d99 <+54497>:	mov    0x48(%rsp),%eax
0x0000000000585d9d <+54501>:	sub    $0x2,%eax
0x0000000000585da0 <+54504>:	cltq
0x0000000000585da2 <+54506>:	lea    (%rbx,%rax,8),%rbx
0x0000000000585da6 <+54510>:	test   %rcx,%rcx
0x0000000000585da9 <+54513>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000585daf <+54519>:	mov    %rbx,%rax
0x0000000000585db2 <+54522>:	sub    %r14,%rax
0x0000000000585db5 <+54525>:	sar    $0x3,%rax
0x0000000000585db9 <+54529>:	mov    %eax,0x40(%rbp)
0x0000000000585dbc <+54532>:	lea    0x6(%r15),%rax
0x0000000000585dc0 <+54536>:	mov    %rax,0x38(%rbp)
0x0000000000585dc4 <+54540>:	mov    %rbp,0x30(%rcx)
0x0000000000585dc8 <+54544>:	mov    %rcx,0xc8(%rsp)
0x0000000000585dd0 <+54552>:	mov    0x14(%rsp),%r14d
0x0000000000585dd5 <+54557>:	mov    %rcx,%rbp
0x0000000000585dd8 <+54560>:	jmp    0x57b1ae <_PyEval_EvalFrameDefault+10486>
0x0000000000585ddd <+54565>:	mov    $0x0,%edx
0x0000000000585de2 <+54570>:	jmp    0x585d0f <_PyEval_EvalFrameDefault+54359>
0x0000000000585de7 <+54575>:	mov    $0x7444e0,%ecx
0x0000000000585dec <+54580>:	mov    $0x1288,%edx
0x0000000000585df1 <+54585>:	mov    $0x74045c,%esi
0x0000000000585df6 <+54590>:	mov    $0x740c2b,%edi
0x0000000000585dfb <+54595>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585e00 <+54600>:	mov    $0x7444e0,%ecx
0x0000000000585e05 <+54605>:	mov    $0x1288,%edx
0x0000000000585e0a <+54610>:	mov    $0x74045c,%esi
0x0000000000585e0f <+54615>:	mov    $0x740c3b,%edi
0x0000000000585e14 <+54620>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585e19 <+54625>:	mov    $0x7444e0,%ecx
0x0000000000585e1e <+54630>:	mov    $0x128e,%edx
0x0000000000585e23 <+54635>:	mov    $0x74045c,%esi
0x0000000000585e28 <+54640>:	mov    $0x740c57,%edi
0x0000000000585e2d <+54645>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585e32 <+54650>:	mov    $0x7444e0,%ecx
0x0000000000585e37 <+54655>:	mov    $0x128e,%edx
0x0000000000585e3c <+54660>:	mov    $0x74045c,%esi
0x0000000000585e41 <+54665>:	mov    $0x740c66,%edi
0x0000000000585e46 <+54670>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585e4b <+54675>:	movslq %r12d,%rax
0x0000000000585e4e <+54678>:	shl    $0x3,%rax
0x0000000000585e52 <+54682>:	mov    %rbx,%rsi
0x0000000000585e55 <+54685>:	sub    %rax,%rsi
0x0000000000585e58 <+54688>:	movslq %r8d,%rdx
0x0000000000585e5b <+54691>:	bts    $0x3f,%rdx
0x0000000000585e60 <+54696>:	mov    0x8(%rsp),%rcx
0x0000000000585e65 <+54701>:	mov    %r13,%rdi
0x0000000000585e68 <+54704>:	call   0x4a9fb2 <PyObject_Vectorcall>
0x0000000000585e6d <+54709>:	mov    %rax,0x8(%rsp)
0x0000000000585e72 <+54714>:	jmp    0x585c5d <_PyEval_EvalFrameDefault+54181>
0x0000000000585e77 <+54719>:	mov    $0x7444e0,%ecx
0x0000000000585e7c <+54724>:	mov    $0x12aa,%edx
0x0000000000585e81 <+54729>:	mov    $0x74045c,%esi
0x0000000000585e86 <+54734>:	mov    $0x743338,%edi
0x0000000000585e8b <+54739>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585e90 <+54744>:	mov    $0x7444e0,%ecx
0x0000000000585e95 <+54749>:	mov    $0x12ad,%edx
0x0000000000585e9a <+54754>:	mov    $0x74045c,%esi
0x0000000000585e9f <+54759>:	mov    $0x740c2b,%edi
0x0000000000585ea4 <+54764>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585ea9 <+54769>:	mov    $0x7444e0,%ecx
0x0000000000585eae <+54774>:	mov    $0x12ad,%edx
0x0000000000585eb3 <+54779>:	mov    $0x74045c,%esi
0x0000000000585eb8 <+54784>:	mov    $0x740c3b,%edi
0x0000000000585ebd <+54789>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585ec2 <+54794>:	movslq %ebx,%rax
0x0000000000585ec5 <+54797>:	mov    0x0(%r13,%rax,8),%rdx
0x0000000000585eca <+54802>:	mov    $0x12af,%esi
0x0000000000585ecf <+54807>:	mov    $0x74045c,%edi
0x0000000000585ed4 <+54812>:	call   0x573c83 <Py_DECREF>
0x0000000000585ed9 <+54817>:	add    $0x1,%ebx
0x0000000000585edc <+54820>:	cmp    %r12d,%ebx
0x0000000000585edf <+54823>:	jl     0x585ec2 <_PyEval_EvalFrameDefault+54794>
0x0000000000585ee1 <+54825>:	mov    $0x2,%eax
0x0000000000585ee6 <+54830>:	mov    0x48(%rsp),%ecx
0x0000000000585eea <+54834>:	sub    %ecx,%eax
0x0000000000585eec <+54836>:	js     0x585fc4 <_PyEval_EvalFrameDefault+55052>
0x0000000000585ef2 <+54842>:	mov    0x20(%rbp),%rdx
0x0000000000585ef6 <+54846>:	movslq 0x4c(%rdx),%rdx
0x0000000000585efa <+54850>:	lea    (%r14,%rdx,8),%rcx
0x0000000000585efe <+54854>:	mov    %r13,%rdx
0x0000000000585f01 <+54857>:	sub    %rcx,%rdx
0x0000000000585f04 <+54860>:	sar    $0x3,%rdx
0x0000000000585f08 <+54864>:	cmp    %edx,%eax
0x0000000000585f0a <+54866>:	jg     0x585fdd <_PyEval_EvalFrameDefault+55077>
0x0000000000585f10 <+54872>:	mov    0x48(%rsp),%eax
0x0000000000585f14 <+54876>:	sub    $0x2,%eax
0x0000000000585f17 <+54879>:	cltq
0x0000000000585f19 <+54881>:	lea    0x0(%r13,%rax,8),%rax
0x0000000000585f1e <+54886>:	lea    0x8(%rax),%rbx
0x0000000000585f22 <+54890>:	mov    0x8(%rsp),%rcx
0x0000000000585f27 <+54895>:	mov    %rcx,(%rax)
0x0000000000585f2a <+54898>:	mov    0x20(%rbp),%rdx
0x0000000000585f2e <+54902>:	movslq 0x4c(%rdx),%rax
0x0000000000585f32 <+54906>:	lea    (%r14,%rax,8),%rcx
0x0000000000585f36 <+54910>:	mov    %rbx,%rax
0x0000000000585f39 <+54913>:	sub    %rcx,%rax
0x0000000000585f3c <+54916>:	sar    $0x3,%rax
0x0000000000585f40 <+54920>:	cmp    %eax,0x44(%rdx)
0x0000000000585f43 <+54923>:	jl     0x585ff6 <_PyEval_EvalFrameDefault+55102>
0x0000000000585f49 <+54929>:	cmpq   $0x0,0x8(%rsp)
0x0000000000585f4f <+54935>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000585f55 <+54941>:	lea    0x8(%r15),%r13
0x0000000000585f59 <+54945>:	mov    0x28(%rsp),%rax
0x0000000000585f5e <+54950>:	mov    0x64(%rax),%eax
0x0000000000585f61 <+54953>:	test   %eax,%eax
0x0000000000585f63 <+54955>:	jne    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000585f69 <+54961>:	movzwl 0x8(%r15),%r12d
0x0000000000585f6e <+54966>:	mov    %r12d,%eax
0x0000000000585f71 <+54969>:	shr    $0x8,%ax
0x0000000000585f75 <+54973>:	movzwl %ax,%eax
0x0000000000585f78 <+54976>:	mov    %eax,0x8(%rsp)
0x0000000000585f7c <+54980>:	cmpl   $0x0,0x14(%rsp)
0x0000000000585f81 <+54985>:	jne    0x58600f <_PyEval_EvalFrameDefault+55127>
0x0000000000585f87 <+54991>:	movzbl 0xc0(%rsp),%eax
0x0000000000585f8f <+54999>:	lea    -0x1(%rax),%edx
0x0000000000585f92 <+55002>:	cmp    $0xfd,%dl
0x0000000000585f95 <+55005>:	jbe    0x586022 <_PyEval_EvalFrameDefault+55146>
0x0000000000585f9b <+55011>:	cmpw   $0x0,0x5394a9(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000585fa3 <+55019>:	jne    0x58603b <_PyEval_EvalFrameDefault+55171>
0x0000000000585fa9 <+55025>:	mov    $0x0,%edx
0x0000000000585fae <+55030>:	or     %edx,%eax
0x0000000000585fb0 <+55032>:	or     %eax,%r12d
0x0000000000585fb3 <+55035>:	movzbl %r12b,%eax
0x0000000000585fb7 <+55039>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000585fbf <+55047>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000585fc4 <+55052>:	mov    $0x7444e0,%ecx
0x0000000000585fc9 <+55057>:	mov    $0x12b1,%edx
0x0000000000585fce <+55062>:	mov    $0x74045c,%esi
0x0000000000585fd3 <+55067>:	mov    $0x740c57,%edi
0x0000000000585fd8 <+55072>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585fdd <+55077>:	mov    $0x7444e0,%ecx
0x0000000000585fe2 <+55082>:	mov    $0x12b1,%edx
0x0000000000585fe7 <+55087>:	mov    $0x74045c,%esi
0x0000000000585fec <+55092>:	mov    $0x740c66,%edi
0x0000000000585ff1 <+55097>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000585ff6 <+55102>:	mov    $0x7444e0,%ecx
0x0000000000585ffb <+55107>:	mov    $0x12b2,%edx
0x0000000000586000 <+55112>:	mov    $0x74045c,%esi
0x0000000000586005 <+55117>:	mov    $0x7408bc,%edi
0x000000000058600a <+55122>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058600f <+55127>:	mov    %r13,%rdx
0x0000000000586012 <+55130>:	mov    %rbx,%rsi
0x0000000000586015 <+55133>:	mov    %rbp,%rdi
0x0000000000586018 <+55136>:	call   0x573f7b <lltrace_instruction>
0x000000000058601d <+55141>:	jmp    0x585f87 <_PyEval_EvalFrameDefault+54991>
0x0000000000586022 <+55146>:	mov    $0x7444e0,%ecx
0x0000000000586027 <+55151>:	mov    $0x12b8,%edx
0x000000000058602c <+55156>:	mov    $0x74045c,%esi
0x0000000000586031 <+55161>:	mov    $0x742a50,%edi
0x0000000000586036 <+55166>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058603b <+55171>:	mov    $0xffffffff,%edx
0x0000000000586040 <+55176>:	jmp    0x585fae <_PyEval_EvalFrameDefault+55030>
0x0000000000586045 <+55181>:	lea    0x2(%r13),%r15
0x0000000000586049 <+55185>:	mov    %r13,0x38(%rbp)
0x000000000058604d <+55189>:	movzwl 0x2(%r13),%eax
0x0000000000586052 <+55194>:	cmp    $0xf,%ax
0x0000000000586056 <+55198>:	jbe    0x586065 <_PyEval_EvalFrameDefault+55213>
0x0000000000586058 <+55200>:	sub    $0x10,%eax
0x000000000058605b <+55203>:	mov    %ax,0x2(%r13)
0x0000000000586060 <+55208>:	jmp    0x585802 <_PyEval_EvalFrameDefault+53066>
0x0000000000586065 <+55213>:	mov    $0xfffffffe,%eax
0x000000000058606a <+55218>:	mov    0x8(%rsp),%r8d
0x000000000058606f <+55223>:	sub    %r8d,%eax
0x0000000000586072 <+55226>:	cltq
0x0000000000586074 <+55228>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000586079 <+55233>:	setne  %dl
0x000000000058607c <+55236>:	movzbl %dl,%edx
0x000000000058607f <+55239>:	add    %r8d,%edx
0x0000000000586082 <+55242>:	mov    %edx,%eax
0x0000000000586084 <+55244>:	not    %eax
0x0000000000586086 <+55246>:	cltq
0x0000000000586088 <+55248>:	mov    (%rbx,%rax,8),%rdi
0x000000000058608c <+55252>:	mov    0x20(%rsp),%rcx
0x0000000000586091 <+55257>:	mov    %r13,%rsi
0x0000000000586094 <+55260>:	call   0x5d01e6 <_Py_Specialize_Precall>
0x0000000000586099 <+55265>:	test   %eax,%eax
0x000000000058609b <+55267>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005860a1 <+55273>:	movzwl 0x0(%r13),%r14d
0x00000000005860a6 <+55278>:	cmpl   $0x0,0x14(%rsp)
0x00000000005860ab <+55283>:	jne    0x5860dc <_PyEval_EvalFrameDefault+55332>
0x00000000005860ad <+55285>:	movzbl 0xc0(%rsp),%r12d
0x00000000005860b6 <+55294>:	cmpw   $0x0,0x53938e(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005860be <+55302>:	jne    0x5860ec <_PyEval_EvalFrameDefault+55348>
0x00000000005860c0 <+55304>:	mov    $0x0,%eax
0x00000000005860c5 <+55309>:	or     %eax,%r12d
0x00000000005860c8 <+55312>:	or     %r14d,%r12d
0x00000000005860cb <+55315>:	movzbl %r12b,%eax
0x00000000005860cf <+55319>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005860d7 <+55327>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005860dc <+55332>:	mov    %r13,%rdx
0x00000000005860df <+55335>:	mov    %rbx,%rsi
0x00000000005860e2 <+55338>:	mov    %rbp,%rdi
0x00000000005860e5 <+55341>:	call   0x573f7b <lltrace_instruction>
0x00000000005860ea <+55346>:	jmp    0x5860ad <_PyEval_EvalFrameDefault+55285>
0x00000000005860ec <+55348>:	mov    $0xffffffff,%eax
0x00000000005860f1 <+55353>:	jmp    0x5860c5 <_PyEval_EvalFrameDefault+55309>
0x00000000005860f3 <+55355>:	lea    0x2(%r13),%r15
0x00000000005860f7 <+55359>:	mov    %r13,0x38(%rbp)
0x00000000005860fb <+55363>:	movzwl 0x2(%r13),%eax
0x0000000000586100 <+55368>:	cmp    $0xf,%ax
0x0000000000586104 <+55372>:	jbe    0x586113 <_PyEval_EvalFrameDefault+55387>
0x0000000000586106 <+55374>:	sub    $0x10,%eax
0x0000000000586109 <+55377>:	mov    %ax,0x2(%r13)
0x000000000058610e <+55382>:	jmp    0x585bd1 <_PyEval_EvalFrameDefault+54041>
0x0000000000586113 <+55387>:	mov    $0xfffffffe,%eax
0x0000000000586118 <+55392>:	mov    0x8(%rsp),%ecx
0x000000000058611c <+55396>:	sub    %ecx,%eax
0x000000000058611e <+55398>:	cltq
0x0000000000586120 <+55400>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000586125 <+55405>:	setne  %dl
0x0000000000586128 <+55408>:	movzbl %dl,%edx
0x000000000058612b <+55411>:	add    %ecx,%edx
0x000000000058612d <+55413>:	mov    %edx,%eax
0x000000000058612f <+55415>:	not    %eax
0x0000000000586131 <+55417>:	cltq
0x0000000000586133 <+55419>:	mov    (%rbx,%rax,8),%rdi
0x0000000000586137 <+55423>:	mov    0x20(%rsp),%rcx
0x000000000058613c <+55428>:	mov    %r13,%rsi
0x000000000058613f <+55431>:	call   0x5d02e5 <_Py_Specialize_Call>
0x0000000000586144 <+55436>:	test   %eax,%eax
0x0000000000586146 <+55438>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058614c <+55444>:	movzwl 0x0(%r13),%r14d
0x0000000000586151 <+55449>:	cmpl   $0x0,0x14(%rsp)
0x0000000000586156 <+55454>:	jne    0x586187 <_PyEval_EvalFrameDefault+55503>
0x0000000000586158 <+55456>:	movzbl 0xc0(%rsp),%r12d
0x0000000000586161 <+55465>:	cmpw   $0x0,0x5392e3(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000586169 <+55473>:	jne    0x586197 <_PyEval_EvalFrameDefault+55519>
0x000000000058616b <+55475>:	mov    $0x0,%eax
0x0000000000586170 <+55480>:	or     %eax,%r12d
0x0000000000586173 <+55483>:	or     %r14d,%r12d
0x0000000000586176 <+55486>:	movzbl %r12b,%eax
0x000000000058617a <+55490>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000586182 <+55498>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000586187 <+55503>:	mov    %r13,%rdx
0x000000000058618a <+55506>:	mov    %rbx,%rsi
0x000000000058618d <+55509>:	mov    %rbp,%rdi
0x0000000000586190 <+55512>:	call   0x573f7b <lltrace_instruction>
0x0000000000586195 <+55517>:	jmp    0x586158 <_PyEval_EvalFrameDefault+55456>
0x0000000000586197 <+55519>:	mov    $0xffffffff,%eax
0x000000000058619c <+55524>:	jmp    0x586170 <_PyEval_EvalFrameDefault+55480>
0x000000000058619e <+55526>:	lea    0x2(%r13),%r15
0x00000000005861a2 <+55530>:	mov    %r13,0x38(%rbp)
0x00000000005861a6 <+55534>:	cmpq   $0x0,0x20(%rsp)
0x00000000005861ac <+55540>:	jne    0x58627a <_PyEval_EvalFrameDefault+55746>
0x00000000005861b2 <+55546>:	mov    0x18(%rsp),%rax
0x00000000005861b7 <+55551>:	mov    0x10(%rax),%rax
0x00000000005861bb <+55555>:	cmpq   $0x0,0x590(%rax)
0x00000000005861c3 <+55563>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005861c9 <+55569>:	mov    $0xfffffffe,%eax
0x00000000005861ce <+55574>:	mov    0x8(%rsp),%ecx
0x00000000005861d2 <+55578>:	sub    %ecx,%eax
0x00000000005861d4 <+55580>:	cltq
0x00000000005861d6 <+55582>:	cmpq   $0x0,(%rbx,%rax,8)
0x00000000005861db <+55587>:	setne  %al
0x00000000005861de <+55590>:	movzbl %al,%eax
0x00000000005861e1 <+55593>:	mov    %eax,0x48(%rsp)
0x00000000005861e5 <+55597>:	lea    (%rcx,%rax,1),%r14d
0x00000000005861e9 <+55601>:	mov    %r14d,%eax
0x00000000005861ec <+55604>:	not    %eax
0x00000000005861ee <+55606>:	cltq
0x00000000005861f0 <+55608>:	mov    (%rbx,%rax,8),%rsi
0x00000000005861f4 <+55612>:	cmpq   $0x991540,0x8(%rsi)
0x00000000005861fc <+55620>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586202 <+55626>:	movzwl 0x4(%r13),%eax
0x0000000000586207 <+55631>:	movzwl 0x6(%r13),%edx
0x000000000058620c <+55636>:	shl    $0x10,%edx
0x000000000058620f <+55639>:	or     %edx,%eax
0x0000000000586211 <+55641>:	cmp    %eax,0x80(%rsi)
0x0000000000586217 <+55647>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058621d <+55653>:	mov    0x30(%rsi),%rax
0x0000000000586221 <+55657>:	mov    %rax,0x50(%rsp)
0x0000000000586226 <+55662>:	cmp    %r14d,0x38(%rax)
0x000000000058622a <+55666>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586230 <+55672>:	mov    0x18(%rsp),%rdi
0x0000000000586235 <+55677>:	call   0x5a52d2 <_PyFrame_Push>
0x000000000058623a <+55682>:	test   %rax,%rax
0x000000000058623d <+55685>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000586243 <+55691>:	test   %r14d,%r14d
0x0000000000586246 <+55694>:	js     0x586293 <_PyEval_EvalFrameDefault+55771>
0x0000000000586248 <+55696>:	lea    0x48(%rbp),%rcx
0x000000000058624c <+55700>:	mov    0x20(%rbp),%rdx
0x0000000000586250 <+55704>:	movslq 0x4c(%rdx),%rdx
0x0000000000586254 <+55708>:	lea    (%rcx,%rdx,8),%rsi
0x0000000000586258 <+55712>:	mov    %rbx,%rdx
0x000000000058625b <+55715>:	sub    %rsi,%rdx
0x000000000058625e <+55718>:	sar    $0x3,%rdx
0x0000000000586262 <+55722>:	cmp    %r14d,%edx
0x0000000000586265 <+55725>:	jl     0x5862ac <_PyEval_EvalFrameDefault+55796>
0x0000000000586267 <+55727>:	mov    %r14d,%edx
0x000000000058626a <+55730>:	neg    %edx
0x000000000058626c <+55732>:	movslq %edx,%rdx
0x000000000058626f <+55735>:	lea    (%rbx,%rdx,8),%rsi
0x0000000000586273 <+55739>:	mov    $0x0,%edx
0x0000000000586278 <+55744>:	jmp    0x5862d4 <_PyEval_EvalFrameDefault+55836>
0x000000000058627a <+55746>:	mov    $0x7444e0,%ecx
0x000000000058627f <+55751>:	mov    $0x12e8,%edx
0x0000000000586284 <+55756>:	mov    $0x74045c,%esi
0x0000000000586289 <+55761>:	mov    $0x740c10,%edi
0x000000000058628e <+55766>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586293 <+55771>:	mov    $0x7444e0,%ecx
0x0000000000586298 <+55776>:	mov    $0x12f9,%edx
0x000000000058629d <+55781>:	mov    $0x74045c,%esi
0x00000000005862a2 <+55786>:	mov    $0x740c81,%edi
0x00000000005862a7 <+55791>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005862ac <+55796>:	mov    $0x7444e0,%ecx
0x00000000005862b1 <+55801>:	mov    $0x12f9,%edx
0x00000000005862b6 <+55806>:	mov    $0x74045c,%esi
0x00000000005862bb <+55811>:	mov    $0x740c8f,%edi
0x00000000005862c0 <+55816>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005862c5 <+55821>:	movslq %edx,%rdi
0x00000000005862c8 <+55824>:	mov    (%rsi,%rdi,8),%r8
0x00000000005862cc <+55828>:	mov    %r8,0x48(%rax,%rdi,8)
0x00000000005862d1 <+55833>:	add    $0x1,%edx
0x00000000005862d4 <+55836>:	cmp    %r14d,%edx
0x00000000005862d7 <+55839>:	jl     0x5862c5 <_PyEval_EvalFrameDefault+55821>
0x00000000005862d9 <+55841>:	jmp    0x5862eb <_PyEval_EvalFrameDefault+55859>
0x00000000005862db <+55843>:	movslq %r14d,%rdx
0x00000000005862de <+55846>:	movq   $0x0,0x48(%rax,%rdx,8)
0x00000000005862e7 <+55855>:	add    $0x1,%r14d
0x00000000005862eb <+55859>:	mov    0x50(%rsp),%rbx
0x00000000005862f0 <+55864>:	cmp    %r14d,0x4c(%rbx)
0x00000000005862f4 <+55868>:	jg     0x5862db <_PyEval_EvalFrameDefault+55843>
0x00000000005862f6 <+55870>:	mov    $0x2,%edx
0x00000000005862fb <+55875>:	mov    0x48(%rsp),%ebx
0x00000000005862ff <+55879>:	sub    %ebx,%edx
0x0000000000586301 <+55881>:	js     0x586356 <_PyEval_EvalFrameDefault+55966>
0x0000000000586303 <+55883>:	mov    0x20(%rbp),%rdi
0x0000000000586307 <+55887>:	movslq 0x4c(%rdi),%rdi
0x000000000058630b <+55891>:	lea    (%rcx,%rdi,8),%r8
0x000000000058630f <+55895>:	mov    %rsi,%rdi
0x0000000000586312 <+55898>:	sub    %r8,%rdi
0x0000000000586315 <+55901>:	sar    $0x3,%rdi
0x0000000000586319 <+55905>:	cmp    %edi,%edx
0x000000000058631b <+55907>:	jg     0x58636f <_PyEval_EvalFrameDefault+55991>
0x000000000058631d <+55909>:	mov    0x48(%rsp),%edx
0x0000000000586321 <+55913>:	sub    $0x2,%edx
0x0000000000586324 <+55916>:	movslq %edx,%rdx
0x0000000000586327 <+55919>:	lea    (%rsi,%rdx,8),%rdx
0x000000000058632b <+55923>:	sub    %rcx,%rdx
0x000000000058632e <+55926>:	sar    $0x3,%rdx
0x0000000000586332 <+55930>:	mov    %edx,0x40(%rbp)
0x0000000000586335 <+55933>:	add    $0x8,%r13
0x0000000000586339 <+55937>:	mov    %r13,0x38(%rbp)
0x000000000058633d <+55941>:	mov    %rbp,0x30(%rax)
0x0000000000586341 <+55945>:	mov    %rax,0xc8(%rsp)
0x0000000000586349 <+55953>:	mov    0x14(%rsp),%r14d
0x000000000058634e <+55958>:	mov    %rax,%rbp
0x0000000000586351 <+55961>:	jmp    0x57b1ae <_PyEval_EvalFrameDefault+10486>
0x0000000000586356 <+55966>:	mov    $0x7444e0,%ecx
0x000000000058635b <+55971>:	mov    $0x1300,%edx
0x0000000000586360 <+55976>:	mov    $0x74045c,%esi
0x0000000000586365 <+55981>:	mov    $0x740c57,%edi
0x000000000058636a <+55986>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058636f <+55991>:	mov    $0x7444e0,%ecx
0x0000000000586374 <+55996>:	mov    $0x1300,%edx
0x0000000000586379 <+56001>:	mov    $0x74045c,%esi
0x000000000058637e <+56006>:	mov    $0x740c66,%edi
0x0000000000586383 <+56011>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586388 <+56016>:	lea    0x2(%r13),%r15
0x000000000058638c <+56020>:	mov    %r13,0x38(%rbp)
0x0000000000586390 <+56024>:	cmpq   $0x0,0x20(%rsp)
0x0000000000586396 <+56030>:	jne    0x586492 <_PyEval_EvalFrameDefault+56282>
0x000000000058639c <+56036>:	mov    0x18(%rsp),%rax
0x00000000005863a1 <+56041>:	mov    0x10(%rax),%rax
0x00000000005863a5 <+56045>:	cmpq   $0x0,0x590(%rax)
0x00000000005863ad <+56053>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005863b3 <+56059>:	mov    $0xfffffffe,%eax
0x00000000005863b8 <+56064>:	mov    0x8(%rsp),%ecx
0x00000000005863bc <+56068>:	sub    %ecx,%eax
0x00000000005863be <+56070>:	cltq
0x00000000005863c0 <+56072>:	cmpq   $0x0,(%rbx,%rax,8)
0x00000000005863c5 <+56077>:	setne  %al
0x00000000005863c8 <+56080>:	movzbl %al,%eax
0x00000000005863cb <+56083>:	mov    %eax,0x48(%rsp)
0x00000000005863cf <+56087>:	lea    (%rcx,%rax,1),%r14d
0x00000000005863d3 <+56091>:	mov    %r14d,%eax
0x00000000005863d6 <+56094>:	not    %eax
0x00000000005863d8 <+56096>:	cltq
0x00000000005863da <+56098>:	mov    (%rbx,%rax,8),%rcx
0x00000000005863de <+56102>:	mov    %rcx,0x50(%rsp)
0x00000000005863e3 <+56107>:	cmpq   $0x991540,0x8(%rcx)
0x00000000005863eb <+56115>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005863f1 <+56121>:	movzwl 0x4(%r13),%eax
0x00000000005863f6 <+56126>:	movzwl 0x6(%r13),%edx
0x00000000005863fb <+56131>:	shl    $0x10,%edx
0x00000000005863fe <+56134>:	or     %edx,%eax
0x0000000000586400 <+56136>:	cmp    %eax,0x80(%rcx)
0x0000000000586406 <+56142>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058640c <+56148>:	mov    0x30(%rcx),%rax
0x0000000000586410 <+56152>:	mov    %rax,0x58(%rsp)
0x0000000000586415 <+56157>:	cmp    %r14d,0x38(%rax)
0x0000000000586419 <+56161>:	jl     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058641f <+56167>:	movzwl 0x8(%r13),%eax
0x0000000000586424 <+56172>:	mov    %eax,0x60(%rsp)
0x0000000000586428 <+56176>:	cmp    %eax,%r14d
0x000000000058642b <+56179>:	jl     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586431 <+56185>:	mov    %rcx,%rsi
0x0000000000586434 <+56188>:	mov    0x18(%rsp),%rdi
0x0000000000586439 <+56193>:	call   0x5a52d2 <_PyFrame_Push>
0x000000000058643e <+56198>:	test   %rax,%rax
0x0000000000586441 <+56201>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000586447 <+56207>:	test   %r14d,%r14d
0x000000000058644a <+56210>:	js     0x5864ab <_PyEval_EvalFrameDefault+56307>
0x000000000058644c <+56212>:	lea    0x48(%rbp),%rcx
0x0000000000586450 <+56216>:	mov    0x20(%rbp),%rdx
0x0000000000586454 <+56220>:	movslq 0x4c(%rdx),%rdx
0x0000000000586458 <+56224>:	lea    (%rcx,%rdx,8),%rsi
0x000000000058645c <+56228>:	mov    %rbx,%rdx
0x000000000058645f <+56231>:	sub    %rsi,%rdx
0x0000000000586462 <+56234>:	sar    $0x3,%rdx
0x0000000000586466 <+56238>:	cmp    %r14d,%edx
0x0000000000586469 <+56241>:	jl     0x5864c4 <_PyEval_EvalFrameDefault+56332>
0x000000000058646b <+56243>:	mov    %r14d,%edx
0x000000000058646e <+56246>:	neg    %edx
0x0000000000586470 <+56248>:	movslq %edx,%rdx
0x0000000000586473 <+56251>:	lea    (%rbx,%rdx,8),%rsi
0x0000000000586477 <+56255>:	mov    $0x0,%edx
0x000000000058647c <+56260>:	cmp    %r14d,%edx
0x000000000058647f <+56263>:	jge    0x5864f6 <_PyEval_EvalFrameDefault+56382>
0x0000000000586481 <+56265>:	movslq %edx,%rdi
0x0000000000586484 <+56268>:	mov    (%rsi,%rdi,8),%r8
0x0000000000586488 <+56272>:	mov    %r8,0x48(%rax,%rdi,8)
0x000000000058648d <+56277>:	add    $0x1,%edx
0x0000000000586490 <+56280>:	jmp    0x58647c <_PyEval_EvalFrameDefault+56260>
0x0000000000586492 <+56282>:	mov    $0x7444e0,%ecx
0x0000000000586497 <+56287>:	mov    $0x130a,%edx
0x000000000058649c <+56292>:	mov    $0x74045c,%esi
0x00000000005864a1 <+56297>:	mov    $0x740c10,%edi
0x00000000005864a6 <+56302>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005864ab <+56307>:	mov    $0x7444e0,%ecx
0x00000000005864b0 <+56312>:	mov    $0x131d,%edx
0x00000000005864b5 <+56317>:	mov    $0x74045c,%esi
0x00000000005864ba <+56322>:	mov    $0x740c81,%edi
0x00000000005864bf <+56327>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005864c4 <+56332>:	mov    $0x7444e0,%ecx
0x00000000005864c9 <+56337>:	mov    $0x131d,%edx
0x00000000005864ce <+56342>:	mov    $0x74045c,%esi
0x00000000005864d3 <+56347>:	mov    $0x740c8f,%edi
0x00000000005864d8 <+56352>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005864dd <+56357>:	mov    $0x7444e0,%ecx
0x00000000005864e2 <+56362>:	mov    $0x1322,%edx
0x00000000005864e7 <+56367>:	mov    $0x74045c,%esi
0x00000000005864ec <+56372>:	mov    $0x742620,%edi
0x00000000005864f1 <+56377>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005864f6 <+56382>:	mov    0x58(%rsp),%rbx
0x00000000005864fb <+56387>:	mov    0x38(%rbx),%edx
0x00000000005864fe <+56390>:	cmp    %r14d,%edx
0x0000000000586501 <+56393>:	jle    0x586559 <_PyEval_EvalFrameDefault+56481>
0x0000000000586503 <+56395>:	mov    0x50(%rsp),%rbx
0x0000000000586508 <+56400>:	mov    0x38(%rbx),%rdi
0x000000000058650c <+56404>:	mov    0x8(%rdi),%rdx
0x0000000000586510 <+56408>:	testb  $0x4,0xab(%rdx)
0x0000000000586517 <+56415>:	je     0x5864dd <_PyEval_EvalFrameDefault+56357>
0x0000000000586519 <+56417>:	mov    %r14d,%edx
0x000000000058651c <+56420>:	mov    0x60(%rsp),%ebx
0x0000000000586520 <+56424>:	sub    %ebx,%edx
0x0000000000586522 <+56426>:	movslq %edx,%rdx
0x0000000000586525 <+56429>:	mov    0x18(%rdi,%rdx,8),%rdx
0x000000000058652a <+56434>:	addq   $0x1,0x53d556(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000586532 <+56442>:	mov    (%rdx),%rbx
0x0000000000586535 <+56445>:	lea    0x1(%rbx),%rdi
0x0000000000586539 <+56449>:	mov    %rdi,(%rdx)
0x000000000058653c <+56452>:	movslq %r14d,%rdi
0x000000000058653f <+56455>:	mov    %rdx,0x48(%rax,%rdi,8)
0x0000000000586544 <+56460>:	add    $0x1,%r14d
0x0000000000586548 <+56464>:	jmp    0x5864f6 <_PyEval_EvalFrameDefault+56382>
0x000000000058654a <+56466>:	movslq %edx,%rdi
0x000000000058654d <+56469>:	movq   $0x0,0x48(%rax,%rdi,8)
0x0000000000586556 <+56478>:	add    $0x1,%edx
0x0000000000586559 <+56481>:	mov    0x58(%rsp),%rbx
0x000000000058655e <+56486>:	cmp    %edx,0x4c(%rbx)
0x0000000000586561 <+56489>:	jg     0x58654a <_PyEval_EvalFrameDefault+56466>
0x0000000000586563 <+56491>:	mov    $0x2,%edx
0x0000000000586568 <+56496>:	mov    0x48(%rsp),%ebx
0x000000000058656c <+56500>:	sub    %ebx,%edx
0x000000000058656e <+56502>:	js     0x5865c3 <_PyEval_EvalFrameDefault+56587>
0x0000000000586570 <+56504>:	mov    0x20(%rbp),%rdi
0x0000000000586574 <+56508>:	movslq 0x4c(%rdi),%rdi
0x0000000000586578 <+56512>:	lea    (%rcx,%rdi,8),%r8
0x000000000058657c <+56516>:	mov    %rsi,%rdi
0x000000000058657f <+56519>:	sub    %r8,%rdi
0x0000000000586582 <+56522>:	sar    $0x3,%rdi
0x0000000000586586 <+56526>:	cmp    %edi,%edx
0x0000000000586588 <+56528>:	jg     0x5865dc <_PyEval_EvalFrameDefault+56612>
0x000000000058658a <+56530>:	mov    0x48(%rsp),%edx
0x000000000058658e <+56534>:	sub    $0x2,%edx
0x0000000000586591 <+56537>:	movslq %edx,%rdx
0x0000000000586594 <+56540>:	lea    (%rsi,%rdx,8),%rdx
0x0000000000586598 <+56544>:	sub    %rcx,%rdx
0x000000000058659b <+56547>:	sar    $0x3,%rdx
0x000000000058659f <+56551>:	mov    %edx,0x40(%rbp)
0x00000000005865a2 <+56554>:	add    $0x8,%r13
0x00000000005865a6 <+56558>:	mov    %r13,0x38(%rbp)
0x00000000005865aa <+56562>:	mov    %rbp,0x30(%rax)
0x00000000005865ae <+56566>:	mov    %rax,0xc8(%rsp)
0x00000000005865b6 <+56574>:	mov    0x14(%rsp),%r14d
0x00000000005865bb <+56579>:	mov    %rax,%rbp
0x00000000005865be <+56582>:	jmp    0x57b1ae <_PyEval_EvalFrameDefault+10486>
0x00000000005865c3 <+56587>:	mov    $0x7444e0,%ecx
0x00000000005865c8 <+56592>:	mov    $0x132a,%edx
0x00000000005865cd <+56597>:	mov    $0x74045c,%esi
0x00000000005865d2 <+56602>:	mov    $0x740c57,%edi
0x00000000005865d7 <+56607>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005865dc <+56612>:	mov    $0x7444e0,%ecx
0x00000000005865e1 <+56617>:	mov    $0x132a,%edx
0x00000000005865e6 <+56622>:	mov    $0x74045c,%esi
0x00000000005865eb <+56627>:	mov    $0x740c66,%edi
0x00000000005865f0 <+56632>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005865f5 <+56637>:	lea    0x2(%r13),%r15
0x00000000005865f9 <+56641>:	mov    %r13,0x38(%rbp)
0x00000000005865fd <+56645>:	cmpq   $0x0,0x20(%rsp)
0x0000000000586603 <+56651>:	jne    0x586705 <_PyEval_EvalFrameDefault+56909>
0x0000000000586609 <+56657>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000586611 <+56665>:	jne    0x58671e <_PyEval_EvalFrameDefault+56934>
0x0000000000586617 <+56671>:	cmpl   $0x1,0x8(%rsp)
0x000000000058661c <+56676>:	jne    0x586737 <_PyEval_EvalFrameDefault+56959>
0x0000000000586622 <+56682>:	cmpq   $0x0,-0x18(%rbx)
0x0000000000586627 <+56687>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058662d <+56693>:	mov    -0x8(%rbx),%r14
0x0000000000586631 <+56697>:	mov    -0x10(%rbx),%rdx
0x0000000000586635 <+56701>:	cmp    $0x99b4e0,%rdx
0x000000000058663c <+56708>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586642 <+56714>:	lea    0xe(%r13),%r15
0x0000000000586646 <+56718>:	mov    0x8(%r14),%r12
0x000000000058664a <+56722>:	addq   $0x1,0x53d436(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000586652 <+56730>:	mov    (%r12),%rax
0x0000000000586656 <+56734>:	add    $0x1,%rax
0x000000000058665a <+56738>:	mov    %rax,(%r12)
0x000000000058665e <+56742>:	mov    $0x133e,%esi
0x0000000000586663 <+56747>:	mov    $0x74045c,%edi
0x0000000000586668 <+56752>:	call   0x573c83 <Py_DECREF>
0x000000000058666d <+56757>:	mov    %r14,%rdx
0x0000000000586670 <+56760>:	mov    $0x133f,%esi
0x0000000000586675 <+56765>:	mov    $0x74045c,%edi
0x000000000058667a <+56770>:	call   0x573c83 <Py_DECREF>
0x000000000058667f <+56775>:	mov    0x20(%rbp),%rax
0x0000000000586683 <+56779>:	movslq 0x4c(%rax),%rax
0x0000000000586687 <+56783>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058668c <+56788>:	mov    %rbx,%rax
0x000000000058668f <+56791>:	sub    %rdx,%rax
0x0000000000586692 <+56794>:	sar    $0x3,%rax
0x0000000000586696 <+56798>:	cmp    $0x1,%eax
0x0000000000586699 <+56801>:	jle    0x586750 <_PyEval_EvalFrameDefault+56984>
0x000000000058669f <+56807>:	sub    $0x10,%rbx
0x00000000005866a3 <+56811>:	mov    %r12,-0x8(%rbx)
0x00000000005866a7 <+56815>:	movzwl 0xe(%r13),%r12d
0x00000000005866ac <+56820>:	mov    %r12d,%eax
0x00000000005866af <+56823>:	shr    $0x8,%ax
0x00000000005866b3 <+56827>:	movzwl %ax,%eax
0x00000000005866b6 <+56830>:	mov    %eax,0x8(%rsp)
0x00000000005866ba <+56834>:	cmpl   $0x0,0x14(%rsp)
0x00000000005866bf <+56839>:	jne    0x586769 <_PyEval_EvalFrameDefault+57009>
0x00000000005866c5 <+56845>:	movzbl 0xc0(%rsp),%eax
0x00000000005866cd <+56853>:	lea    -0x1(%rax),%edx
0x00000000005866d0 <+56856>:	cmp    $0xfd,%dl
0x00000000005866d3 <+56859>:	jbe    0x58677c <_PyEval_EvalFrameDefault+57028>
0x00000000005866d9 <+56865>:	cmpw   $0x0,0x538d6b(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005866e1 <+56873>:	jne    0x586795 <_PyEval_EvalFrameDefault+57053>
0x00000000005866e7 <+56879>:	mov    $0x0,%edx
0x00000000005866ec <+56884>:	or     %edx,%eax
0x00000000005866ee <+56886>:	or     %eax,%r12d
0x00000000005866f1 <+56889>:	movzbl %r12b,%eax
0x00000000005866f5 <+56893>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005866fd <+56901>:	mov    %r15,%r13
0x0000000000586700 <+56904>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000586705 <+56909>:	mov    $0x7444e0,%ecx
0x000000000058670a <+56914>:	mov    $0x1334,%edx
0x000000000058670f <+56919>:	mov    $0x74045c,%esi
0x0000000000586714 <+56924>:	mov    $0x740c10,%edi
0x0000000000586719 <+56929>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058671e <+56934>:	mov    $0x7444e0,%ecx
0x0000000000586723 <+56939>:	mov    $0x1335,%edx
0x0000000000586728 <+56944>:	mov    $0x74045c,%esi
0x000000000058672d <+56949>:	mov    $0x7408ff,%edi
0x0000000000586732 <+56954>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586737 <+56959>:	mov    $0x7444e0,%ecx
0x000000000058673c <+56964>:	mov    $0x1336,%edx
0x0000000000586741 <+56969>:	mov    $0x74045c,%esi
0x0000000000586746 <+56974>:	mov    $0x740d22,%edi
0x000000000058674b <+56979>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586750 <+56984>:	mov    $0x7444e0,%ecx
0x0000000000586755 <+56989>:	mov    $0x1340,%edx
0x000000000058675a <+56994>:	mov    $0x74045c,%esi
0x000000000058675f <+56999>:	mov    $0x74092c,%edi
0x0000000000586764 <+57004>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586769 <+57009>:	mov    %r15,%rdx
0x000000000058676c <+57012>:	mov    %rbx,%rsi
0x000000000058676f <+57015>:	mov    %rbp,%rdi
0x0000000000586772 <+57018>:	call   0x573f7b <lltrace_instruction>
0x0000000000586777 <+57023>:	jmp    0x5866c5 <_PyEval_EvalFrameDefault+56845>
0x000000000058677c <+57028>:	mov    $0x7444e0,%ecx
0x0000000000586781 <+57033>:	mov    $0x1342,%edx
0x0000000000586786 <+57038>:	mov    $0x74045c,%esi
0x000000000058678b <+57043>:	mov    $0x742a50,%edi
0x0000000000586790 <+57048>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586795 <+57053>:	mov    $0xffffffff,%edx
0x000000000058679a <+57058>:	jmp    0x5866ec <_PyEval_EvalFrameDefault+56884>
0x000000000058679f <+57063>:	lea    0x2(%r13),%r15
0x00000000005867a3 <+57067>:	mov    %r13,0x38(%rbp)
0x00000000005867a7 <+57071>:	cmpq   $0x0,0x20(%rsp)
0x00000000005867ad <+57077>:	jne    0x5868bd <_PyEval_EvalFrameDefault+57349>
0x00000000005867b3 <+57083>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005867bb <+57091>:	jne    0x5868d6 <_PyEval_EvalFrameDefault+57374>
0x00000000005867c1 <+57097>:	cmpl   $0x1,0x8(%rsp)
0x00000000005867c6 <+57102>:	jne    0x5868ef <_PyEval_EvalFrameDefault+57399>
0x00000000005867cc <+57108>:	cmpq   $0x0,-0x18(%rbx)
0x00000000005867d1 <+57113>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005867d7 <+57119>:	cmpq   $0x99c300,-0x10(%rbx)
0x00000000005867df <+57127>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005867e5 <+57133>:	lea    0xe(%r13),%r15
0x00000000005867e9 <+57137>:	mov    -0x8(%rbx),%r14
0x00000000005867ed <+57141>:	mov    %r14,%rdi
0x00000000005867f0 <+57144>:	call   0x4f0476 <PyObject_Str>
0x00000000005867f5 <+57149>:	mov    %rax,%r12
0x00000000005867f8 <+57152>:	mov    %r14,%rdx
0x00000000005867fb <+57155>:	mov    $0x1350,%esi
0x0000000000586800 <+57160>:	mov    $0x74045c,%edi
0x0000000000586805 <+57165>:	call   0x573c83 <Py_DECREF>
0x000000000058680a <+57170>:	mov    $0x99c300,%edx
0x000000000058680f <+57175>:	mov    $0x1351,%esi
0x0000000000586814 <+57180>:	mov    $0x74045c,%edi
0x0000000000586819 <+57185>:	call   0x573c83 <Py_DECREF>
0x000000000058681e <+57190>:	mov    0x20(%rbp),%rax
0x0000000000586822 <+57194>:	movslq 0x4c(%rax),%rax
0x0000000000586826 <+57198>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058682b <+57203>:	mov    %rbx,%rax
0x000000000058682e <+57206>:	sub    %rdx,%rax
0x0000000000586831 <+57209>:	sar    $0x3,%rax
0x0000000000586835 <+57213>:	cmp    $0x1,%eax
0x0000000000586838 <+57216>:	jle    0x586908 <_PyEval_EvalFrameDefault+57424>
0x000000000058683e <+57222>:	sub    $0x10,%rbx
0x0000000000586842 <+57226>:	mov    %r12,-0x8(%rbx)
0x0000000000586846 <+57230>:	test   %r12,%r12
0x0000000000586849 <+57233>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058684f <+57239>:	mov    0x28(%rsp),%rax
0x0000000000586854 <+57244>:	mov    0x64(%rax),%eax
0x0000000000586857 <+57247>:	test   %eax,%eax
0x0000000000586859 <+57249>:	jne    0x578b65 <_PyEval_EvalFrameDefault+685>
0x000000000058685f <+57255>:	movzwl 0xe(%r13),%r12d
0x0000000000586864 <+57260>:	mov    %r12d,%eax
0x0000000000586867 <+57263>:	shr    $0x8,%ax
0x000000000058686b <+57267>:	movzwl %ax,%eax
0x000000000058686e <+57270>:	mov    %eax,0x8(%rsp)
0x0000000000586872 <+57274>:	cmpl   $0x0,0x14(%rsp)
0x0000000000586877 <+57279>:	jne    0x586921 <_PyEval_EvalFrameDefault+57449>
0x000000000058687d <+57285>:	movzbl 0xc0(%rsp),%eax
0x0000000000586885 <+57293>:	lea    -0x1(%rax),%edx
0x0000000000586888 <+57296>:	cmp    $0xfd,%dl
0x000000000058688b <+57299>:	jbe    0x586934 <_PyEval_EvalFrameDefault+57468>
0x0000000000586891 <+57305>:	cmpw   $0x0,0x538bb3(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000586899 <+57313>:	jne    0x58694d <_PyEval_EvalFrameDefault+57493>
0x000000000058689f <+57319>:	mov    $0x0,%edx
0x00000000005868a4 <+57324>:	or     %edx,%eax
0x00000000005868a6 <+57326>:	or     %eax,%r12d
0x00000000005868a9 <+57329>:	movzbl %r12b,%eax
0x00000000005868ad <+57333>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005868b5 <+57341>:	mov    %r15,%r13
0x00000000005868b8 <+57344>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005868bd <+57349>:	mov    $0x7444e0,%ecx
0x00000000005868c2 <+57354>:	mov    $0x1346,%edx
0x00000000005868c7 <+57359>:	mov    $0x74045c,%esi
0x00000000005868cc <+57364>:	mov    $0x740c10,%edi
0x00000000005868d1 <+57369>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005868d6 <+57374>:	mov    $0x7444e0,%ecx
0x00000000005868db <+57379>:	mov    $0x1347,%edx
0x00000000005868e0 <+57384>:	mov    $0x74045c,%esi
0x00000000005868e5 <+57389>:	mov    $0x7408ff,%edi
0x00000000005868ea <+57394>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005868ef <+57399>:	mov    $0x7444e0,%ecx
0x00000000005868f4 <+57404>:	mov    $0x1348,%edx
0x00000000005868f9 <+57409>:	mov    $0x74045c,%esi
0x00000000005868fe <+57414>:	mov    $0x740d22,%edi
0x0000000000586903 <+57419>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586908 <+57424>:	mov    $0x7444e0,%ecx
0x000000000058690d <+57429>:	mov    $0x1352,%edx
0x0000000000586912 <+57434>:	mov    $0x74045c,%esi
0x0000000000586917 <+57439>:	mov    $0x74092c,%edi
0x000000000058691c <+57444>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586921 <+57449>:	mov    %r15,%rdx
0x0000000000586924 <+57452>:	mov    %rbx,%rsi
0x0000000000586927 <+57455>:	mov    %rbp,%rdi
0x000000000058692a <+57458>:	call   0x573f7b <lltrace_instruction>
0x000000000058692f <+57463>:	jmp    0x58687d <_PyEval_EvalFrameDefault+57285>
0x0000000000586934 <+57468>:	mov    $0x7444e0,%ecx
0x0000000000586939 <+57473>:	mov    $0x1358,%edx
0x000000000058693e <+57478>:	mov    $0x74045c,%esi
0x0000000000586943 <+57483>:	mov    $0x742a50,%edi
0x0000000000586948 <+57488>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058694d <+57493>:	mov    $0xffffffff,%edx
0x0000000000586952 <+57498>:	jmp    0x5868a4 <_PyEval_EvalFrameDefault+57324>
0x0000000000586957 <+57503>:	lea    0x2(%r13),%r15
0x000000000058695b <+57507>:	mov    %r13,0x38(%rbp)
0x000000000058695f <+57511>:	cmpq   $0x0,0x20(%rsp)
0x0000000000586965 <+57517>:	jne    0x586a67 <_PyEval_EvalFrameDefault+57775>
0x000000000058696b <+57523>:	cmpl   $0x1,0x8(%rsp)
0x0000000000586970 <+57528>:	jne    0x586a80 <_PyEval_EvalFrameDefault+57800>
0x0000000000586976 <+57534>:	cmpq   $0x0,-0x18(%rbx)
0x000000000058697b <+57539>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586981 <+57545>:	cmpq   $0x999820,-0x10(%rbx)
0x0000000000586989 <+57553>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058698f <+57559>:	lea    0xe(%r13),%r15
0x0000000000586993 <+57563>:	mov    -0x8(%rbx),%r14
0x0000000000586997 <+57567>:	mov    %r14,%rdi
0x000000000058699a <+57570>:	call   0x4940e3 <PySequence_Tuple>
0x000000000058699f <+57575>:	mov    %rax,%r12
0x00000000005869a2 <+57578>:	mov    %r14,%rdx
0x00000000005869a5 <+57581>:	mov    $0x1365,%esi
0x00000000005869aa <+57586>:	mov    $0x74045c,%edi
0x00000000005869af <+57591>:	call   0x573c83 <Py_DECREF>
0x00000000005869b4 <+57596>:	mov    $0x999820,%edx
0x00000000005869b9 <+57601>:	mov    $0x1366,%esi
0x00000000005869be <+57606>:	mov    $0x74045c,%edi
0x00000000005869c3 <+57611>:	call   0x573c83 <Py_DECREF>
0x00000000005869c8 <+57616>:	mov    0x20(%rbp),%rax
0x00000000005869cc <+57620>:	movslq 0x4c(%rax),%rax
0x00000000005869d0 <+57624>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005869d5 <+57629>:	mov    %rbx,%rax
0x00000000005869d8 <+57632>:	sub    %rdx,%rax
0x00000000005869db <+57635>:	sar    $0x3,%rax
0x00000000005869df <+57639>:	cmp    $0x1,%eax
0x00000000005869e2 <+57642>:	jle    0x586a99 <_PyEval_EvalFrameDefault+57825>
0x00000000005869e8 <+57648>:	sub    $0x10,%rbx
0x00000000005869ec <+57652>:	mov    %r12,-0x8(%rbx)
0x00000000005869f0 <+57656>:	test   %r12,%r12
0x00000000005869f3 <+57659>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005869f9 <+57665>:	mov    0x28(%rsp),%rax
0x00000000005869fe <+57670>:	mov    0x64(%rax),%eax
0x0000000000586a01 <+57673>:	test   %eax,%eax
0x0000000000586a03 <+57675>:	jne    0x578b6a <_PyEval_EvalFrameDefault+690>
0x0000000000586a09 <+57681>:	movzwl 0xe(%r13),%r12d
0x0000000000586a0e <+57686>:	mov    %r12d,%eax
0x0000000000586a11 <+57689>:	shr    $0x8,%ax
0x0000000000586a15 <+57693>:	movzwl %ax,%eax
0x0000000000586a18 <+57696>:	mov    %eax,0x8(%rsp)
0x0000000000586a1c <+57700>:	cmpl   $0x0,0x14(%rsp)
0x0000000000586a21 <+57705>:	jne    0x586ab2 <_PyEval_EvalFrameDefault+57850>
0x0000000000586a27 <+57711>:	movzbl 0xc0(%rsp),%eax
0x0000000000586a2f <+57719>:	lea    -0x1(%rax),%edx
0x0000000000586a32 <+57722>:	cmp    $0xfd,%dl
0x0000000000586a35 <+57725>:	jbe    0x586ac5 <_PyEval_EvalFrameDefault+57869>
0x0000000000586a3b <+57731>:	cmpw   $0x0,0x538a09(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000586a43 <+57739>:	jne    0x586ade <_PyEval_EvalFrameDefault+57894>
0x0000000000586a49 <+57745>:	mov    $0x0,%edx
0x0000000000586a4e <+57750>:	or     %edx,%eax
0x0000000000586a50 <+57752>:	or     %eax,%r12d
0x0000000000586a53 <+57755>:	movzbl %r12b,%eax
0x0000000000586a57 <+57759>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000586a5f <+57767>:	mov    %r15,%r13
0x0000000000586a62 <+57770>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000586a67 <+57775>:	mov    $0x7444e0,%ecx
0x0000000000586a6c <+57780>:	mov    $0x135c,%edx
0x0000000000586a71 <+57785>:	mov    $0x74045c,%esi
0x0000000000586a76 <+57790>:	mov    $0x740c10,%edi
0x0000000000586a7b <+57795>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586a80 <+57800>:	mov    $0x7444e0,%ecx
0x0000000000586a85 <+57805>:	mov    $0x135d,%edx
0x0000000000586a8a <+57810>:	mov    $0x74045c,%esi
0x0000000000586a8f <+57815>:	mov    $0x740d22,%edi
0x0000000000586a94 <+57820>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586a99 <+57825>:	mov    $0x7444e0,%ecx
0x0000000000586a9e <+57830>:	mov    $0x1367,%edx
0x0000000000586aa3 <+57835>:	mov    $0x74045c,%esi
0x0000000000586aa8 <+57840>:	mov    $0x74092c,%edi
0x0000000000586aad <+57845>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586ab2 <+57850>:	mov    %r15,%rdx
0x0000000000586ab5 <+57853>:	mov    %rbx,%rsi
0x0000000000586ab8 <+57856>:	mov    %rbp,%rdi
0x0000000000586abb <+57859>:	call   0x573f7b <lltrace_instruction>
0x0000000000586ac0 <+57864>:	jmp    0x586a27 <_PyEval_EvalFrameDefault+57711>
0x0000000000586ac5 <+57869>:	mov    $0x7444e0,%ecx
0x0000000000586aca <+57874>:	mov    $0x136d,%edx
0x0000000000586acf <+57879>:	mov    $0x74045c,%esi
0x0000000000586ad4 <+57884>:	mov    $0x742a50,%edi
0x0000000000586ad9 <+57889>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586ade <+57894>:	mov    $0xffffffff,%edx
0x0000000000586ae3 <+57899>:	jmp    0x586a4e <_PyEval_EvalFrameDefault+57750>
0x0000000000586ae8 <+57904>:	lea    0x2(%r13),%r15
0x0000000000586aec <+57908>:	mov    %r13,0x38(%rbp)
0x0000000000586af0 <+57912>:	mov    $0xfffffffe,%eax
0x0000000000586af5 <+57917>:	mov    0x8(%rsp),%ecx
0x0000000000586af9 <+57921>:	sub    %ecx,%eax
0x0000000000586afb <+57923>:	cltq
0x0000000000586afd <+57925>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000586b02 <+57930>:	setne  %al
0x0000000000586b05 <+57933>:	movzbl %al,%eax
0x0000000000586b08 <+57936>:	mov    %eax,0x48(%rsp)
0x0000000000586b0c <+57940>:	lea    (%rcx,%rax,1),%r14d
0x0000000000586b10 <+57944>:	mov    0x20(%rsp),%rdi
0x0000000000586b15 <+57949>:	mov    %rdi,0x58(%rsp)
0x0000000000586b1a <+57954>:	test   %rdi,%rdi
0x0000000000586b1d <+57957>:	je     0x586bc1 <_PyEval_EvalFrameDefault+58121>
0x0000000000586b23 <+57963>:	call   0x573476 <PyTuple_GET_SIZE>
0x0000000000586b28 <+57968>:	mov    %eax,%ecx
0x0000000000586b2a <+57970>:	mov    %r14d,%eax
0x0000000000586b2d <+57973>:	not    %eax
0x0000000000586b2f <+57975>:	cltq
0x0000000000586b31 <+57977>:	mov    (%rbx,%rax,8),%rsi
0x0000000000586b35 <+57981>:	mov    %rsi,0x50(%rsp)
0x0000000000586b3a <+57986>:	mov    0x8(%rsi),%rax
0x0000000000586b3e <+57990>:	testb  $0x80,0xab(%rax)
0x0000000000586b45 <+57997>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586b4b <+58003>:	mov    0x190(%rsi),%r8
0x0000000000586b52 <+58010>:	test   %r8,%r8
0x0000000000586b55 <+58013>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586b5b <+58019>:	lea    0xe(%r13),%r15
0x0000000000586b5f <+58023>:	test   %r14d,%r14d
0x0000000000586b62 <+58026>:	js     0x586bcb <_PyEval_EvalFrameDefault+58131>
0x0000000000586b64 <+58028>:	lea    0x48(%rbp),%rsi
0x0000000000586b68 <+58032>:	mov    %rsi,0x60(%rsp)
0x0000000000586b6d <+58037>:	mov    0x20(%rbp),%rax
0x0000000000586b71 <+58041>:	movslq 0x4c(%rax),%rax
0x0000000000586b75 <+58045>:	lea    (%rsi,%rax,8),%rdx
0x0000000000586b79 <+58049>:	mov    %rbx,%rax
0x0000000000586b7c <+58052>:	sub    %rdx,%rax
0x0000000000586b7f <+58055>:	sar    $0x3,%rax
0x0000000000586b83 <+58059>:	cmp    %r14d,%eax
0x0000000000586b86 <+58062>:	jl     0x586be4 <_PyEval_EvalFrameDefault+58156>
0x0000000000586b88 <+58064>:	mov    %r14d,%eax
0x0000000000586b8b <+58067>:	neg    %eax
0x0000000000586b8d <+58069>:	cltq
0x0000000000586b8f <+58071>:	lea    (%rbx,%rax,8),%rbx
0x0000000000586b93 <+58075>:	mov    %r14d,%edx
0x0000000000586b96 <+58078>:	sub    %ecx,%edx
0x0000000000586b98 <+58080>:	movslq %edx,%rdx
0x0000000000586b9b <+58083>:	mov    0x58(%rsp),%rcx
0x0000000000586ba0 <+58088>:	mov    %rbx,%rsi
0x0000000000586ba3 <+58091>:	mov    0x50(%rsp),%rdi
0x0000000000586ba8 <+58096>:	call   *%r8
0x0000000000586bab <+58099>:	mov    %rax,0x8(%rsp)
0x0000000000586bb0 <+58104>:	movq   $0x0,0x20(%rsp)
0x0000000000586bb9 <+58113>:	mov    $0x0,%r12d
0x0000000000586bbf <+58119>:	jmp    0x586c17 <_PyEval_EvalFrameDefault+58207>
0x0000000000586bc1 <+58121>:	mov    $0x0,%ecx
0x0000000000586bc6 <+58126>:	jmp    0x586b2a <_PyEval_EvalFrameDefault+57970>
0x0000000000586bcb <+58131>:	mov    $0x7444e0,%ecx
0x0000000000586bd0 <+58136>:	mov    $0x137a,%edx
0x0000000000586bd5 <+58141>:	mov    $0x74045c,%esi
0x0000000000586bda <+58146>:	mov    $0x740c2b,%edi
0x0000000000586bdf <+58151>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586be4 <+58156>:	mov    $0x7444e0,%ecx
0x0000000000586be9 <+58161>:	mov    $0x137a,%edx
0x0000000000586bee <+58166>:	mov    $0x74045c,%esi
0x0000000000586bf3 <+58171>:	mov    $0x740c3b,%edi
0x0000000000586bf8 <+58176>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586bfd <+58181>:	movslq %r12d,%rax
0x0000000000586c00 <+58184>:	mov    (%rbx,%rax,8),%rdx
0x0000000000586c04 <+58188>:	mov    $0x1380,%esi
0x0000000000586c09 <+58193>:	mov    $0x74045c,%edi
0x0000000000586c0e <+58198>:	call   0x573c83 <Py_DECREF>
0x0000000000586c13 <+58203>:	add    $0x1,%r12d
0x0000000000586c17 <+58207>:	cmp    %r14d,%r12d
0x0000000000586c1a <+58210>:	jl     0x586bfd <_PyEval_EvalFrameDefault+58181>
0x0000000000586c1c <+58212>:	mov    0x50(%rsp),%rdx
0x0000000000586c21 <+58217>:	mov    $0x1382,%esi
0x0000000000586c26 <+58222>:	mov    $0x74045c,%edi
0x0000000000586c2b <+58227>:	call   0x573c83 <Py_DECREF>
0x0000000000586c30 <+58232>:	mov    $0x1,%eax
0x0000000000586c35 <+58237>:	mov    0x48(%rsp),%ecx
0x0000000000586c39 <+58241>:	sub    %ecx,%eax
0x0000000000586c3b <+58243>:	js     0x586ce5 <_PyEval_EvalFrameDefault+58413>
0x0000000000586c41 <+58249>:	mov    0x20(%rbp),%rdx
0x0000000000586c45 <+58253>:	movslq 0x4c(%rdx),%rdx
0x0000000000586c49 <+58257>:	mov    0x60(%rsp),%rcx
0x0000000000586c4e <+58262>:	lea    (%rcx,%rdx,8),%rcx
0x0000000000586c52 <+58266>:	mov    %rbx,%rdx
0x0000000000586c55 <+58269>:	sub    %rcx,%rdx
0x0000000000586c58 <+58272>:	sar    $0x3,%rdx
0x0000000000586c5c <+58276>:	cmp    %edx,%eax
0x0000000000586c5e <+58278>:	jg     0x586cfe <_PyEval_EvalFrameDefault+58438>
0x0000000000586c64 <+58284>:	mov    0x48(%rsp),%eax
0x0000000000586c68 <+58288>:	sub    $0x1,%eax
0x0000000000586c6b <+58291>:	cltq
0x0000000000586c6d <+58293>:	lea    (%rbx,%rax,8),%rbx
0x0000000000586c71 <+58297>:	mov    0x8(%rsp),%rax
0x0000000000586c76 <+58302>:	mov    %rax,-0x8(%rbx)
0x0000000000586c7a <+58306>:	test   %rax,%rax
0x0000000000586c7d <+58309>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000586c83 <+58315>:	mov    0x28(%rsp),%rax
0x0000000000586c88 <+58320>:	mov    0x64(%rax),%eax
0x0000000000586c8b <+58323>:	test   %eax,%eax
0x0000000000586c8d <+58325>:	jne    0x578b6f <_PyEval_EvalFrameDefault+695>
0x0000000000586c93 <+58331>:	movzwl 0xe(%r13),%r12d
0x0000000000586c98 <+58336>:	mov    %r12d,%eax
0x0000000000586c9b <+58339>:	shr    $0x8,%ax
0x0000000000586c9f <+58343>:	movzwl %ax,%eax
0x0000000000586ca2 <+58346>:	mov    %eax,0x8(%rsp)
0x0000000000586ca6 <+58350>:	cmpl   $0x0,0x14(%rsp)
0x0000000000586cab <+58355>:	jne    0x586d17 <_PyEval_EvalFrameDefault+58463>
0x0000000000586cad <+58357>:	movzbl 0xc0(%rsp),%eax
0x0000000000586cb5 <+58365>:	lea    -0x1(%rax),%edx
0x0000000000586cb8 <+58368>:	cmp    $0xfd,%dl
0x0000000000586cbb <+58371>:	jbe    0x586d27 <_PyEval_EvalFrameDefault+58479>
0x0000000000586cbd <+58373>:	cmpw   $0x0,0x538787(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000586cc5 <+58381>:	jne    0x586d40 <_PyEval_EvalFrameDefault+58504>
0x0000000000586cc7 <+58383>:	mov    $0x0,%edx
0x0000000000586ccc <+58388>:	or     %edx,%eax
0x0000000000586cce <+58390>:	or     %eax,%r12d
0x0000000000586cd1 <+58393>:	movzbl %r12b,%eax
0x0000000000586cd5 <+58397>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000586cdd <+58405>:	mov    %r15,%r13
0x0000000000586ce0 <+58408>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000586ce5 <+58413>:	mov    $0x7444e0,%ecx
0x0000000000586cea <+58418>:	mov    $0x1383,%edx
0x0000000000586cef <+58423>:	mov    $0x74045c,%esi
0x0000000000586cf4 <+58428>:	mov    $0x740ca9,%edi
0x0000000000586cf9 <+58433>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586cfe <+58438>:	mov    $0x7444e0,%ecx
0x0000000000586d03 <+58443>:	mov    $0x1383,%edx
0x0000000000586d08 <+58448>:	mov    $0x74045c,%esi
0x0000000000586d0d <+58453>:	mov    $0x740cb8,%edi
0x0000000000586d12 <+58458>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586d17 <+58463>:	mov    %r15,%rdx
0x0000000000586d1a <+58466>:	mov    %rbx,%rsi
0x0000000000586d1d <+58469>:	mov    %rbp,%rdi
0x0000000000586d20 <+58472>:	call   0x573f7b <lltrace_instruction>
0x0000000000586d25 <+58477>:	jmp    0x586cad <_PyEval_EvalFrameDefault+58357>
0x0000000000586d27 <+58479>:	mov    $0x7444e0,%ecx
0x0000000000586d2c <+58484>:	mov    $0x1389,%edx
0x0000000000586d31 <+58489>:	mov    $0x74045c,%esi
0x0000000000586d36 <+58494>:	mov    $0x742a50,%edi
0x0000000000586d3b <+58499>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586d40 <+58504>:	mov    $0xffffffff,%edx
0x0000000000586d45 <+58509>:	jmp    0x586ccc <_PyEval_EvalFrameDefault+58388>
0x0000000000586d47 <+58511>:	lea    0x2(%r13),%r15
0x0000000000586d4b <+58515>:	mov    %r13,0x38(%rbp)
0x0000000000586d4f <+58519>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000586d57 <+58527>:	jne    0x586f0c <_PyEval_EvalFrameDefault+58964>
0x0000000000586d5d <+58533>:	cmpq   $0x0,0x20(%rsp)
0x0000000000586d63 <+58539>:	jne    0x586f25 <_PyEval_EvalFrameDefault+58989>
0x0000000000586d69 <+58545>:	mov    $0xfffffffe,%eax
0x0000000000586d6e <+58550>:	mov    0x8(%rsp),%ecx
0x0000000000586d72 <+58554>:	sub    %ecx,%eax
0x0000000000586d74 <+58556>:	cltq
0x0000000000586d76 <+58558>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000586d7b <+58563>:	setne  %al
0x0000000000586d7e <+58566>:	movzbl %al,%eax
0x0000000000586d81 <+58569>:	mov    %eax,0x48(%rsp)
0x0000000000586d85 <+58573>:	add    %ecx,%eax
0x0000000000586d87 <+58575>:	cmp    $0x1,%eax
0x0000000000586d8a <+58578>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586d90 <+58584>:	not    %eax
0x0000000000586d92 <+58586>:	cltq
0x0000000000586d94 <+58588>:	mov    (%rbx,%rax,8),%r14
0x0000000000586d98 <+58592>:	cmpq   $0x996400,0x8(%r14)
0x0000000000586da0 <+58600>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586da6 <+58606>:	mov    %r14,%rdi
0x0000000000586da9 <+58609>:	call   0x57473f <PyCFunction_GET_FLAGS>
0x0000000000586dae <+58614>:	cmp    $0x8,%eax
0x0000000000586db1 <+58617>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000586db7 <+58623>:	lea    0xe(%r13),%r15
0x0000000000586dbb <+58627>:	mov    %r14,%rdi
0x0000000000586dbe <+58630>:	call   0x574773 <PyCFunction_GET_FUNCTION>
0x0000000000586dc3 <+58635>:	mov    %rax,%r12
0x0000000000586dc6 <+58638>:	mov    $0x6db920,%esi
0x0000000000586dcb <+58643>:	mov    0x18(%rsp),%rdi
0x0000000000586dd0 <+58648>:	call   0x577d9b <_Py_EnterRecursiveCallTstate>
0x0000000000586dd5 <+58653>:	test   %eax,%eax
0x0000000000586dd7 <+58655>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000586ddd <+58661>:	mov    -0x8(%rbx),%rax
0x0000000000586de1 <+58665>:	mov    %rax,0x8(%rsp)
0x0000000000586de6 <+58670>:	mov    %r14,%rdi
0x0000000000586de9 <+58673>:	call   0x5747a8 <PyCFunction_GET_SELF>
0x0000000000586dee <+58678>:	mov    %rax,%rdi
0x0000000000586df1 <+58681>:	mov    0x8(%rsp),%rsi
0x0000000000586df6 <+58686>:	call   *%r12
0x0000000000586df9 <+58689>:	mov    %rax,%r12
0x0000000000586dfc <+58692>:	mov    0x18(%rsp),%rcx
0x0000000000586e01 <+58697>:	mov    0x20(%rcx),%eax
0x0000000000586e04 <+58700>:	mov    %eax,0x50(%rsp)
0x0000000000586e08 <+58704>:	add    $0x1,%eax
0x0000000000586e0b <+58707>:	mov    %eax,0x20(%rcx)
0x0000000000586e0e <+58710>:	test   %r12,%r12
0x0000000000586e11 <+58713>:	setne  0x50(%rsp)
0x0000000000586e16 <+58718>:	mov    %rcx,%rdi
0x0000000000586e19 <+58721>:	call   0x573630 <_PyErr_Occurred>
0x0000000000586e1e <+58726>:	test   %rax,%rax
0x0000000000586e21 <+58729>:	setne  %al
0x0000000000586e24 <+58732>:	cmp    %al,0x50(%rsp)
0x0000000000586e28 <+58736>:	je     0x586f3e <_PyEval_EvalFrameDefault+59014>
0x0000000000586e2e <+58742>:	mov    0x8(%rsp),%rdx
0x0000000000586e33 <+58747>:	mov    $0x13a3,%esi
0x0000000000586e38 <+58752>:	mov    $0x74045c,%edi
0x0000000000586e3d <+58757>:	call   0x573c83 <Py_DECREF>
0x0000000000586e42 <+58762>:	mov    %r14,%rdx
0x0000000000586e45 <+58765>:	mov    $0x13a4,%esi
0x0000000000586e4a <+58770>:	mov    $0x74045c,%edi
0x0000000000586e4f <+58775>:	call   0x573c83 <Py_DECREF>
0x0000000000586e54 <+58780>:	mov    $0x2,%eax
0x0000000000586e59 <+58785>:	mov    0x48(%rsp),%ecx
0x0000000000586e5d <+58789>:	sub    %ecx,%eax
0x0000000000586e5f <+58791>:	js     0x586f57 <_PyEval_EvalFrameDefault+59039>
0x0000000000586e65 <+58797>:	mov    0x20(%rbp),%rdx
0x0000000000586e69 <+58801>:	movslq 0x4c(%rdx),%rdx
0x0000000000586e6d <+58805>:	lea    0x48(%rbp,%rdx,8),%rcx
0x0000000000586e72 <+58810>:	mov    %rbx,%rdx
0x0000000000586e75 <+58813>:	sub    %rcx,%rdx
0x0000000000586e78 <+58816>:	sar    $0x3,%rdx
0x0000000000586e7c <+58820>:	cmp    %edx,%eax
0x0000000000586e7e <+58822>:	jg     0x586f70 <_PyEval_EvalFrameDefault+59064>
0x0000000000586e84 <+58828>:	mov    0x48(%rsp),%eax
0x0000000000586e88 <+58832>:	sub    $0x2,%eax
0x0000000000586e8b <+58835>:	cltq
0x0000000000586e8d <+58837>:	lea    (%rbx,%rax,8),%rbx
0x0000000000586e91 <+58841>:	mov    %r12,-0x8(%rbx)
0x0000000000586e95 <+58845>:	test   %r12,%r12
0x0000000000586e98 <+58848>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000586e9e <+58854>:	mov    0x28(%rsp),%rax
0x0000000000586ea3 <+58859>:	mov    0x64(%rax),%eax
0x0000000000586ea6 <+58862>:	test   %eax,%eax
0x0000000000586ea8 <+58864>:	jne    0x578b74 <_PyEval_EvalFrameDefault+700>
0x0000000000586eae <+58870>:	movzwl 0xe(%r13),%r12d
0x0000000000586eb3 <+58875>:	mov    %r12d,%eax
0x0000000000586eb6 <+58878>:	shr    $0x8,%ax
0x0000000000586eba <+58882>:	movzwl %ax,%eax
0x0000000000586ebd <+58885>:	mov    %eax,0x8(%rsp)
0x0000000000586ec1 <+58889>:	cmpl   $0x0,0x14(%rsp)
0x0000000000586ec6 <+58894>:	jne    0x586f89 <_PyEval_EvalFrameDefault+59089>
0x0000000000586ecc <+58900>:	movzbl 0xc0(%rsp),%eax
0x0000000000586ed4 <+58908>:	lea    -0x1(%rax),%edx
0x0000000000586ed7 <+58911>:	cmp    $0xfd,%dl
0x0000000000586eda <+58914>:	jbe    0x586f9c <_PyEval_EvalFrameDefault+59108>
0x0000000000586ee0 <+58920>:	cmpw   $0x0,0x538564(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000586ee8 <+58928>:	jne    0x586fb5 <_PyEval_EvalFrameDefault+59133>
0x0000000000586eee <+58934>:	mov    $0x0,%edx
0x0000000000586ef3 <+58939>:	or     %edx,%eax
0x0000000000586ef5 <+58941>:	or     %eax,%r12d
0x0000000000586ef8 <+58944>:	movzbl %r12b,%eax
0x0000000000586efc <+58948>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000586f04 <+58956>:	mov    %r15,%r13
0x0000000000586f07 <+58959>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000586f0c <+58964>:	mov    $0x7444e0,%ecx
0x0000000000586f11 <+58969>:	mov    $0x138d,%edx
0x0000000000586f16 <+58974>:	mov    $0x74045c,%esi
0x0000000000586f1b <+58979>:	mov    $0x7408ff,%edi
0x0000000000586f20 <+58984>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586f25 <+58989>:	mov    $0x7444e0,%ecx
0x0000000000586f2a <+58994>:	mov    $0x138f,%edx
0x0000000000586f2f <+58999>:	mov    $0x74045c,%esi
0x0000000000586f34 <+59004>:	mov    $0x740c10,%edi
0x0000000000586f39 <+59009>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586f3e <+59014>:	mov    $0x7444e0,%ecx
0x0000000000586f43 <+59019>:	mov    $0x13a1,%edx
0x0000000000586f48 <+59024>:	mov    $0x74045c,%esi
0x0000000000586f4d <+59029>:	mov    $0x743338,%edi
0x0000000000586f52 <+59034>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586f57 <+59039>:	mov    $0x7444e0,%ecx
0x0000000000586f5c <+59044>:	mov    $0x13a5,%edx
0x0000000000586f61 <+59049>:	mov    $0x74045c,%esi
0x0000000000586f66 <+59054>:	mov    $0x740c57,%edi
0x0000000000586f6b <+59059>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586f70 <+59064>:	mov    $0x7444e0,%ecx
0x0000000000586f75 <+59069>:	mov    $0x13a5,%edx
0x0000000000586f7a <+59074>:	mov    $0x74045c,%esi
0x0000000000586f7f <+59079>:	mov    $0x740c66,%edi
0x0000000000586f84 <+59084>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586f89 <+59089>:	mov    %r15,%rdx
0x0000000000586f8c <+59092>:	mov    %rbx,%rsi
0x0000000000586f8f <+59095>:	mov    %rbp,%rdi
0x0000000000586f92 <+59098>:	call   0x573f7b <lltrace_instruction>
0x0000000000586f97 <+59103>:	jmp    0x586ecc <_PyEval_EvalFrameDefault+58900>
0x0000000000586f9c <+59108>:	mov    $0x7444e0,%ecx
0x0000000000586fa1 <+59113>:	mov    $0x13ab,%edx
0x0000000000586fa6 <+59118>:	mov    $0x74045c,%esi
0x0000000000586fab <+59123>:	mov    $0x742a50,%edi
0x0000000000586fb0 <+59128>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000586fb5 <+59133>:	mov    $0xffffffff,%edx
0x0000000000586fba <+59138>:	jmp    0x586ef3 <_PyEval_EvalFrameDefault+58939>
0x0000000000586fbf <+59143>:	lea    0x2(%r13),%r15
0x0000000000586fc3 <+59147>:	mov    %r13,0x38(%rbp)
0x0000000000586fc7 <+59151>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000586fcf <+59159>:	jne    0x5870c6 <_PyEval_EvalFrameDefault+59406>
0x0000000000586fd5 <+59165>:	cmpq   $0x0,0x20(%rsp)
0x0000000000586fdb <+59171>:	jne    0x5870df <_PyEval_EvalFrameDefault+59431>
0x0000000000586fe1 <+59177>:	mov    $0xfffffffe,%eax
0x0000000000586fe6 <+59182>:	mov    0x8(%rsp),%ecx
0x0000000000586fea <+59186>:	sub    %ecx,%eax
0x0000000000586fec <+59188>:	cltq
0x0000000000586fee <+59190>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000586ff3 <+59195>:	setne  %al
0x0000000000586ff6 <+59198>:	movzbl %al,%eax
0x0000000000586ff9 <+59201>:	mov    %eax,0x50(%rsp)
0x0000000000586ffd <+59205>:	lea    (%rcx,%rax,1),%r14d
0x0000000000587001 <+59209>:	mov    %r14d,%eax
0x0000000000587004 <+59212>:	not    %eax
0x0000000000587006 <+59214>:	cltq
0x0000000000587008 <+59216>:	mov    (%rbx,%rax,8),%rax
0x000000000058700c <+59220>:	mov    %rax,0x48(%rsp)
0x0000000000587011 <+59225>:	cmpq   $0x996400,0x8(%rax)
0x0000000000587019 <+59233>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058701f <+59239>:	mov    %rax,%rdi
0x0000000000587022 <+59242>:	call   0x57473f <PyCFunction_GET_FLAGS>
0x0000000000587027 <+59247>:	cmp    $0x80,%eax
0x000000000058702c <+59252>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587032 <+59258>:	lea    0xe(%r13),%r15
0x0000000000587036 <+59262>:	mov    0x48(%rsp),%rdi
0x000000000058703b <+59267>:	call   0x574773 <PyCFunction_GET_FUNCTION>
0x0000000000587040 <+59272>:	mov    %rax,0x8(%rsp)
0x0000000000587045 <+59277>:	test   %r14d,%r14d
0x0000000000587048 <+59280>:	js     0x5870f8 <_PyEval_EvalFrameDefault+59456>
0x000000000058704e <+59286>:	lea    0x48(%rbp),%r12
0x0000000000587052 <+59290>:	mov    0x20(%rbp),%rax
0x0000000000587056 <+59294>:	movslq 0x4c(%rax),%rax
0x000000000058705a <+59298>:	lea    (%r12,%rax,8),%rdx
0x000000000058705e <+59302>:	mov    %rbx,%rax
0x0000000000587061 <+59305>:	sub    %rdx,%rax
0x0000000000587064 <+59308>:	sar    $0x3,%rax
0x0000000000587068 <+59312>:	cmp    %r14d,%eax
0x000000000058706b <+59315>:	jl     0x587111 <_PyEval_EvalFrameDefault+59481>
0x0000000000587071 <+59321>:	mov    %r14d,%eax
0x0000000000587074 <+59324>:	neg    %eax
0x0000000000587076 <+59326>:	cltq
0x0000000000587078 <+59328>:	lea    (%rbx,%rax,8),%rbx
0x000000000058707c <+59332>:	mov    0x48(%rsp),%rdi
0x0000000000587081 <+59337>:	call   0x5747a8 <PyCFunction_GET_SELF>
0x0000000000587086 <+59342>:	mov    %rax,%rdi
0x0000000000587089 <+59345>:	movslq %r14d,%rdx
0x000000000058708c <+59348>:	mov    %rbx,%rsi
0x000000000058708f <+59351>:	mov    0x8(%rsp),%rax
0x0000000000587094 <+59356>:	call   *%rax
0x0000000000587096 <+59358>:	mov    %rax,0x58(%rsp)
0x000000000058709b <+59363>:	test   %rax,%rax
0x000000000058709e <+59366>:	setne  0x8(%rsp)
0x00000000005870a3 <+59371>:	mov    0x18(%rsp),%rdi
0x00000000005870a8 <+59376>:	call   0x573630 <_PyErr_Occurred>
0x00000000005870ad <+59381>:	test   %rax,%rax
0x00000000005870b0 <+59384>:	setne  %al
0x00000000005870b3 <+59387>:	cmp    %al,0x8(%rsp)
0x00000000005870b7 <+59391>:	je     0x58712a <_PyEval_EvalFrameDefault+59506>
0x00000000005870b9 <+59393>:	movl   $0x0,0x8(%rsp)
0x00000000005870c1 <+59401>:	jmp    0x587160 <_PyEval_EvalFrameDefault+59560>
0x00000000005870c6 <+59406>:	mov    $0x7444e0,%ecx
0x00000000005870cb <+59411>:	mov    $0x13af,%edx
0x00000000005870d0 <+59416>:	mov    $0x74045c,%esi
0x00000000005870d5 <+59421>:	mov    $0x7408ff,%edi
0x00000000005870da <+59426>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005870df <+59431>:	mov    $0x7444e0,%ecx
0x00000000005870e4 <+59436>:	mov    $0x13b1,%edx
0x00000000005870e9 <+59441>:	mov    $0x74045c,%esi
0x00000000005870ee <+59446>:	mov    $0x740c10,%edi
0x00000000005870f3 <+59451>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005870f8 <+59456>:	mov    $0x7444e0,%ecx
0x00000000005870fd <+59461>:	mov    $0x13bb,%edx
0x0000000000587102 <+59466>:	mov    $0x74045c,%esi
0x0000000000587107 <+59471>:	mov    $0x740c2b,%edi
0x000000000058710c <+59476>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587111 <+59481>:	mov    $0x7444e0,%ecx
0x0000000000587116 <+59486>:	mov    $0x13bb,%edx
0x000000000058711b <+59491>:	mov    $0x74045c,%esi
0x0000000000587120 <+59496>:	mov    $0x740c3b,%edi
0x0000000000587125 <+59501>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058712a <+59506>:	mov    $0x7444e0,%ecx
0x000000000058712f <+59511>:	mov    $0x13c1,%edx
0x0000000000587134 <+59516>:	mov    $0x74045c,%esi
0x0000000000587139 <+59521>:	mov    $0x743338,%edi
0x000000000058713e <+59526>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587143 <+59531>:	movslq 0x8(%rsp),%rax
0x0000000000587148 <+59536>:	mov    (%rbx,%rax,8),%rdx
0x000000000058714c <+59540>:	mov    $0x13c5,%esi
0x0000000000587151 <+59545>:	mov    $0x74045c,%edi
0x0000000000587156 <+59550>:	call   0x573c83 <Py_DECREF>
0x000000000058715b <+59555>:	addl   $0x1,0x8(%rsp)
0x0000000000587160 <+59560>:	cmp    %r14d,0x8(%rsp)
0x0000000000587165 <+59565>:	jl     0x587143 <_PyEval_EvalFrameDefault+59531>
0x0000000000587167 <+59567>:	mov    $0x2,%eax
0x000000000058716c <+59572>:	mov    0x50(%rsp),%ecx
0x0000000000587170 <+59576>:	sub    %ecx,%eax
0x0000000000587172 <+59578>:	js     0x58725c <_PyEval_EvalFrameDefault+59812>
0x0000000000587178 <+59584>:	mov    0x20(%rbp),%rdx
0x000000000058717c <+59588>:	movslq 0x4c(%rdx),%rdx
0x0000000000587180 <+59592>:	lea    (%r12,%rdx,8),%rcx
0x0000000000587184 <+59596>:	mov    %rbx,%rdx
0x0000000000587187 <+59599>:	sub    %rcx,%rdx
0x000000000058718a <+59602>:	sar    $0x3,%rdx
0x000000000058718e <+59606>:	cmp    %edx,%eax
0x0000000000587190 <+59608>:	jg     0x587275 <_PyEval_EvalFrameDefault+59837>
0x0000000000587196 <+59614>:	mov    0x50(%rsp),%eax
0x000000000058719a <+59618>:	sub    $0x2,%eax
0x000000000058719d <+59621>:	cltq
0x000000000058719f <+59623>:	lea    (%rbx,%rax,8),%rax
0x00000000005871a3 <+59627>:	lea    0x8(%rax),%rbx
0x00000000005871a7 <+59631>:	mov    0x58(%rsp),%rcx
0x00000000005871ac <+59636>:	mov    %rcx,(%rax)
0x00000000005871af <+59639>:	mov    0x20(%rbp),%rdx
0x00000000005871b3 <+59643>:	movslq 0x4c(%rdx),%rax
0x00000000005871b7 <+59647>:	lea    (%r12,%rax,8),%rcx
0x00000000005871bb <+59651>:	mov    %rbx,%rax
0x00000000005871be <+59654>:	sub    %rcx,%rax
0x00000000005871c1 <+59657>:	sar    $0x3,%rax
0x00000000005871c5 <+59661>:	cmp    %eax,0x44(%rdx)
0x00000000005871c8 <+59664>:	jl     0x58728e <_PyEval_EvalFrameDefault+59862>
0x00000000005871ce <+59670>:	mov    0x48(%rsp),%rdx
0x00000000005871d3 <+59675>:	mov    $0x13c9,%esi
0x00000000005871d8 <+59680>:	mov    $0x74045c,%edi
0x00000000005871dd <+59685>:	call   0x573c83 <Py_DECREF>
0x00000000005871e2 <+59690>:	cmpq   $0x0,0x58(%rsp)
0x00000000005871e8 <+59696>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005871ee <+59702>:	mov    0x28(%rsp),%rax
0x00000000005871f3 <+59707>:	mov    0x64(%rax),%eax
0x00000000005871f6 <+59710>:	test   %eax,%eax
0x00000000005871f8 <+59712>:	jne    0x578b79 <_PyEval_EvalFrameDefault+705>
0x00000000005871fe <+59718>:	movzwl 0xe(%r13),%r12d
0x0000000000587203 <+59723>:	mov    %r12d,%eax
0x0000000000587206 <+59726>:	shr    $0x8,%ax
0x000000000058720a <+59730>:	movzwl %ax,%eax
0x000000000058720d <+59733>:	mov    %eax,0x8(%rsp)
0x0000000000587211 <+59737>:	cmpl   $0x0,0x14(%rsp)
0x0000000000587216 <+59742>:	jne    0x5872a7 <_PyEval_EvalFrameDefault+59887>
0x000000000058721c <+59748>:	movzbl 0xc0(%rsp),%eax
0x0000000000587224 <+59756>:	lea    -0x1(%rax),%edx
0x0000000000587227 <+59759>:	cmp    $0xfd,%dl
0x000000000058722a <+59762>:	jbe    0x5872ba <_PyEval_EvalFrameDefault+59906>
0x0000000000587230 <+59768>:	cmpw   $0x0,0x538214(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000587238 <+59776>:	jne    0x5872d3 <_PyEval_EvalFrameDefault+59931>
0x000000000058723e <+59782>:	mov    $0x0,%edx
0x0000000000587243 <+59787>:	or     %edx,%eax
0x0000000000587245 <+59789>:	or     %eax,%r12d
0x0000000000587248 <+59792>:	movzbl %r12b,%eax
0x000000000058724c <+59796>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000587254 <+59804>:	mov    %r15,%r13
0x0000000000587257 <+59807>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058725c <+59812>:	mov    $0x7444e0,%ecx
0x0000000000587261 <+59817>:	mov    $0x13c7,%edx
0x0000000000587266 <+59822>:	mov    $0x74045c,%esi
0x000000000058726b <+59827>:	mov    $0x740c57,%edi
0x0000000000587270 <+59832>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587275 <+59837>:	mov    $0x7444e0,%ecx
0x000000000058727a <+59842>:	mov    $0x13c7,%edx
0x000000000058727f <+59847>:	mov    $0x74045c,%esi
0x0000000000587284 <+59852>:	mov    $0x740c66,%edi
0x0000000000587289 <+59857>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058728e <+59862>:	mov    $0x7444e0,%ecx
0x0000000000587293 <+59867>:	mov    $0x13c8,%edx
0x0000000000587298 <+59872>:	mov    $0x74045c,%esi
0x000000000058729d <+59877>:	mov    $0x7408bc,%edi
0x00000000005872a2 <+59882>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005872a7 <+59887>:	mov    %r15,%rdx
0x00000000005872aa <+59890>:	mov    %rbx,%rsi
0x00000000005872ad <+59893>:	mov    %rbp,%rdi
0x00000000005872b0 <+59896>:	call   0x573f7b <lltrace_instruction>
0x00000000005872b5 <+59901>:	jmp    0x58721c <_PyEval_EvalFrameDefault+59748>
0x00000000005872ba <+59906>:	mov    $0x7444e0,%ecx
0x00000000005872bf <+59911>:	mov    $0x13d3,%edx
0x00000000005872c4 <+59916>:	mov    $0x74045c,%esi
0x00000000005872c9 <+59921>:	mov    $0x742a50,%edi
0x00000000005872ce <+59926>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005872d3 <+59931>:	mov    $0xffffffff,%edx
0x00000000005872d8 <+59936>:	jmp    0x587243 <_PyEval_EvalFrameDefault+59787>
0x00000000005872dd <+59941>:	lea    0x2(%r13),%r15
0x00000000005872e1 <+59945>:	mov    %r13,0x38(%rbp)
0x00000000005872e5 <+59949>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005872ed <+59957>:	jne    0x587409 <_PyEval_EvalFrameDefault+60241>
0x00000000005872f3 <+59963>:	mov    $0xfffffffe,%eax
0x00000000005872f8 <+59968>:	mov    0x8(%rsp),%ecx
0x00000000005872fc <+59972>:	sub    %ecx,%eax
0x00000000005872fe <+59974>:	cltq
0x0000000000587300 <+59976>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000587305 <+59981>:	setne  %al
0x0000000000587308 <+59984>:	movzbl %al,%eax
0x000000000058730b <+59987>:	mov    %eax,0x50(%rsp)
0x000000000058730f <+59991>:	lea    (%rcx,%rax,1),%r14d
0x0000000000587313 <+59995>:	mov    %r14d,%eax
0x0000000000587316 <+59998>:	not    %eax
0x0000000000587318 <+60000>:	cltq
0x000000000058731a <+60002>:	mov    (%rbx,%rax,8),%rax
0x000000000058731e <+60006>:	mov    %rax,0x48(%rsp)
0x0000000000587323 <+60011>:	cmpq   $0x996400,0x8(%rax)
0x000000000058732b <+60019>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587331 <+60025>:	mov    %rax,%rdi
0x0000000000587334 <+60028>:	call   0x57473f <PyCFunction_GET_FLAGS>
0x0000000000587339 <+60033>:	cmp    $0x82,%eax
0x000000000058733e <+60038>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587344 <+60044>:	lea    0xe(%r13),%r15
0x0000000000587348 <+60048>:	test   %r14d,%r14d
0x000000000058734b <+60051>:	js     0x587422 <_PyEval_EvalFrameDefault+60266>
0x0000000000587351 <+60057>:	lea    0x48(%rbp),%r12
0x0000000000587355 <+60061>:	mov    0x20(%rbp),%rax
0x0000000000587359 <+60065>:	movslq 0x4c(%rax),%rax
0x000000000058735d <+60069>:	lea    (%r12,%rax,8),%rdx
0x0000000000587361 <+60073>:	mov    %rbx,%rax
0x0000000000587364 <+60076>:	sub    %rdx,%rax
0x0000000000587367 <+60079>:	sar    $0x3,%rax
0x000000000058736b <+60083>:	cmp    %r14d,%eax
0x000000000058736e <+60086>:	jl     0x58743b <_PyEval_EvalFrameDefault+60291>
0x0000000000587374 <+60092>:	mov    %r14d,%eax
0x0000000000587377 <+60095>:	neg    %eax
0x0000000000587379 <+60097>:	cltq
0x000000000058737b <+60099>:	lea    (%rbx,%rax,8),%rbx
0x000000000058737f <+60103>:	mov    0x48(%rsp),%rdi
0x0000000000587384 <+60108>:	call   0x574773 <PyCFunction_GET_FUNCTION>
0x0000000000587389 <+60113>:	mov    %rax,0x58(%rsp)
0x000000000058738e <+60118>:	mov    0x20(%rsp),%rdi
0x0000000000587393 <+60123>:	mov    %rdi,0x8(%rsp)
0x0000000000587398 <+60128>:	test   %rdi,%rdi
0x000000000058739b <+60131>:	je     0x587454 <_PyEval_EvalFrameDefault+60316>
0x00000000005873a1 <+60137>:	call   0x573476 <PyTuple_GET_SIZE>
0x00000000005873a6 <+60142>:	mov    %r14d,%ecx
0x00000000005873a9 <+60145>:	sub    %eax,%ecx
0x00000000005873ab <+60147>:	mov    %ecx,0x20(%rsp)
0x00000000005873af <+60151>:	mov    0x48(%rsp),%rdi
0x00000000005873b4 <+60156>:	call   0x5747a8 <PyCFunction_GET_SELF>
0x00000000005873b9 <+60161>:	mov    %rax,%rdi
0x00000000005873bc <+60164>:	movslq 0x20(%rsp),%rdx
0x00000000005873c1 <+60169>:	mov    0x8(%rsp),%rcx
0x00000000005873c6 <+60174>:	mov    %rbx,%rsi
0x00000000005873c9 <+60177>:	mov    0x58(%rsp),%rax
0x00000000005873ce <+60182>:	call   *%rax
0x00000000005873d0 <+60184>:	mov    %rax,0x58(%rsp)
0x00000000005873d5 <+60189>:	test   %rax,%rax
0x00000000005873d8 <+60192>:	setne  0x8(%rsp)
0x00000000005873dd <+60197>:	mov    0x18(%rsp),%rdi
0x00000000005873e2 <+60202>:	call   0x573630 <_PyErr_Occurred>
0x00000000005873e7 <+60207>:	test   %rax,%rax
0x00000000005873ea <+60210>:	setne  %al
0x00000000005873ed <+60213>:	cmp    %al,0x8(%rsp)
0x00000000005873f1 <+60217>:	je     0x58745e <_PyEval_EvalFrameDefault+60326>
0x00000000005873f3 <+60219>:	movq   $0x0,0x20(%rsp)
0x00000000005873fc <+60228>:	movl   $0x0,0x8(%rsp)
0x0000000000587404 <+60236>:	jmp    0x587494 <_PyEval_EvalFrameDefault+60380>
0x0000000000587409 <+60241>:	mov    $0x7444e0,%ecx
0x000000000058740e <+60246>:	mov    $0x13d7,%edx
0x0000000000587413 <+60251>:	mov    $0x74045c,%esi
0x0000000000587418 <+60256>:	mov    $0x7408ff,%edi
0x000000000058741d <+60261>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587422 <+60266>:	mov    $0x7444e0,%ecx
0x0000000000587427 <+60271>:	mov    $0x13e1,%edx
0x000000000058742c <+60276>:	mov    $0x74045c,%esi
0x0000000000587431 <+60281>:	mov    $0x740c2b,%edi
0x0000000000587436 <+60286>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058743b <+60291>:	mov    $0x7444e0,%ecx
0x0000000000587440 <+60296>:	mov    $0x13e1,%edx
0x0000000000587445 <+60301>:	mov    $0x74045c,%esi
0x000000000058744a <+60306>:	mov    $0x740c3b,%edi
0x000000000058744f <+60311>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587454 <+60316>:	mov    $0x0,%eax
0x0000000000587459 <+60321>:	jmp    0x5873a6 <_PyEval_EvalFrameDefault+60142>
0x000000000058745e <+60326>:	mov    $0x7444e0,%ecx
0x0000000000587463 <+60331>:	mov    $0x13ec,%edx
0x0000000000587468 <+60336>:	mov    $0x74045c,%esi
0x000000000058746d <+60341>:	mov    $0x743338,%edi
0x0000000000587472 <+60346>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587477 <+60351>:	movslq 0x8(%rsp),%rax
0x000000000058747c <+60356>:	mov    (%rbx,%rax,8),%rdx
0x0000000000587480 <+60360>:	mov    $0x13f1,%esi
0x0000000000587485 <+60365>:	mov    $0x74045c,%edi
0x000000000058748a <+60370>:	call   0x573c83 <Py_DECREF>
0x000000000058748f <+60375>:	addl   $0x1,0x8(%rsp)
0x0000000000587494 <+60380>:	cmp    %r14d,0x8(%rsp)
0x0000000000587499 <+60385>:	jl     0x587477 <_PyEval_EvalFrameDefault+60351>
0x000000000058749b <+60387>:	mov    $0x2,%eax
0x00000000005874a0 <+60392>:	mov    0x50(%rsp),%ecx
0x00000000005874a4 <+60396>:	sub    %ecx,%eax
0x00000000005874a6 <+60398>:	js     0x587590 <_PyEval_EvalFrameDefault+60632>
0x00000000005874ac <+60404>:	mov    0x20(%rbp),%rdx
0x00000000005874b0 <+60408>:	movslq 0x4c(%rdx),%rdx
0x00000000005874b4 <+60412>:	lea    (%r12,%rdx,8),%rcx
0x00000000005874b8 <+60416>:	mov    %rbx,%rdx
0x00000000005874bb <+60419>:	sub    %rcx,%rdx
0x00000000005874be <+60422>:	sar    $0x3,%rdx
0x00000000005874c2 <+60426>:	cmp    %edx,%eax
0x00000000005874c4 <+60428>:	jg     0x5875a9 <_PyEval_EvalFrameDefault+60657>
0x00000000005874ca <+60434>:	mov    0x50(%rsp),%eax
0x00000000005874ce <+60438>:	sub    $0x2,%eax
0x00000000005874d1 <+60441>:	cltq
0x00000000005874d3 <+60443>:	lea    (%rbx,%rax,8),%rax
0x00000000005874d7 <+60447>:	lea    0x8(%rax),%rbx
0x00000000005874db <+60451>:	mov    0x58(%rsp),%rcx
0x00000000005874e0 <+60456>:	mov    %rcx,(%rax)
0x00000000005874e3 <+60459>:	mov    0x20(%rbp),%rdx
0x00000000005874e7 <+60463>:	movslq 0x4c(%rdx),%rax
0x00000000005874eb <+60467>:	lea    (%r12,%rax,8),%rcx
0x00000000005874ef <+60471>:	mov    %rbx,%rax
0x00000000005874f2 <+60474>:	sub    %rcx,%rax
0x00000000005874f5 <+60477>:	sar    $0x3,%rax
0x00000000005874f9 <+60481>:	cmp    %eax,0x44(%rdx)
0x00000000005874fc <+60484>:	jl     0x5875c2 <_PyEval_EvalFrameDefault+60682>
0x0000000000587502 <+60490>:	mov    0x48(%rsp),%rdx
0x0000000000587507 <+60495>:	mov    $0x13f5,%esi
0x000000000058750c <+60500>:	mov    $0x74045c,%edi
0x0000000000587511 <+60505>:	call   0x573c83 <Py_DECREF>
0x0000000000587516 <+60510>:	cmpq   $0x0,0x58(%rsp)
0x000000000058751c <+60516>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000587522 <+60522>:	mov    0x28(%rsp),%rax
0x0000000000587527 <+60527>:	mov    0x64(%rax),%eax
0x000000000058752a <+60530>:	test   %eax,%eax
0x000000000058752c <+60532>:	jne    0x578b7e <_PyEval_EvalFrameDefault+710>
0x0000000000587532 <+60538>:	movzwl 0xe(%r13),%r12d
0x0000000000587537 <+60543>:	mov    %r12d,%eax
0x000000000058753a <+60546>:	shr    $0x8,%ax
0x000000000058753e <+60550>:	movzwl %ax,%eax
0x0000000000587541 <+60553>:	mov    %eax,0x8(%rsp)
0x0000000000587545 <+60557>:	cmpl   $0x0,0x14(%rsp)
0x000000000058754a <+60562>:	jne    0x5875db <_PyEval_EvalFrameDefault+60707>
0x0000000000587550 <+60568>:	movzbl 0xc0(%rsp),%eax
0x0000000000587558 <+60576>:	lea    -0x1(%rax),%edx
0x000000000058755b <+60579>:	cmp    $0xfd,%dl
0x000000000058755e <+60582>:	jbe    0x5875ee <_PyEval_EvalFrameDefault+60726>
0x0000000000587564 <+60588>:	cmpw   $0x0,0x537ee0(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058756c <+60596>:	jne    0x587607 <_PyEval_EvalFrameDefault+60751>
0x0000000000587572 <+60602>:	mov    $0x0,%edx
0x0000000000587577 <+60607>:	or     %edx,%eax
0x0000000000587579 <+60609>:	or     %eax,%r12d
0x000000000058757c <+60612>:	movzbl %r12b,%eax
0x0000000000587580 <+60616>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000587588 <+60624>:	mov    %r15,%r13
0x000000000058758b <+60627>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000587590 <+60632>:	mov    $0x7444e0,%ecx
0x0000000000587595 <+60637>:	mov    $0x13f3,%edx
0x000000000058759a <+60642>:	mov    $0x74045c,%esi
0x000000000058759f <+60647>:	mov    $0x740c57,%edi
0x00000000005875a4 <+60652>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005875a9 <+60657>:	mov    $0x7444e0,%ecx
0x00000000005875ae <+60662>:	mov    $0x13f3,%edx
0x00000000005875b3 <+60667>:	mov    $0x74045c,%esi
0x00000000005875b8 <+60672>:	mov    $0x740c66,%edi
0x00000000005875bd <+60677>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005875c2 <+60682>:	mov    $0x7444e0,%ecx
0x00000000005875c7 <+60687>:	mov    $0x13f4,%edx
0x00000000005875cc <+60692>:	mov    $0x74045c,%esi
0x00000000005875d1 <+60697>:	mov    $0x7408bc,%edi
0x00000000005875d6 <+60702>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005875db <+60707>:	mov    %r15,%rdx
0x00000000005875de <+60710>:	mov    %rbx,%rsi
0x00000000005875e1 <+60713>:	mov    %rbp,%rdi
0x00000000005875e4 <+60716>:	call   0x573f7b <lltrace_instruction>
0x00000000005875e9 <+60721>:	jmp    0x587550 <_PyEval_EvalFrameDefault+60568>
0x00000000005875ee <+60726>:	mov    $0x7444e0,%ecx
0x00000000005875f3 <+60731>:	mov    $0x13fa,%edx
0x00000000005875f8 <+60736>:	mov    $0x74045c,%esi
0x00000000005875fd <+60741>:	mov    $0x742a50,%edi
0x0000000000587602 <+60746>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587607 <+60751>:	mov    $0xffffffff,%edx
0x000000000058760c <+60756>:	jmp    0x587577 <_PyEval_EvalFrameDefault+60607>
0x0000000000587611 <+60761>:	lea    0x2(%r13),%r15
0x0000000000587615 <+60765>:	mov    %r13,0x38(%rbp)
0x0000000000587619 <+60769>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000587621 <+60777>:	jne    0x587793 <_PyEval_EvalFrameDefault+61147>
0x0000000000587627 <+60783>:	cmpq   $0x0,0x20(%rsp)
0x000000000058762d <+60789>:	jne    0x5877ac <_PyEval_EvalFrameDefault+61172>
0x0000000000587633 <+60795>:	mov    $0xfffffffe,%eax
0x0000000000587638 <+60800>:	mov    0x8(%rsp),%ecx
0x000000000058763c <+60804>:	sub    %ecx,%eax
0x000000000058763e <+60806>:	cltq
0x0000000000587640 <+60808>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000587645 <+60813>:	setne  %r14b
0x0000000000587649 <+60817>:	movzbl %r14b,%r14d
0x000000000058764d <+60821>:	lea    (%rcx,%r14,1),%eax
0x0000000000587651 <+60825>:	cmp    $0x1,%eax
0x0000000000587654 <+60828>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058765a <+60834>:	not    %eax
0x000000000058765c <+60836>:	cltq
0x000000000058765e <+60838>:	mov    (%rbx,%rax,8),%rax
0x0000000000587662 <+60842>:	mov    %rax,0x48(%rsp)
0x0000000000587667 <+60847>:	call   0x5771cd <_PyInterpreterState_GET>
0x000000000058766c <+60852>:	mov    0x48(%rsp),%rcx
0x0000000000587671 <+60857>:	cmp    %rcx,0x1a368(%rax)
0x0000000000587678 <+60864>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058767e <+60870>:	lea    0xe(%r13),%r15
0x0000000000587682 <+60874>:	mov    -0x8(%rbx),%rax
0x0000000000587686 <+60878>:	mov    %rax,0x8(%rsp)
0x000000000058768b <+60883>:	mov    %rax,%rdi
0x000000000058768e <+60886>:	call   0x4938d1 <PyObject_Size>
0x0000000000587693 <+60891>:	mov    %rax,%rdi
0x0000000000587696 <+60894>:	test   %rax,%rax
0x0000000000587699 <+60897>:	js     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058769f <+60903>:	call   0x4d7360 <PyLong_FromSsize_t>
0x00000000005876a4 <+60908>:	mov    %rax,%r12
0x00000000005876a7 <+60911>:	test   %rax,%rax
0x00000000005876aa <+60914>:	setne  0x50(%rsp)
0x00000000005876af <+60919>:	mov    0x18(%rsp),%rdi
0x00000000005876b4 <+60924>:	call   0x573630 <_PyErr_Occurred>
0x00000000005876b9 <+60929>:	test   %rax,%rax
0x00000000005876bc <+60932>:	setne  %al
0x00000000005876bf <+60935>:	cmp    %al,0x50(%rsp)
0x00000000005876c3 <+60939>:	je     0x5877c5 <_PyEval_EvalFrameDefault+61197>
0x00000000005876c9 <+60945>:	mov    $0x2,%eax
0x00000000005876ce <+60950>:	sub    %r14d,%eax
0x00000000005876d1 <+60953>:	js     0x5877de <_PyEval_EvalFrameDefault+61222>
0x00000000005876d7 <+60959>:	mov    0x20(%rbp),%rdx
0x00000000005876db <+60963>:	movslq 0x4c(%rdx),%rdx
0x00000000005876df <+60967>:	lea    0x48(%rbp,%rdx,8),%rcx
0x00000000005876e4 <+60972>:	mov    %rbx,%rdx
0x00000000005876e7 <+60975>:	sub    %rcx,%rdx
0x00000000005876ea <+60978>:	sar    $0x3,%rdx
0x00000000005876ee <+60982>:	cmp    %edx,%eax
0x00000000005876f0 <+60984>:	jg     0x5877f7 <_PyEval_EvalFrameDefault+61247>
0x00000000005876f6 <+60990>:	lea    -0x2(%r14),%eax
0x00000000005876fa <+60994>:	cltq
0x00000000005876fc <+60996>:	lea    (%rbx,%rax,8),%rbx
0x0000000000587700 <+61000>:	mov    %r12,-0x8(%rbx)
0x0000000000587704 <+61004>:	mov    0x48(%rsp),%rdx
0x0000000000587709 <+61009>:	mov    $0x1413,%esi
0x000000000058770e <+61014>:	mov    $0x74045c,%edi
0x0000000000587713 <+61019>:	call   0x573c83 <Py_DECREF>
0x0000000000587718 <+61024>:	mov    0x8(%rsp),%rdx
0x000000000058771d <+61029>:	mov    $0x1414,%esi
0x0000000000587722 <+61034>:	mov    $0x74045c,%edi
0x0000000000587727 <+61039>:	call   0x573c83 <Py_DECREF>
0x000000000058772c <+61044>:	test   %r12,%r12
0x000000000058772f <+61047>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000587735 <+61053>:	movzwl 0xe(%r13),%r12d
0x000000000058773a <+61058>:	mov    %r12d,%eax
0x000000000058773d <+61061>:	shr    $0x8,%ax
0x0000000000587741 <+61065>:	movzwl %ax,%eax
0x0000000000587744 <+61068>:	mov    %eax,0x8(%rsp)
0x0000000000587748 <+61072>:	cmpl   $0x0,0x14(%rsp)
0x000000000058774d <+61077>:	jne    0x587810 <_PyEval_EvalFrameDefault+61272>
0x0000000000587753 <+61083>:	movzbl 0xc0(%rsp),%eax
0x000000000058775b <+61091>:	lea    -0x1(%rax),%edx
0x000000000058775e <+61094>:	cmp    $0xfd,%dl
0x0000000000587761 <+61097>:	jbe    0x587823 <_PyEval_EvalFrameDefault+61291>
0x0000000000587767 <+61103>:	cmpw   $0x0,0x537cdd(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058776f <+61111>:	jne    0x58783c <_PyEval_EvalFrameDefault+61316>
0x0000000000587775 <+61117>:	mov    $0x0,%edx
0x000000000058777a <+61122>:	or     %edx,%eax
0x000000000058777c <+61124>:	or     %eax,%r12d
0x000000000058777f <+61127>:	movzbl %r12b,%eax
0x0000000000587783 <+61131>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058778b <+61139>:	mov    %r15,%r13
0x000000000058778e <+61142>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000587793 <+61147>:	mov    $0x7444e0,%ecx
0x0000000000587798 <+61152>:	mov    $0x13fe,%edx
0x000000000058779d <+61157>:	mov    $0x74045c,%esi
0x00000000005877a2 <+61162>:	mov    $0x7408ff,%edi
0x00000000005877a7 <+61167>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005877ac <+61172>:	mov    $0x7444e0,%ecx
0x00000000005877b1 <+61177>:	mov    $0x13ff,%edx
0x00000000005877b6 <+61182>:	mov    $0x74045c,%esi
0x00000000005877bb <+61187>:	mov    $0x740c10,%edi
0x00000000005877c0 <+61192>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005877c5 <+61197>:	mov    $0x7444e0,%ecx
0x00000000005877ca <+61202>:	mov    $0x140f,%edx
0x00000000005877cf <+61207>:	mov    $0x74045c,%esi
0x00000000005877d4 <+61212>:	mov    $0x743338,%edi
0x00000000005877d9 <+61217>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005877de <+61222>:	mov    $0x7444e0,%ecx
0x00000000005877e3 <+61227>:	mov    $0x1411,%edx
0x00000000005877e8 <+61232>:	mov    $0x74045c,%esi
0x00000000005877ed <+61237>:	mov    $0x740c57,%edi
0x00000000005877f2 <+61242>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005877f7 <+61247>:	mov    $0x7444e0,%ecx
0x00000000005877fc <+61252>:	mov    $0x1411,%edx
0x0000000000587801 <+61257>:	mov    $0x74045c,%esi
0x0000000000587806 <+61262>:	mov    $0x740c66,%edi
0x000000000058780b <+61267>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587810 <+61272>:	mov    %r15,%rdx
0x0000000000587813 <+61275>:	mov    %rbx,%rsi
0x0000000000587816 <+61278>:	mov    %rbp,%rdi
0x0000000000587819 <+61281>:	call   0x573f7b <lltrace_instruction>
0x000000000058781e <+61286>:	jmp    0x587753 <_PyEval_EvalFrameDefault+61083>
0x0000000000587823 <+61291>:	mov    $0x7444e0,%ecx
0x0000000000587828 <+61296>:	mov    $0x1418,%edx
0x000000000058782d <+61301>:	mov    $0x74045c,%esi
0x0000000000587832 <+61306>:	mov    $0x742a50,%edi
0x0000000000587837 <+61311>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058783c <+61316>:	mov    $0xffffffff,%edx
0x0000000000587841 <+61321>:	jmp    0x58777a <_PyEval_EvalFrameDefault+61122>
0x0000000000587846 <+61326>:	lea    0x2(%r13),%r15
0x000000000058784a <+61330>:	mov    %r13,0x38(%rbp)
0x000000000058784e <+61334>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000587856 <+61342>:	jne    0x587a18 <_PyEval_EvalFrameDefault+61792>
0x000000000058785c <+61348>:	cmpq   $0x0,0x20(%rsp)
0x0000000000587862 <+61354>:	jne    0x587a31 <_PyEval_EvalFrameDefault+61817>
0x0000000000587868 <+61360>:	mov    $0xfffffffe,%eax
0x000000000058786d <+61365>:	mov    0x8(%rsp),%ecx
0x0000000000587871 <+61369>:	sub    %ecx,%eax
0x0000000000587873 <+61371>:	cltq
0x0000000000587875 <+61373>:	cmpq   $0x0,(%rbx,%rax,8)
0x000000000058787a <+61378>:	setne  %r14b
0x000000000058787e <+61382>:	movzbl %r14b,%r14d
0x0000000000587882 <+61386>:	lea    (%rcx,%r14,1),%edx
0x0000000000587886 <+61390>:	mov    %edx,%eax
0x0000000000587888 <+61392>:	not    %eax
0x000000000058788a <+61394>:	cltq
0x000000000058788c <+61396>:	mov    (%rbx,%rax,8),%rax
0x0000000000587890 <+61400>:	mov    %rax,0x48(%rsp)
0x0000000000587895 <+61405>:	cmp    $0x2,%edx
0x0000000000587898 <+61408>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058789e <+61414>:	call   0x5771cd <_PyInterpreterState_GET>
0x00000000005878a3 <+61419>:	mov    0x48(%rsp),%rcx
0x00000000005878a8 <+61424>:	cmp    %rcx,0x1a360(%rax)
0x00000000005878af <+61431>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005878b5 <+61437>:	lea    0xe(%r13),%r15
0x00000000005878b9 <+61441>:	lea    0x48(%rbp),%rcx
0x00000000005878bd <+61445>:	mov    %rcx,0x60(%rsp)
0x00000000005878c2 <+61450>:	mov    0x20(%rbp),%rax
0x00000000005878c6 <+61454>:	movslq 0x4c(%rax),%rax
0x00000000005878ca <+61458>:	lea    (%rcx,%rax,8),%rdx
0x00000000005878ce <+61462>:	mov    %rbx,%rax
0x00000000005878d1 <+61465>:	sub    %rdx,%rax
0x00000000005878d4 <+61468>:	sar    $0x3,%rax
0x00000000005878d8 <+61472>:	test   %eax,%eax
0x00000000005878da <+61474>:	jle    0x587a4a <_PyEval_EvalFrameDefault+61842>
0x00000000005878e0 <+61480>:	lea    -0x8(%rbx),%r12
0x00000000005878e4 <+61484>:	mov    -0x8(%rbx),%rsi
0x00000000005878e8 <+61488>:	mov    %rsi,0x8(%rsp)
0x00000000005878ed <+61493>:	mov    -0x10(%rbx),%rax
0x00000000005878f1 <+61497>:	mov    %rax,0x50(%rsp)
0x00000000005878f6 <+61502>:	mov    %rax,%rdi
0x00000000005878f9 <+61505>:	call   0x493c83 <PyObject_IsInstance>
0x00000000005878fe <+61510>:	test   %eax,%eax
0x0000000000587900 <+61512>:	js     0x587a63 <_PyEval_EvalFrameDefault+61867>
0x0000000000587906 <+61518>:	movslq %eax,%rdi
0x0000000000587909 <+61521>:	call   0x494aea <PyBool_FromLong>
0x000000000058790e <+61526>:	mov    %rax,0x58(%rsp)
0x0000000000587913 <+61531>:	test   %rax,%rax
0x0000000000587916 <+61534>:	setne  %bl
0x0000000000587919 <+61537>:	mov    0x18(%rsp),%rdi
0x000000000058791e <+61542>:	call   0x573630 <_PyErr_Occurred>
0x0000000000587923 <+61547>:	test   %rax,%rax
0x0000000000587926 <+61550>:	setne  %al
0x0000000000587929 <+61553>:	cmp    %al,%bl
0x000000000058792b <+61555>:	je     0x587a7f <_PyEval_EvalFrameDefault+61895>
0x0000000000587931 <+61561>:	mov    $0x2,%eax
0x0000000000587936 <+61566>:	sub    %r14d,%eax
0x0000000000587939 <+61569>:	js     0x587a98 <_PyEval_EvalFrameDefault+61920>
0x000000000058793f <+61575>:	mov    0x20(%rbp),%rdx
0x0000000000587943 <+61579>:	movslq 0x4c(%rdx),%rdx
0x0000000000587947 <+61583>:	mov    0x60(%rsp),%rcx
0x000000000058794c <+61588>:	lea    (%rcx,%rdx,8),%rcx
0x0000000000587950 <+61592>:	mov    %r12,%rdx
0x0000000000587953 <+61595>:	sub    %rcx,%rdx
0x0000000000587956 <+61598>:	sar    $0x3,%rdx
0x000000000058795a <+61602>:	cmp    %edx,%eax
0x000000000058795c <+61604>:	jg     0x587ab1 <_PyEval_EvalFrameDefault+61945>
0x0000000000587962 <+61610>:	lea    -0x2(%r14),%eax
0x0000000000587966 <+61614>:	cltq
0x0000000000587968 <+61616>:	lea    (%r12,%rax,8),%rbx
0x000000000058796c <+61620>:	mov    0x58(%rsp),%r14
0x0000000000587971 <+61625>:	mov    %r14,-0x8(%rbx)
0x0000000000587975 <+61629>:	mov    0x50(%rsp),%rdx
0x000000000058797a <+61634>:	mov    $0x1433,%esi
0x000000000058797f <+61639>:	mov    $0x74045c,%edi
0x0000000000587984 <+61644>:	call   0x573c83 <Py_DECREF>
0x0000000000587989 <+61649>:	mov    0x8(%rsp),%rdx
0x000000000058798e <+61654>:	mov    $0x1434,%esi
0x0000000000587993 <+61659>:	mov    $0x74045c,%edi
0x0000000000587998 <+61664>:	call   0x573c83 <Py_DECREF>
0x000000000058799d <+61669>:	mov    0x48(%rsp),%rdx
0x00000000005879a2 <+61674>:	mov    $0x1435,%esi
0x00000000005879a7 <+61679>:	mov    $0x74045c,%edi
0x00000000005879ac <+61684>:	call   0x573c83 <Py_DECREF>
0x00000000005879b1 <+61689>:	test   %r14,%r14
0x00000000005879b4 <+61692>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005879ba <+61698>:	movzwl 0xe(%r13),%r12d
0x00000000005879bf <+61703>:	mov    %r12d,%eax
0x00000000005879c2 <+61706>:	shr    $0x8,%ax
0x00000000005879c6 <+61710>:	movzwl %ax,%eax
0x00000000005879c9 <+61713>:	mov    %eax,0x8(%rsp)
0x00000000005879cd <+61717>:	cmpl   $0x0,0x14(%rsp)
0x00000000005879d2 <+61722>:	jne    0x587aca <_PyEval_EvalFrameDefault+61970>
0x00000000005879d8 <+61728>:	movzbl 0xc0(%rsp),%eax
0x00000000005879e0 <+61736>:	lea    -0x1(%rax),%edx
0x00000000005879e3 <+61739>:	cmp    $0xfd,%dl
0x00000000005879e6 <+61742>:	jbe    0x587add <_PyEval_EvalFrameDefault+61989>
0x00000000005879ec <+61748>:	cmpw   $0x0,0x537a58(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005879f4 <+61756>:	jne    0x587af6 <_PyEval_EvalFrameDefault+62014>
0x00000000005879fa <+61762>:	mov    $0x0,%edx
0x00000000005879ff <+61767>:	or     %edx,%eax
0x0000000000587a01 <+61769>:	or     %eax,%r12d
0x0000000000587a04 <+61772>:	movzbl %r12b,%eax
0x0000000000587a08 <+61776>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000587a10 <+61784>:	mov    %r15,%r13
0x0000000000587a13 <+61787>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000587a18 <+61792>:	mov    $0x7444e0,%ecx
0x0000000000587a1d <+61797>:	mov    $0x141c,%edx
0x0000000000587a22 <+61802>:	mov    $0x74045c,%esi
0x0000000000587a27 <+61807>:	mov    $0x7408ff,%edi
0x0000000000587a2c <+61812>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587a31 <+61817>:	mov    $0x7444e0,%ecx
0x0000000000587a36 <+61822>:	mov    $0x141d,%edx
0x0000000000587a3b <+61827>:	mov    $0x74045c,%esi
0x0000000000587a40 <+61832>:	mov    $0x740c10,%edi
0x0000000000587a45 <+61837>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587a4a <+61842>:	mov    $0x7444e0,%ecx
0x0000000000587a4f <+61847>:	mov    $0x1427,%edx
0x0000000000587a54 <+61852>:	mov    $0x74045c,%esi
0x0000000000587a59 <+61857>:	mov    $0x7408da,%edi
0x0000000000587a5e <+61862>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587a63 <+61867>:	mov    0x8(%rsp),%rdx
0x0000000000587a68 <+61872>:	mov    $0x142b,%esi
0x0000000000587a6d <+61877>:	mov    $0x74045c,%edi
0x0000000000587a72 <+61882>:	call   0x573c83 <Py_DECREF>
0x0000000000587a77 <+61887>:	mov    %r12,%rbx
0x0000000000587a7a <+61890>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000587a7f <+61895>:	mov    $0x7444e0,%ecx
0x0000000000587a84 <+61900>:	mov    $0x142f,%edx
0x0000000000587a89 <+61905>:	mov    $0x74045c,%esi
0x0000000000587a8e <+61910>:	mov    $0x743338,%edi
0x0000000000587a93 <+61915>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587a98 <+61920>:	mov    $0x7444e0,%ecx
0x0000000000587a9d <+61925>:	mov    $0x1431,%edx
0x0000000000587aa2 <+61930>:	mov    $0x74045c,%esi
0x0000000000587aa7 <+61935>:	mov    $0x740c57,%edi
0x0000000000587aac <+61940>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587ab1 <+61945>:	mov    $0x7444e0,%ecx
0x0000000000587ab6 <+61950>:	mov    $0x1431,%edx
0x0000000000587abb <+61955>:	mov    $0x74045c,%esi
0x0000000000587ac0 <+61960>:	mov    $0x740c66,%edi
0x0000000000587ac5 <+61965>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587aca <+61970>:	mov    %r15,%rdx
0x0000000000587acd <+61973>:	mov    %rbx,%rsi
0x0000000000587ad0 <+61976>:	mov    %rbp,%rdi
0x0000000000587ad3 <+61979>:	call   0x573f7b <lltrace_instruction>
0x0000000000587ad8 <+61984>:	jmp    0x5879d8 <_PyEval_EvalFrameDefault+61728>
0x0000000000587add <+61989>:	mov    $0x7444e0,%ecx
0x0000000000587ae2 <+61994>:	mov    $0x1439,%edx
0x0000000000587ae7 <+61999>:	mov    $0x74045c,%esi
0x0000000000587aec <+62004>:	mov    $0x742a50,%edi
0x0000000000587af1 <+62009>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587af6 <+62014>:	mov    $0xffffffff,%edx
0x0000000000587afb <+62019>:	jmp    0x5879ff <_PyEval_EvalFrameDefault+61767>
0x0000000000587b00 <+62024>:	lea    0x2(%r13),%r15
0x0000000000587b04 <+62028>:	mov    %r13,0x38(%rbp)
0x0000000000587b08 <+62032>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000587b10 <+62040>:	jne    0x587c57 <_PyEval_EvalFrameDefault+62367>
0x0000000000587b16 <+62046>:	cmpq   $0x0,0x20(%rsp)
0x0000000000587b1c <+62052>:	jne    0x587c70 <_PyEval_EvalFrameDefault+62392>
0x0000000000587b22 <+62058>:	cmpl   $0x1,0x8(%rsp)
0x0000000000587b27 <+62063>:	jne    0x587c89 <_PyEval_EvalFrameDefault+62417>
0x0000000000587b2d <+62069>:	mov    -0x18(%rbx),%rax
0x0000000000587b31 <+62073>:	mov    %rax,%r14
0x0000000000587b34 <+62076>:	mov    %rax,0x48(%rsp)
0x0000000000587b39 <+62081>:	call   0x5771cd <_PyInterpreterState_GET>
0x0000000000587b3e <+62086>:	cmp    %r14,0x1a370(%rax)
0x0000000000587b45 <+62093>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587b4b <+62099>:	mov    -0x10(%rbx),%r14
0x0000000000587b4f <+62103>:	mov    0x8(%r14),%rax
0x0000000000587b53 <+62107>:	testb  $0x2,0xab(%rax)
0x0000000000587b5a <+62114>:	je     0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587b60 <+62120>:	lea    0x48(%rbp),%r12
0x0000000000587b64 <+62124>:	mov    0x20(%rbp),%rax
0x0000000000587b68 <+62128>:	movslq 0x4c(%rax),%rax
0x0000000000587b6c <+62132>:	lea    (%r12,%rax,8),%rdx
0x0000000000587b70 <+62136>:	mov    %rbx,%rax
0x0000000000587b73 <+62139>:	sub    %rdx,%rax
0x0000000000587b76 <+62142>:	sar    $0x3,%rax
0x0000000000587b7a <+62146>:	test   %eax,%eax
0x0000000000587b7c <+62148>:	jle    0x587ca2 <_PyEval_EvalFrameDefault+62442>
0x0000000000587b82 <+62154>:	lea    -0x8(%rbx),%rax
0x0000000000587b86 <+62158>:	mov    %rax,0x8(%rsp)
0x0000000000587b8b <+62163>:	mov    -0x8(%rbx),%rsi
0x0000000000587b8f <+62167>:	mov    %r14,%rdi
0x0000000000587b92 <+62170>:	call   0x5769f8 <_PyList_AppendTakeRef>
0x0000000000587b97 <+62175>:	test   %eax,%eax
0x0000000000587b99 <+62177>:	js     0x589ba5 <_PyEval_EvalFrameDefault+70381>
0x0000000000587b9f <+62183>:	mov    0x20(%rbp),%rax
0x0000000000587ba3 <+62187>:	movslq 0x4c(%rax),%rax
0x0000000000587ba7 <+62191>:	lea    (%r12,%rax,8),%rdx
0x0000000000587bab <+62195>:	mov    0x8(%rsp),%rax
0x0000000000587bb0 <+62200>:	sub    %rdx,%rax
0x0000000000587bb3 <+62203>:	sar    $0x3,%rax
0x0000000000587bb7 <+62207>:	cmp    $0x1,%eax
0x0000000000587bba <+62210>:	jle    0x587cbb <_PyEval_EvalFrameDefault+62467>
0x0000000000587bc0 <+62216>:	sub    $0x18,%rbx
0x0000000000587bc4 <+62220>:	mov    %r14,%rdx
0x0000000000587bc7 <+62223>:	mov    $0x144b,%esi
0x0000000000587bcc <+62228>:	mov    $0x74045c,%edi
0x0000000000587bd1 <+62233>:	call   0x573c83 <Py_DECREF>
0x0000000000587bd6 <+62238>:	mov    0x48(%rsp),%rdx
0x0000000000587bdb <+62243>:	mov    $0x144c,%esi
0x0000000000587be0 <+62248>:	mov    $0x74045c,%edi
0x0000000000587be5 <+62253>:	call   0x573c83 <Py_DECREF>
0x0000000000587bea <+62258>:	lea    0x10(%r13),%r14
0x0000000000587bee <+62262>:	cmpb   $0x1,0xe(%r13)
0x0000000000587bf3 <+62267>:	jne    0x587cd4 <_PyEval_EvalFrameDefault+62492>
0x0000000000587bf9 <+62273>:	movzwl 0x10(%r13),%r12d
0x0000000000587bfe <+62278>:	mov    %r12d,%eax
0x0000000000587c01 <+62281>:	shr    $0x8,%ax
0x0000000000587c05 <+62285>:	movzwl %ax,%eax
0x0000000000587c08 <+62288>:	mov    %eax,0x8(%rsp)
0x0000000000587c0c <+62292>:	cmpl   $0x0,0x14(%rsp)
0x0000000000587c11 <+62297>:	jne    0x587ced <_PyEval_EvalFrameDefault+62517>
0x0000000000587c17 <+62303>:	movzbl 0xc0(%rsp),%eax
0x0000000000587c1f <+62311>:	lea    -0x1(%rax),%edx
0x0000000000587c22 <+62314>:	cmp    $0xfd,%dl
0x0000000000587c25 <+62317>:	jbe    0x587d00 <_PyEval_EvalFrameDefault+62536>
0x0000000000587c2b <+62323>:	cmpw   $0x0,0x537819(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000587c33 <+62331>:	jne    0x587d19 <_PyEval_EvalFrameDefault+62561>
0x0000000000587c39 <+62337>:	mov    $0x0,%edx
0x0000000000587c3e <+62342>:	or     %edx,%eax
0x0000000000587c40 <+62344>:	or     %eax,%r12d
0x0000000000587c43 <+62347>:	movzbl %r12b,%eax
0x0000000000587c47 <+62351>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000587c4f <+62359>:	mov    %r14,%r13
0x0000000000587c52 <+62362>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000587c57 <+62367>:	mov    $0x7444e0,%ecx
0x0000000000587c5c <+62372>:	mov    $0x143d,%edx
0x0000000000587c61 <+62377>:	mov    $0x74045c,%esi
0x0000000000587c66 <+62382>:	mov    $0x7408ff,%edi
0x0000000000587c6b <+62387>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587c70 <+62392>:	mov    $0x7444e0,%ecx
0x0000000000587c75 <+62397>:	mov    $0x143e,%edx
0x0000000000587c7a <+62402>:	mov    $0x74045c,%esi
0x0000000000587c7f <+62407>:	mov    $0x740c10,%edi
0x0000000000587c84 <+62412>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587c89 <+62417>:	mov    $0x7444e0,%ecx
0x0000000000587c8e <+62422>:	mov    $0x143f,%edx
0x0000000000587c93 <+62427>:	mov    $0x74045c,%esi
0x0000000000587c98 <+62432>:	mov    $0x740d22,%edi
0x0000000000587c9d <+62437>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587ca2 <+62442>:	mov    $0x7444e0,%ecx
0x0000000000587ca7 <+62447>:	mov    $0x1446,%edx
0x0000000000587cac <+62452>:	mov    $0x74045c,%esi
0x0000000000587cb1 <+62457>:	mov    $0x7408da,%edi
0x0000000000587cb6 <+62462>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587cbb <+62467>:	mov    $0x7444e0,%ecx
0x0000000000587cc0 <+62472>:	mov    $0x144a,%edx
0x0000000000587cc5 <+62477>:	mov    $0x74045c,%esi
0x0000000000587cca <+62482>:	mov    $0x74092c,%edi
0x0000000000587ccf <+62487>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587cd4 <+62492>:	mov    $0x7444e0,%ecx
0x0000000000587cd9 <+62497>:	mov    $0x144f,%edx
0x0000000000587cde <+62502>:	mov    $0x74045c,%esi
0x0000000000587ce3 <+62507>:	mov    $0x743370,%edi
0x0000000000587ce8 <+62512>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587ced <+62517>:	mov    %r14,%rdx
0x0000000000587cf0 <+62520>:	mov    %rbx,%rsi
0x0000000000587cf3 <+62523>:	mov    %rbp,%rdi
0x0000000000587cf6 <+62526>:	call   0x573f7b <lltrace_instruction>
0x0000000000587cfb <+62531>:	jmp    0x587c17 <_PyEval_EvalFrameDefault+62303>
0x0000000000587d00 <+62536>:	mov    $0x7444e0,%ecx
0x0000000000587d05 <+62541>:	mov    $0x1450,%edx
0x0000000000587d0a <+62546>:	mov    $0x74045c,%esi
0x0000000000587d0f <+62551>:	mov    $0x742a50,%edi
0x0000000000587d14 <+62556>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587d19 <+62561>:	mov    $0xffffffff,%edx
0x0000000000587d1e <+62566>:	jmp    0x587c3e <_PyEval_EvalFrameDefault+62342>
0x0000000000587d23 <+62571>:	lea    0x2(%r13),%r15
0x0000000000587d27 <+62575>:	mov    %r13,0x38(%rbp)
0x0000000000587d2b <+62579>:	cmpq   $0x0,0x20(%rsp)
0x0000000000587d31 <+62585>:	jne    0x587ef1 <_PyEval_EvalFrameDefault+63033>
0x0000000000587d37 <+62591>:	mov    $0xfffffffe,%eax
0x0000000000587d3c <+62596>:	mov    0x8(%rsp),%ecx
0x0000000000587d40 <+62600>:	sub    %ecx,%eax
0x0000000000587d42 <+62602>:	cltq
0x0000000000587d44 <+62604>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000587d49 <+62609>:	setne  %al
0x0000000000587d4c <+62612>:	movzbl %al,%eax
0x0000000000587d4f <+62615>:	add    %ecx,%eax
0x0000000000587d51 <+62617>:	mov    %eax,%edx
0x0000000000587d53 <+62619>:	not    %edx
0x0000000000587d55 <+62621>:	movslq %edx,%rdx
0x0000000000587d58 <+62624>:	mov    (%rbx,%rdx,8),%r14
0x0000000000587d5c <+62628>:	cmp    $0x2,%eax
0x0000000000587d5f <+62631>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587d65 <+62637>:	cmpq   $0x986a00,0x8(%r14)
0x0000000000587d6d <+62645>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587d73 <+62651>:	mov    0x28(%r14),%rax
0x0000000000587d77 <+62655>:	cmpl   $0x8,0x10(%rax)
0x0000000000587d7b <+62659>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587d81 <+62665>:	mov    -0x8(%rbx),%rcx
0x0000000000587d85 <+62669>:	mov    %rcx,0x48(%rsp)
0x0000000000587d8a <+62674>:	mov    -0x10(%rbx),%rcx
0x0000000000587d8e <+62678>:	mov    %rcx,0x50(%rsp)
0x0000000000587d93 <+62683>:	mov    0x8(%rcx),%rcx
0x0000000000587d97 <+62687>:	cmp    %rcx,0x10(%r14)
0x0000000000587d9b <+62691>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587da1 <+62697>:	lea    0xe(%r13),%r15
0x0000000000587da5 <+62701>:	mov    0x8(%rax),%r12
0x0000000000587da9 <+62705>:	mov    $0x6db920,%esi
0x0000000000587dae <+62710>:	mov    0x18(%rsp),%rdi
0x0000000000587db3 <+62715>:	call   0x577d9b <_Py_EnterRecursiveCallTstate>
0x0000000000587db8 <+62720>:	test   %eax,%eax
0x0000000000587dba <+62722>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000587dc0 <+62728>:	mov    0x48(%rsp),%rsi
0x0000000000587dc5 <+62733>:	mov    0x50(%rsp),%rdi
0x0000000000587dca <+62738>:	call   *%r12
0x0000000000587dcd <+62741>:	mov    %rax,%r12
0x0000000000587dd0 <+62744>:	mov    0x18(%rsp),%rcx
0x0000000000587dd5 <+62749>:	mov    0x20(%rcx),%eax
0x0000000000587dd8 <+62752>:	mov    %eax,0x58(%rsp)
0x0000000000587ddc <+62756>:	add    $0x1,%eax
0x0000000000587ddf <+62759>:	mov    %eax,0x20(%rcx)
0x0000000000587de2 <+62762>:	test   %r12,%r12
0x0000000000587de5 <+62765>:	setne  0x58(%rsp)
0x0000000000587dea <+62770>:	mov    %rcx,%rdi
0x0000000000587ded <+62773>:	call   0x573630 <_PyErr_Occurred>
0x0000000000587df2 <+62778>:	test   %rax,%rax
0x0000000000587df5 <+62781>:	setne  %al
0x0000000000587df8 <+62784>:	cmp    %al,0x58(%rsp)
0x0000000000587dfc <+62788>:	je     0x587f0a <_PyEval_EvalFrameDefault+63058>
0x0000000000587e02 <+62794>:	mov    0x50(%rsp),%rdx
0x0000000000587e07 <+62799>:	mov    $0x146b,%esi
0x0000000000587e0c <+62804>:	mov    $0x74045c,%edi
0x0000000000587e11 <+62809>:	call   0x573c83 <Py_DECREF>
0x0000000000587e16 <+62814>:	mov    0x48(%rsp),%rdx
0x0000000000587e1b <+62819>:	mov    $0x146c,%esi
0x0000000000587e20 <+62824>:	mov    $0x74045c,%edi
0x0000000000587e25 <+62829>:	call   0x573c83 <Py_DECREF>
0x0000000000587e2a <+62834>:	cmpl   $0xffffffff,0x8(%rsp)
0x0000000000587e2f <+62839>:	jl     0x587f23 <_PyEval_EvalFrameDefault+63083>
0x0000000000587e35 <+62845>:	mov    0x20(%rbp),%rax
0x0000000000587e39 <+62849>:	movslq 0x4c(%rax),%rax
0x0000000000587e3d <+62853>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000587e42 <+62858>:	mov    %rbx,%rax
0x0000000000587e45 <+62861>:	sub    %rdx,%rax
0x0000000000587e48 <+62864>:	sar    $0x3,%rax
0x0000000000587e4c <+62868>:	mov    0x8(%rsp),%ecx
0x0000000000587e50 <+62872>:	cmp    %ecx,%eax
0x0000000000587e52 <+62874>:	jle    0x587f3c <_PyEval_EvalFrameDefault+63108>
0x0000000000587e58 <+62880>:	mov    0x8(%rsp),%eax
0x0000000000587e5c <+62884>:	not    %eax
0x0000000000587e5e <+62886>:	cltq
0x0000000000587e60 <+62888>:	lea    (%rbx,%rax,8),%rbx
0x0000000000587e64 <+62892>:	mov    %r12,-0x8(%rbx)
0x0000000000587e68 <+62896>:	mov    %r14,%rdx
0x0000000000587e6b <+62899>:	mov    $0x146f,%esi
0x0000000000587e70 <+62904>:	mov    $0x74045c,%edi
0x0000000000587e75 <+62909>:	call   0x573c83 <Py_DECREF>
0x0000000000587e7a <+62914>:	test   %r12,%r12
0x0000000000587e7d <+62917>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000587e83 <+62923>:	mov    0x28(%rsp),%rax
0x0000000000587e88 <+62928>:	mov    0x64(%rax),%eax
0x0000000000587e8b <+62931>:	test   %eax,%eax
0x0000000000587e8d <+62933>:	jne    0x578b83 <_PyEval_EvalFrameDefault+715>
0x0000000000587e93 <+62939>:	movzwl 0xe(%r13),%r12d
0x0000000000587e98 <+62944>:	mov    %r12d,%eax
0x0000000000587e9b <+62947>:	shr    $0x8,%ax
0x0000000000587e9f <+62951>:	movzwl %ax,%eax
0x0000000000587ea2 <+62954>:	mov    %eax,0x8(%rsp)
0x0000000000587ea6 <+62958>:	cmpl   $0x0,0x14(%rsp)
0x0000000000587eab <+62963>:	jne    0x587f55 <_PyEval_EvalFrameDefault+63133>
0x0000000000587eb1 <+62969>:	movzbl 0xc0(%rsp),%eax
0x0000000000587eb9 <+62977>:	lea    -0x1(%rax),%edx
0x0000000000587ebc <+62980>:	cmp    $0xfd,%dl
0x0000000000587ebf <+62983>:	jbe    0x587f68 <_PyEval_EvalFrameDefault+63152>
0x0000000000587ec5 <+62989>:	cmpw   $0x0,0x53757f(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000587ecd <+62997>:	jne    0x587f81 <_PyEval_EvalFrameDefault+63177>
0x0000000000587ed3 <+63003>:	mov    $0x0,%edx
0x0000000000587ed8 <+63008>:	or     %edx,%eax
0x0000000000587eda <+63010>:	or     %eax,%r12d
0x0000000000587edd <+63013>:	movzbl %r12b,%eax
0x0000000000587ee1 <+63017>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000587ee9 <+63025>:	mov    %r15,%r13
0x0000000000587eec <+63028>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000587ef1 <+63033>:	mov    $0x7444e0,%ecx
0x0000000000587ef6 <+63038>:	mov    $0x1454,%edx
0x0000000000587efb <+63043>:	mov    $0x74045c,%esi
0x0000000000587f00 <+63048>:	mov    $0x740c10,%edi
0x0000000000587f05 <+63053>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587f0a <+63058>:	mov    $0x7444e0,%ecx
0x0000000000587f0f <+63063>:	mov    $0x146a,%edx
0x0000000000587f14 <+63068>:	mov    $0x74045c,%esi
0x0000000000587f19 <+63073>:	mov    $0x743338,%edi
0x0000000000587f1e <+63078>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587f23 <+63083>:	mov    $0x7444e0,%ecx
0x0000000000587f28 <+63088>:	mov    $0x146d,%edx
0x0000000000587f2d <+63093>:	mov    $0x74045c,%esi
0x0000000000587f32 <+63098>:	mov    $0x740cd3,%edi
0x0000000000587f37 <+63103>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587f3c <+63108>:	mov    $0x7444e0,%ecx
0x0000000000587f41 <+63113>:	mov    $0x146d,%edx
0x0000000000587f46 <+63118>:	mov    $0x74045c,%esi
0x0000000000587f4b <+63123>:	mov    $0x740ce2,%edi
0x0000000000587f50 <+63128>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587f55 <+63133>:	mov    %r15,%rdx
0x0000000000587f58 <+63136>:	mov    %rbx,%rsi
0x0000000000587f5b <+63139>:	mov    %rbp,%rdi
0x0000000000587f5e <+63142>:	call   0x573f7b <lltrace_instruction>
0x0000000000587f63 <+63147>:	jmp    0x587eb1 <_PyEval_EvalFrameDefault+62969>
0x0000000000587f68 <+63152>:	mov    $0x7444e0,%ecx
0x0000000000587f6d <+63157>:	mov    $0x1474,%edx
0x0000000000587f72 <+63162>:	mov    $0x74045c,%esi
0x0000000000587f77 <+63167>:	mov    $0x742a50,%edi
0x0000000000587f7c <+63172>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000587f81 <+63177>:	mov    $0xffffffff,%edx
0x0000000000587f86 <+63182>:	jmp    0x587ed8 <_PyEval_EvalFrameDefault+63008>
0x0000000000587f8b <+63187>:	lea    0x2(%r13),%r15
0x0000000000587f8f <+63191>:	mov    %r13,0x38(%rbp)
0x0000000000587f93 <+63195>:	mov    $0xfffffffe,%eax
0x0000000000587f98 <+63200>:	mov    0x8(%rsp),%ecx
0x0000000000587f9c <+63204>:	sub    %ecx,%eax
0x0000000000587f9e <+63206>:	cltq
0x0000000000587fa0 <+63208>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000587fa5 <+63213>:	setne  %al
0x0000000000587fa8 <+63216>:	movzbl %al,%eax
0x0000000000587fab <+63219>:	mov    %eax,0x48(%rsp)
0x0000000000587faf <+63223>:	lea    (%rcx,%rax,1),%edx
0x0000000000587fb2 <+63226>:	mov    %edx,%eax
0x0000000000587fb4 <+63228>:	not    %eax
0x0000000000587fb6 <+63230>:	cltq
0x0000000000587fb8 <+63232>:	mov    (%rbx,%rax,8),%r14
0x0000000000587fbc <+63236>:	cmpq   $0x986a00,0x8(%r14)
0x0000000000587fc4 <+63244>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587fca <+63250>:	mov    0x28(%r14),%rcx
0x0000000000587fce <+63254>:	cmpl   $0x82,0x10(%rcx)
0x0000000000587fd5 <+63261>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587fdb <+63267>:	mov    %edx,%eax
0x0000000000587fdd <+63269>:	neg    %eax
0x0000000000587fdf <+63271>:	cltq
0x0000000000587fe1 <+63273>:	mov    (%rbx,%rax,8),%rax
0x0000000000587fe5 <+63277>:	mov    %rax,0x50(%rsp)
0x0000000000587fea <+63282>:	mov    0x8(%rax),%rax
0x0000000000587fee <+63286>:	cmp    %rax,0x10(%r14)
0x0000000000587ff2 <+63290>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000587ff8 <+63296>:	lea    0xe(%r13),%r15
0x0000000000587ffc <+63300>:	mov    %edx,%r12d
0x0000000000587fff <+63303>:	sub    $0x1,%r12d
0x0000000000588003 <+63307>:	js     0x5880b1 <_PyEval_EvalFrameDefault+63481>
0x0000000000588009 <+63313>:	lea    0x48(%rbp),%rsi
0x000000000058800d <+63317>:	mov    %rsi,0x60(%rsp)
0x0000000000588012 <+63322>:	mov    0x20(%rbp),%rax
0x0000000000588016 <+63326>:	movslq 0x4c(%rax),%rax
0x000000000058801a <+63330>:	lea    (%rsi,%rax,8),%rsi
0x000000000058801e <+63334>:	mov    %rbx,%rax
0x0000000000588021 <+63337>:	sub    %rsi,%rax
0x0000000000588024 <+63340>:	sar    $0x3,%rax
0x0000000000588028 <+63344>:	cmp    %r12d,%eax
0x000000000058802b <+63347>:	jl     0x5880ca <_PyEval_EvalFrameDefault+63506>
0x0000000000588031 <+63353>:	mov    $0x1,%eax
0x0000000000588036 <+63358>:	sub    %edx,%eax
0x0000000000588038 <+63360>:	cltq
0x000000000058803a <+63362>:	lea    (%rbx,%rax,8),%rbx
0x000000000058803e <+63366>:	mov    0x8(%rcx),%rax
0x0000000000588042 <+63370>:	mov    %rax,0x58(%rsp)
0x0000000000588047 <+63375>:	mov    0x20(%rsp),%rdi
0x000000000058804c <+63380>:	mov    %rdi,0x8(%rsp)
0x0000000000588051 <+63385>:	test   %rdi,%rdi
0x0000000000588054 <+63388>:	je     0x5880e3 <_PyEval_EvalFrameDefault+63531>
0x000000000058805a <+63394>:	call   0x573476 <PyTuple_GET_SIZE>
0x000000000058805f <+63399>:	mov    %r12d,%edx
0x0000000000588062 <+63402>:	sub    %eax,%edx
0x0000000000588064 <+63404>:	movslq %edx,%rdx
0x0000000000588067 <+63407>:	mov    0x8(%rsp),%rcx
0x000000000058806c <+63412>:	mov    %rbx,%rsi
0x000000000058806f <+63415>:	mov    0x50(%rsp),%rdi
0x0000000000588074 <+63420>:	mov    0x58(%rsp),%rax
0x0000000000588079 <+63425>:	call   *%rax
0x000000000058807b <+63427>:	mov    %rax,0x58(%rsp)
0x0000000000588080 <+63432>:	test   %rax,%rax
0x0000000000588083 <+63435>:	setne  0x8(%rsp)
0x0000000000588088 <+63440>:	mov    0x18(%rsp),%rdi
0x000000000058808d <+63445>:	call   0x573630 <_PyErr_Occurred>
0x0000000000588092 <+63450>:	test   %rax,%rax
0x0000000000588095 <+63453>:	setne  %al
0x0000000000588098 <+63456>:	cmp    %al,0x8(%rsp)
0x000000000058809c <+63460>:	je     0x5880ed <_PyEval_EvalFrameDefault+63541>
0x000000000058809e <+63462>:	movq   $0x0,0x20(%rsp)
0x00000000005880a7 <+63471>:	movl   $0x0,0x8(%rsp)
0x00000000005880af <+63479>:	jmp    0x588123 <_PyEval_EvalFrameDefault+63595>
0x00000000005880b1 <+63481>:	mov    $0x7444e0,%ecx
0x00000000005880b6 <+63486>:	mov    $0x1485,%edx
0x00000000005880bb <+63491>:	mov    $0x74045c,%esi
0x00000000005880c0 <+63496>:	mov    $0x6dba0c,%edi
0x00000000005880c5 <+63501>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005880ca <+63506>:	mov    $0x7444e0,%ecx
0x00000000005880cf <+63511>:	mov    $0x1485,%edx
0x00000000005880d4 <+63516>:	mov    $0x74045c,%esi
0x00000000005880d9 <+63521>:	mov    $0x740cfd,%edi
0x00000000005880de <+63526>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005880e3 <+63531>:	mov    $0x0,%eax
0x00000000005880e8 <+63536>:	jmp    0x58805f <_PyEval_EvalFrameDefault+63399>
0x00000000005880ed <+63541>:	mov    $0x7444e0,%ecx
0x00000000005880f2 <+63546>:	mov    $0x148a,%edx
0x00000000005880f7 <+63551>:	mov    $0x74045c,%esi
0x00000000005880fc <+63556>:	mov    $0x743338,%edi
0x0000000000588101 <+63561>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588106 <+63566>:	movslq 0x8(%rsp),%rax
0x000000000058810b <+63571>:	mov    (%rbx,%rax,8),%rdx
0x000000000058810f <+63575>:	mov    $0x148f,%esi
0x0000000000588114 <+63580>:	mov    $0x74045c,%edi
0x0000000000588119 <+63585>:	call   0x573c83 <Py_DECREF>
0x000000000058811e <+63590>:	addl   $0x1,0x8(%rsp)
0x0000000000588123 <+63595>:	cmp    %r12d,0x8(%rsp)
0x0000000000588128 <+63600>:	jl     0x588106 <_PyEval_EvalFrameDefault+63566>
0x000000000058812a <+63602>:	mov    0x50(%rsp),%rdx
0x000000000058812f <+63607>:	mov    $0x1491,%esi
0x0000000000588134 <+63612>:	mov    $0x74045c,%edi
0x0000000000588139 <+63617>:	call   0x573c83 <Py_DECREF>
0x000000000058813e <+63622>:	mov    $0x2,%eax
0x0000000000588143 <+63627>:	mov    0x48(%rsp),%ecx
0x0000000000588147 <+63631>:	sub    %ecx,%eax
0x0000000000588149 <+63633>:	js     0x588205 <_PyEval_EvalFrameDefault+63821>
0x000000000058814f <+63639>:	mov    0x20(%rbp),%rdx
0x0000000000588153 <+63643>:	movslq 0x4c(%rdx),%rdx
0x0000000000588157 <+63647>:	mov    0x60(%rsp),%rcx
0x000000000058815c <+63652>:	lea    (%rcx,%rdx,8),%rcx
0x0000000000588160 <+63656>:	mov    %rbx,%rdx
0x0000000000588163 <+63659>:	sub    %rcx,%rdx
0x0000000000588166 <+63662>:	sar    $0x3,%rdx
0x000000000058816a <+63666>:	cmp    %edx,%eax
0x000000000058816c <+63668>:	jg     0x58821e <_PyEval_EvalFrameDefault+63846>
0x0000000000588172 <+63674>:	mov    0x48(%rsp),%eax
0x0000000000588176 <+63678>:	sub    $0x2,%eax
0x0000000000588179 <+63681>:	cltq
0x000000000058817b <+63683>:	lea    (%rbx,%rax,8),%rbx
0x000000000058817f <+63687>:	mov    0x58(%rsp),%r12
0x0000000000588184 <+63692>:	mov    %r12,-0x8(%rbx)
0x0000000000588188 <+63696>:	mov    %r14,%rdx
0x000000000058818b <+63699>:	mov    $0x1494,%esi
0x0000000000588190 <+63704>:	mov    $0x74045c,%edi
0x0000000000588195 <+63709>:	call   0x573c83 <Py_DECREF>
0x000000000058819a <+63714>:	test   %r12,%r12
0x000000000058819d <+63717>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005881a3 <+63723>:	mov    0x28(%rsp),%rax
0x00000000005881a8 <+63728>:	mov    0x64(%rax),%eax
0x00000000005881ab <+63731>:	test   %eax,%eax
0x00000000005881ad <+63733>:	jne    0x578b88 <_PyEval_EvalFrameDefault+720>
0x00000000005881b3 <+63739>:	movzwl 0xe(%r13),%r12d
0x00000000005881b8 <+63744>:	mov    %r12d,%eax
0x00000000005881bb <+63747>:	shr    $0x8,%ax
0x00000000005881bf <+63751>:	movzwl %ax,%eax
0x00000000005881c2 <+63754>:	mov    %eax,0x8(%rsp)
0x00000000005881c6 <+63758>:	cmpl   $0x0,0x14(%rsp)
0x00000000005881cb <+63763>:	jne    0x588237 <_PyEval_EvalFrameDefault+63871>
0x00000000005881cd <+63765>:	movzbl 0xc0(%rsp),%eax
0x00000000005881d5 <+63773>:	lea    -0x1(%rax),%edx
0x00000000005881d8 <+63776>:	cmp    $0xfd,%dl
0x00000000005881db <+63779>:	jbe    0x588247 <_PyEval_EvalFrameDefault+63887>
0x00000000005881dd <+63781>:	cmpw   $0x0,0x537267(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005881e5 <+63789>:	jne    0x588260 <_PyEval_EvalFrameDefault+63912>
0x00000000005881e7 <+63791>:	mov    $0x0,%edx
0x00000000005881ec <+63796>:	or     %edx,%eax
0x00000000005881ee <+63798>:	or     %eax,%r12d
0x00000000005881f1 <+63801>:	movzbl %r12b,%eax
0x00000000005881f5 <+63805>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005881fd <+63813>:	mov    %r15,%r13
0x0000000000588200 <+63816>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000588205 <+63821>:	mov    $0x7444e0,%ecx
0x000000000058820a <+63826>:	mov    $0x1492,%edx
0x000000000058820f <+63831>:	mov    $0x74045c,%esi
0x0000000000588214 <+63836>:	mov    $0x740c57,%edi
0x0000000000588219 <+63841>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058821e <+63846>:	mov    $0x7444e0,%ecx
0x0000000000588223 <+63851>:	mov    $0x1492,%edx
0x0000000000588228 <+63856>:	mov    $0x74045c,%esi
0x000000000058822d <+63861>:	mov    $0x740c66,%edi
0x0000000000588232 <+63866>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588237 <+63871>:	mov    %r15,%rdx
0x000000000058823a <+63874>:	mov    %rbx,%rsi
0x000000000058823d <+63877>:	mov    %rbp,%rdi
0x0000000000588240 <+63880>:	call   0x573f7b <lltrace_instruction>
0x0000000000588245 <+63885>:	jmp    0x5881cd <_PyEval_EvalFrameDefault+63765>
0x0000000000588247 <+63887>:	mov    $0x7444e0,%ecx
0x000000000058824c <+63892>:	mov    $0x1499,%edx
0x0000000000588251 <+63897>:	mov    $0x74045c,%esi
0x0000000000588256 <+63902>:	mov    $0x742a50,%edi
0x000000000058825b <+63907>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588260 <+63912>:	mov    $0xffffffff,%edx
0x0000000000588265 <+63917>:	jmp    0x5881ec <_PyEval_EvalFrameDefault+63796>
0x0000000000588267 <+63919>:	lea    0x2(%r13),%r15
0x000000000058826b <+63923>:	mov    %r13,0x38(%rbp)
0x000000000058826f <+63927>:	cmpq   $0x0,0x20(%rsp)
0x0000000000588275 <+63933>:	jne    0x58841c <_PyEval_EvalFrameDefault+64356>
0x000000000058827b <+63939>:	cmpl   $0x1,0x8(%rsp)
0x0000000000588280 <+63944>:	ja     0x588435 <_PyEval_EvalFrameDefault+64381>
0x0000000000588286 <+63950>:	mov    $0xfffffffe,%eax
0x000000000058828b <+63955>:	mov    0x8(%rsp),%ecx
0x000000000058828f <+63959>:	sub    %ecx,%eax
0x0000000000588291 <+63961>:	cltq
0x0000000000588293 <+63963>:	cmpq   $0x0,(%rbx,%rax,8)
0x0000000000588298 <+63968>:	setne  %al
0x000000000058829b <+63971>:	movzbl %al,%eax
0x000000000058829e <+63974>:	add    %ecx,%eax
0x00000000005882a0 <+63976>:	cmp    $0x1,%eax
0x00000000005882a3 <+63979>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005882a9 <+63985>:	mov    -0x10(%rbx),%r14
0x00000000005882ad <+63989>:	cmpq   $0x986a00,0x8(%r14)
0x00000000005882b5 <+63997>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005882bb <+64003>:	mov    0x28(%r14),%rax
0x00000000005882bf <+64007>:	mov    -0x8(%rbx),%rcx
0x00000000005882c3 <+64011>:	mov    %rcx,0x48(%rsp)
0x00000000005882c8 <+64016>:	mov    0x8(%rcx),%rcx
0x00000000005882cc <+64020>:	cmp    %rcx,0x10(%r14)
0x00000000005882d0 <+64024>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005882d6 <+64030>:	cmpl   $0x4,0x10(%rax)
0x00000000005882da <+64034>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x00000000005882e0 <+64040>:	lea    0xe(%r13),%r15
0x00000000005882e4 <+64044>:	mov    0x8(%rax),%r12
0x00000000005882e8 <+64048>:	mov    $0x6db920,%esi
0x00000000005882ed <+64053>:	mov    0x18(%rsp),%rdi
0x00000000005882f2 <+64058>:	call   0x577d9b <_Py_EnterRecursiveCallTstate>
0x00000000005882f7 <+64063>:	test   %eax,%eax
0x00000000005882f9 <+64065>:	jne    0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005882ff <+64071>:	mov    $0x0,%esi
0x0000000000588304 <+64076>:	mov    0x48(%rsp),%rdi
0x0000000000588309 <+64081>:	call   *%r12
0x000000000058830c <+64084>:	mov    %rax,%r12
0x000000000058830f <+64087>:	mov    0x18(%rsp),%rcx
0x0000000000588314 <+64092>:	mov    0x20(%rcx),%eax
0x0000000000588317 <+64095>:	mov    %eax,0x50(%rsp)
0x000000000058831b <+64099>:	add    $0x1,%eax
0x000000000058831e <+64102>:	mov    %eax,0x20(%rcx)
0x0000000000588321 <+64105>:	test   %r12,%r12
0x0000000000588324 <+64108>:	setne  0x50(%rsp)
0x0000000000588329 <+64113>:	mov    %rcx,%rdi
0x000000000058832c <+64116>:	call   0x573630 <_PyErr_Occurred>
0x0000000000588331 <+64121>:	test   %rax,%rax
0x0000000000588334 <+64124>:	setne  %al
0x0000000000588337 <+64127>:	cmp    %al,0x50(%rsp)
0x000000000058833b <+64131>:	je     0x58844e <_PyEval_EvalFrameDefault+64406>
0x0000000000588341 <+64137>:	mov    0x48(%rsp),%rdx
0x0000000000588346 <+64142>:	mov    $0x14b3,%esi
0x000000000058834b <+64147>:	mov    $0x74045c,%edi
0x0000000000588350 <+64152>:	call   0x573c83 <Py_DECREF>
0x0000000000588355 <+64157>:	cmpl   $0xffffffff,0x8(%rsp)
0x000000000058835a <+64162>:	jl     0x588467 <_PyEval_EvalFrameDefault+64431>
0x0000000000588360 <+64168>:	mov    0x20(%rbp),%rax
0x0000000000588364 <+64172>:	movslq 0x4c(%rax),%rax
0x0000000000588368 <+64176>:	lea    0x48(%rbp,%rax,8),%rdx
0x000000000058836d <+64181>:	mov    %rbx,%rax
0x0000000000588370 <+64184>:	sub    %rdx,%rax
0x0000000000588373 <+64187>:	sar    $0x3,%rax
0x0000000000588377 <+64191>:	mov    0x8(%rsp),%ecx
0x000000000058837b <+64195>:	cmp    %ecx,%eax
0x000000000058837d <+64197>:	jle    0x588480 <_PyEval_EvalFrameDefault+64456>
0x0000000000588383 <+64203>:	mov    0x8(%rsp),%eax
0x0000000000588387 <+64207>:	not    %eax
0x0000000000588389 <+64209>:	cltq
0x000000000058838b <+64211>:	lea    (%rbx,%rax,8),%rbx
0x000000000058838f <+64215>:	mov    %r12,-0x8(%rbx)
0x0000000000588393 <+64219>:	mov    %r14,%rdx
0x0000000000588396 <+64222>:	mov    $0x14b6,%esi
0x000000000058839b <+64227>:	mov    $0x74045c,%edi
0x00000000005883a0 <+64232>:	call   0x573c83 <Py_DECREF>
0x00000000005883a5 <+64237>:	test   %r12,%r12
0x00000000005883a8 <+64240>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005883ae <+64246>:	mov    0x28(%rsp),%rax
0x00000000005883b3 <+64251>:	mov    0x64(%rax),%eax
0x00000000005883b6 <+64254>:	test   %eax,%eax
0x00000000005883b8 <+64256>:	jne    0x578b8d <_PyEval_EvalFrameDefault+725>
0x00000000005883be <+64262>:	movzwl 0xe(%r13),%r12d
0x00000000005883c3 <+64267>:	mov    %r12d,%eax
0x00000000005883c6 <+64270>:	shr    $0x8,%ax
0x00000000005883ca <+64274>:	movzwl %ax,%eax
0x00000000005883cd <+64277>:	mov    %eax,0x8(%rsp)
0x00000000005883d1 <+64281>:	cmpl   $0x0,0x14(%rsp)
0x00000000005883d6 <+64286>:	jne    0x588499 <_PyEval_EvalFrameDefault+64481>
0x00000000005883dc <+64292>:	movzbl 0xc0(%rsp),%eax
0x00000000005883e4 <+64300>:	lea    -0x1(%rax),%edx
0x00000000005883e7 <+64303>:	cmp    $0xfd,%dl
0x00000000005883ea <+64306>:	jbe    0x5884ac <_PyEval_EvalFrameDefault+64500>
0x00000000005883f0 <+64312>:	cmpw   $0x0,0x537054(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005883f8 <+64320>:	jne    0x5884c5 <_PyEval_EvalFrameDefault+64525>
0x00000000005883fe <+64326>:	mov    $0x0,%edx
0x0000000000588403 <+64331>:	or     %edx,%eax
0x0000000000588405 <+64333>:	or     %eax,%r12d
0x0000000000588408 <+64336>:	movzbl %r12b,%eax
0x000000000058840c <+64340>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000588414 <+64348>:	mov    %r15,%r13
0x0000000000588417 <+64351>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058841c <+64356>:	mov    $0x7444e0,%ecx
0x0000000000588421 <+64361>:	mov    $0x149d,%edx
0x0000000000588426 <+64366>:	mov    $0x74045c,%esi
0x000000000058842b <+64371>:	mov    $0x740c10,%edi
0x0000000000588430 <+64376>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588435 <+64381>:	mov    $0x7444e0,%ecx
0x000000000058843a <+64386>:	mov    $0x149e,%edx
0x000000000058843f <+64391>:	mov    $0x74045c,%esi
0x0000000000588444 <+64396>:	mov    $0x740d14,%edi
0x0000000000588449 <+64401>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058844e <+64406>:	mov    $0x7444e0,%ecx
0x0000000000588453 <+64411>:	mov    $0x14b2,%edx
0x0000000000588458 <+64416>:	mov    $0x74045c,%esi
0x000000000058845d <+64421>:	mov    $0x743338,%edi
0x0000000000588462 <+64426>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588467 <+64431>:	mov    $0x7444e0,%ecx
0x000000000058846c <+64436>:	mov    $0x14b4,%edx
0x0000000000588471 <+64441>:	mov    $0x74045c,%esi
0x0000000000588476 <+64446>:	mov    $0x740cd3,%edi
0x000000000058847b <+64451>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588480 <+64456>:	mov    $0x7444e0,%ecx
0x0000000000588485 <+64461>:	mov    $0x14b4,%edx
0x000000000058848a <+64466>:	mov    $0x74045c,%esi
0x000000000058848f <+64471>:	mov    $0x740ce2,%edi
0x0000000000588494 <+64476>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588499 <+64481>:	mov    %r15,%rdx
0x000000000058849c <+64484>:	mov    %rbx,%rsi
0x000000000058849f <+64487>:	mov    %rbp,%rdi
0x00000000005884a2 <+64490>:	call   0x573f7b <lltrace_instruction>
0x00000000005884a7 <+64495>:	jmp    0x5883dc <_PyEval_EvalFrameDefault+64292>
0x00000000005884ac <+64500>:	mov    $0x7444e0,%ecx
0x00000000005884b1 <+64505>:	mov    $0x14bb,%edx
0x00000000005884b6 <+64510>:	mov    $0x74045c,%esi
0x00000000005884bb <+64515>:	mov    $0x742a50,%edi
0x00000000005884c0 <+64520>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005884c5 <+64525>:	mov    $0xffffffff,%edx
0x00000000005884ca <+64530>:	jmp    0x588403 <_PyEval_EvalFrameDefault+64331>
0x00000000005884cf <+64535>:	lea    0x2(%r13),%r15
0x00000000005884d3 <+64539>:	mov    %r13,0x38(%rbp)
0x00000000005884d7 <+64543>:	cmpq   $0x0,0x20(%rsp)
0x00000000005884dd <+64549>:	jne    0x5885cb <_PyEval_EvalFrameDefault+64787>
0x00000000005884e3 <+64555>:	mov    $0xfffffffe,%eax
0x00000000005884e8 <+64560>:	mov    0x8(%rsp),%ecx
0x00000000005884ec <+64564>:	sub    %ecx,%eax
0x00000000005884ee <+64566>:	cltq
0x00000000005884f0 <+64568>:	cmpq   $0x0,(%rbx,%rax,8)
0x00000000005884f5 <+64573>:	setne  %al
0x00000000005884f8 <+64576>:	movzbl %al,%eax
0x00000000005884fb <+64579>:	mov    %eax,0x48(%rsp)
0x00000000005884ff <+64583>:	lea    (%rcx,%rax,1),%edx
0x0000000000588502 <+64586>:	mov    %edx,%eax
0x0000000000588504 <+64588>:	not    %eax
0x0000000000588506 <+64590>:	cltq
0x0000000000588508 <+64592>:	mov    (%rbx,%rax,8),%r14
0x000000000058850c <+64596>:	cmpq   $0x986a00,0x8(%r14)
0x0000000000588514 <+64604>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058851a <+64610>:	mov    0x28(%r14),%rcx
0x000000000058851e <+64614>:	cmpl   $0x80,0x10(%rcx)
0x0000000000588525 <+64621>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x000000000058852b <+64627>:	mov    %edx,%eax
0x000000000058852d <+64629>:	neg    %eax
0x000000000058852f <+64631>:	cltq
0x0000000000588531 <+64633>:	mov    (%rbx,%rax,8),%rax
0x0000000000588535 <+64637>:	mov    %rax,0x50(%rsp)
0x000000000058853a <+64642>:	mov    0x8(%rax),%rax
0x000000000058853e <+64646>:	cmp    %rax,0x10(%r14)
0x0000000000588542 <+64650>:	jne    0x57d5bf <_PyEval_EvalFrameDefault+19719>
0x0000000000588548 <+64656>:	lea    0xe(%r13),%r15
0x000000000058854c <+64660>:	mov    0x8(%rcx),%rcx
0x0000000000588550 <+64664>:	mov    %edx,%r12d
0x0000000000588553 <+64667>:	sub    $0x1,%r12d
0x0000000000588557 <+64671>:	js     0x5885e4 <_PyEval_EvalFrameDefault+64812>
0x000000000058855d <+64677>:	lea    0x48(%rbp),%rsi
0x0000000000588561 <+64681>:	mov    %rsi,0x60(%rsp)
0x0000000000588566 <+64686>:	mov    0x20(%rbp),%rax
0x000000000058856a <+64690>:	movslq 0x4c(%rax),%rax
0x000000000058856e <+64694>:	lea    (%rsi,%rax,8),%rsi
0x0000000000588572 <+64698>:	mov    %rbx,%rax
0x0000000000588575 <+64701>:	sub    %rsi,%rax
0x0000000000588578 <+64704>:	sar    $0x3,%rax
0x000000000058857c <+64708>:	cmp    %r12d,%eax
0x000000000058857f <+64711>:	jl     0x5885fd <_PyEval_EvalFrameDefault+64837>
0x0000000000588581 <+64713>:	mov    $0x1,%eax
0x0000000000588586 <+64718>:	sub    %edx,%eax
0x0000000000588588 <+64720>:	cltq
0x000000000058858a <+64722>:	lea    (%rbx,%rax,8),%rbx
0x000000000058858e <+64726>:	movslq %r12d,%rdx
0x0000000000588591 <+64729>:	mov    %rbx,%rsi
0x0000000000588594 <+64732>:	mov    0x50(%rsp),%rdi
0x0000000000588599 <+64737>:	call   *%rcx
0x000000000058859b <+64739>:	mov    %rax,0x58(%rsp)
0x00000000005885a0 <+64744>:	test   %rax,%rax
0x00000000005885a3 <+64747>:	setne  0x8(%rsp)
0x00000000005885a8 <+64752>:	mov    0x18(%rsp),%rdi
0x00000000005885ad <+64757>:	call   0x573630 <_PyErr_Occurred>
0x00000000005885b2 <+64762>:	test   %rax,%rax
0x00000000005885b5 <+64765>:	setne  %al
0x00000000005885b8 <+64768>:	cmp    %al,0x8(%rsp)
0x00000000005885bc <+64772>:	je     0x588616 <_PyEval_EvalFrameDefault+64862>
0x00000000005885be <+64774>:	movl   $0x0,0x8(%rsp)
0x00000000005885c6 <+64782>:	jmp    0x58864c <_PyEval_EvalFrameDefault+64916>
0x00000000005885cb <+64787>:	mov    $0x7444e0,%ecx
0x00000000005885d0 <+64792>:	mov    $0x14bf,%edx
0x00000000005885d5 <+64797>:	mov    $0x74045c,%esi
0x00000000005885da <+64802>:	mov    $0x740c10,%edi
0x00000000005885df <+64807>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005885e4 <+64812>:	mov    $0x7444e0,%ecx
0x00000000005885e9 <+64817>:	mov    $0x14cf,%edx
0x00000000005885ee <+64822>:	mov    $0x74045c,%esi
0x00000000005885f3 <+64827>:	mov    $0x6dba0c,%edi
0x00000000005885f8 <+64832>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005885fd <+64837>:	mov    $0x7444e0,%ecx
0x0000000000588602 <+64842>:	mov    $0x14cf,%edx
0x0000000000588607 <+64847>:	mov    $0x74045c,%esi
0x000000000058860c <+64852>:	mov    $0x740cfd,%edi
0x0000000000588611 <+64857>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588616 <+64862>:	mov    $0x7444e0,%ecx
0x000000000058861b <+64867>:	mov    $0x14d1,%edx
0x0000000000588620 <+64872>:	mov    $0x74045c,%esi
0x0000000000588625 <+64877>:	mov    $0x743338,%edi
0x000000000058862a <+64882>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058862f <+64887>:	movslq 0x8(%rsp),%rax
0x0000000000588634 <+64892>:	mov    (%rbx,%rax,8),%rdx
0x0000000000588638 <+64896>:	mov    $0x14d4,%esi
0x000000000058863d <+64901>:	mov    $0x74045c,%edi
0x0000000000588642 <+64906>:	call   0x573c83 <Py_DECREF>
0x0000000000588647 <+64911>:	addl   $0x1,0x8(%rsp)
0x000000000058864c <+64916>:	cmp    %r12d,0x8(%rsp)
0x0000000000588651 <+64921>:	jl     0x58862f <_PyEval_EvalFrameDefault+64887>
0x0000000000588653 <+64923>:	mov    0x50(%rsp),%rdx
0x0000000000588658 <+64928>:	mov    $0x14d6,%esi
0x000000000058865d <+64933>:	mov    $0x74045c,%edi
0x0000000000588662 <+64938>:	call   0x573c83 <Py_DECREF>
0x0000000000588667 <+64943>:	mov    $0x2,%eax
0x000000000058866c <+64948>:	mov    0x48(%rsp),%ecx
0x0000000000588670 <+64952>:	sub    %ecx,%eax
0x0000000000588672 <+64954>:	js     0x58872e <_PyEval_EvalFrameDefault+65142>
0x0000000000588678 <+64960>:	mov    0x20(%rbp),%rdx
0x000000000058867c <+64964>:	movslq 0x4c(%rdx),%rdx
0x0000000000588680 <+64968>:	mov    0x60(%rsp),%rcx
0x0000000000588685 <+64973>:	lea    (%rcx,%rdx,8),%rcx
0x0000000000588689 <+64977>:	mov    %rbx,%rdx
0x000000000058868c <+64980>:	sub    %rcx,%rdx
0x000000000058868f <+64983>:	sar    $0x3,%rdx
0x0000000000588693 <+64987>:	cmp    %edx,%eax
0x0000000000588695 <+64989>:	jg     0x588747 <_PyEval_EvalFrameDefault+65167>
0x000000000058869b <+64995>:	mov    0x48(%rsp),%eax
0x000000000058869f <+64999>:	sub    $0x2,%eax
0x00000000005886a2 <+65002>:	cltq
0x00000000005886a4 <+65004>:	lea    (%rbx,%rax,8),%rbx
0x00000000005886a8 <+65008>:	mov    0x58(%rsp),%r12
0x00000000005886ad <+65013>:	mov    %r12,-0x8(%rbx)
0x00000000005886b1 <+65017>:	mov    %r14,%rdx
0x00000000005886b4 <+65020>:	mov    $0x14d9,%esi
0x00000000005886b9 <+65025>:	mov    $0x74045c,%edi
0x00000000005886be <+65030>:	call   0x573c83 <Py_DECREF>
0x00000000005886c3 <+65035>:	test   %r12,%r12
0x00000000005886c6 <+65038>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005886cc <+65044>:	mov    0x28(%rsp),%rax
0x00000000005886d1 <+65049>:	mov    0x64(%rax),%eax
0x00000000005886d4 <+65052>:	test   %eax,%eax
0x00000000005886d6 <+65054>:	jne    0x578b92 <_PyEval_EvalFrameDefault+730>
0x00000000005886dc <+65060>:	movzwl 0xe(%r13),%r12d
0x00000000005886e1 <+65065>:	mov    %r12d,%eax
0x00000000005886e4 <+65068>:	shr    $0x8,%ax
0x00000000005886e8 <+65072>:	movzwl %ax,%eax
0x00000000005886eb <+65075>:	mov    %eax,0x8(%rsp)
0x00000000005886ef <+65079>:	cmpl   $0x0,0x14(%rsp)
0x00000000005886f4 <+65084>:	jne    0x588760 <_PyEval_EvalFrameDefault+65192>
0x00000000005886f6 <+65086>:	movzbl 0xc0(%rsp),%eax
0x00000000005886fe <+65094>:	lea    -0x1(%rax),%edx
0x0000000000588701 <+65097>:	cmp    $0xfd,%dl
0x0000000000588704 <+65100>:	jbe    0x588770 <_PyEval_EvalFrameDefault+65208>
0x0000000000588706 <+65102>:	cmpw   $0x0,0x536d3e(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058870e <+65110>:	jne    0x588789 <_PyEval_EvalFrameDefault+65233>
0x0000000000588710 <+65112>:	mov    $0x0,%edx
0x0000000000588715 <+65117>:	or     %edx,%eax
0x0000000000588717 <+65119>:	or     %eax,%r12d
0x000000000058871a <+65122>:	movzbl %r12b,%eax
0x000000000058871e <+65126>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000588726 <+65134>:	mov    %r15,%r13
0x0000000000588729 <+65137>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058872e <+65142>:	mov    $0x7444e0,%ecx
0x0000000000588733 <+65147>:	mov    $0x14d7,%edx
0x0000000000588738 <+65152>:	mov    $0x74045c,%esi
0x000000000058873d <+65157>:	mov    $0x740c57,%edi
0x0000000000588742 <+65162>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588747 <+65167>:	mov    $0x7444e0,%ecx
0x000000000058874c <+65172>:	mov    $0x14d7,%edx
0x0000000000588751 <+65177>:	mov    $0x74045c,%esi
0x0000000000588756 <+65182>:	mov    $0x740c66,%edi
0x000000000058875b <+65187>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588760 <+65192>:	mov    %r15,%rdx
0x0000000000588763 <+65195>:	mov    %rbx,%rsi
0x0000000000588766 <+65198>:	mov    %rbp,%rdi
0x0000000000588769 <+65201>:	call   0x573f7b <lltrace_instruction>
0x000000000058876e <+65206>:	jmp    0x5886f6 <_PyEval_EvalFrameDefault+65086>
0x0000000000588770 <+65208>:	mov    $0x7444e0,%ecx
0x0000000000588775 <+65213>:	mov    $0x14de,%edx
0x000000000058877a <+65218>:	mov    $0x74045c,%esi
0x000000000058877f <+65223>:	mov    $0x742a50,%edi
0x0000000000588784 <+65228>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588789 <+65233>:	mov    $0xffffffff,%edx
0x000000000058878e <+65238>:	jmp    0x588715 <_PyEval_EvalFrameDefault+65117>
0x0000000000588790 <+65240>:	lea    0x2(%r13),%r15
0x0000000000588794 <+65244>:	mov    %r13,0x38(%rbp)
0x0000000000588798 <+65248>:	testb  $0x1,0x8(%rsp)
0x000000000058879d <+65253>:	je     0x588883 <_PyEval_EvalFrameDefault+65483>
0x00000000005887a3 <+65259>:	mov    0x20(%rbp),%rax
0x00000000005887a7 <+65263>:	movslq 0x4c(%rax),%rax
0x00000000005887ab <+65267>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005887b0 <+65272>:	mov    %rbx,%rax
0x00000000005887b3 <+65275>:	sub    %rdx,%rax
0x00000000005887b6 <+65278>:	sar    $0x3,%rax
0x00000000005887ba <+65282>:	test   %eax,%eax
0x00000000005887bc <+65284>:	jle    0x58882d <_PyEval_EvalFrameDefault+65397>
0x00000000005887be <+65286>:	lea    -0x8(%rbx),%r12
0x00000000005887c2 <+65290>:	mov    -0x8(%rbx),%r14
0x00000000005887c6 <+65294>:	cmpq   $0x994540,0x8(%r14)
0x00000000005887ce <+65302>:	je     0x58880a <_PyEval_EvalFrameDefault+65362>
0x00000000005887d0 <+65304>:	call   0x4dfd7c <PyDict_New>
0x00000000005887d5 <+65309>:	mov    %rax,%r13
0x00000000005887d8 <+65312>:	test   %rax,%rax
0x00000000005887db <+65315>:	je     0x589baf <_PyEval_EvalFrameDefault+70391>
0x00000000005887e1 <+65321>:	mov    $0x2,%edx
0x00000000005887e6 <+65326>:	mov    %r14,%rsi
0x00000000005887e9 <+65329>:	mov    %rax,%rdi
0x00000000005887ec <+65332>:	call   0x4e3cb3 <_PyDict_MergeEx>
0x00000000005887f1 <+65337>:	test   %eax,%eax
0x00000000005887f3 <+65339>:	js     0x588846 <_PyEval_EvalFrameDefault+65422>
0x00000000005887f5 <+65341>:	mov    %r14,%rdx
0x00000000005887f8 <+65344>:	mov    $0x14f0,%esi
0x00000000005887fd <+65349>:	mov    $0x74045c,%edi
0x0000000000588802 <+65354>:	call   0x573c83 <Py_DECREF>
0x0000000000588807 <+65359>:	mov    %r13,%r14
0x000000000058880a <+65362>:	cmpq   $0x994540,0x8(%r14)
0x0000000000588812 <+65370>:	je     0x58888c <_PyEval_EvalFrameDefault+65492>
0x0000000000588814 <+65372>:	mov    $0x7444e0,%ecx
0x0000000000588819 <+65377>:	mov    $0x14f3,%edx
0x000000000058881e <+65382>:	mov    $0x74045c,%esi
0x0000000000588823 <+65387>:	mov    $0x740d2d,%edi
0x0000000000588828 <+65392>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058882d <+65397>:	mov    $0x7444e0,%ecx
0x0000000000588832 <+65402>:	mov    $0x14e5,%edx
0x0000000000588837 <+65407>:	mov    $0x74045c,%esi
0x000000000058883c <+65412>:	mov    $0x7408da,%edi
0x0000000000588841 <+65417>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588846 <+65422>:	mov    %r13,%rdx
0x0000000000588849 <+65425>:	mov    $0x14eb,%esi
0x000000000058884e <+65430>:	mov    $0x74045c,%edi
0x0000000000588853 <+65435>:	call   0x573c83 <Py_DECREF>
0x0000000000588858 <+65440>:	mov    -0x18(%rbx),%rsi
0x000000000058885c <+65444>:	mov    %r14,%rdx
0x000000000058885f <+65447>:	mov    0x18(%rsp),%rdi
0x0000000000588864 <+65452>:	call   0x576abb <format_kwargs_error>
0x0000000000588869 <+65457>:	mov    %r14,%rdx
0x000000000058886c <+65460>:	mov    $0x14ed,%esi
0x0000000000588871 <+65465>:	mov    $0x74045c,%edi
0x0000000000588876 <+65470>:	call   0x573c83 <Py_DECREF>
0x000000000058887b <+65475>:	mov    %r12,%rbx
0x000000000058887e <+65478>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000588883 <+65483>:	mov    %rbx,%r12
0x0000000000588886 <+65486>:	mov    $0x0,%r14d
0x000000000058888c <+65492>:	lea    0x48(%rbp),%rcx
0x0000000000588890 <+65496>:	mov    %rcx,0x50(%rsp)
0x0000000000588895 <+65501>:	mov    0x20(%rbp),%rax
0x0000000000588899 <+65505>:	movslq 0x4c(%rax),%rax
0x000000000058889d <+65509>:	lea    (%rcx,%rax,8),%rdx
0x00000000005888a1 <+65513>:	mov    %r12,%rax
0x00000000005888a4 <+65516>:	sub    %rdx,%rax
0x00000000005888a7 <+65519>:	sar    $0x3,%rax
0x00000000005888ab <+65523>:	test   %eax,%eax
0x00000000005888ad <+65525>:	jle    0x588a2c <_PyEval_EvalFrameDefault+65908>
0x00000000005888b3 <+65531>:	lea    -0x8(%r12),%rbx
0x00000000005888b8 <+65536>:	mov    -0x8(%r12),%r13
0x00000000005888bd <+65541>:	mov    -0x10(%r12),%rax
0x00000000005888c2 <+65546>:	mov    %rax,0x8(%rsp)
0x00000000005888c7 <+65551>:	cmpq   $0x999820,0x8(%r13)
0x00000000005888cf <+65559>:	je     0x588919 <_PyEval_EvalFrameDefault+65633>
0x00000000005888d1 <+65561>:	mov    %r13,%rdx
0x00000000005888d4 <+65564>:	mov    %rax,%rsi
0x00000000005888d7 <+65567>:	mov    0x18(%rsp),%rdi
0x00000000005888dc <+65572>:	call   0x576c33 <check_args_iterable>
0x00000000005888e1 <+65577>:	test   %eax,%eax
0x00000000005888e3 <+65579>:	js     0x588a45 <_PyEval_EvalFrameDefault+65933>
0x00000000005888e9 <+65585>:	mov    %r13,%rdi
0x00000000005888ec <+65588>:	call   0x4940e3 <PySequence_Tuple>
0x00000000005888f1 <+65593>:	mov    %rax,0x48(%rsp)
0x00000000005888f6 <+65598>:	mov    %r13,%rdx
0x00000000005888f9 <+65601>:	mov    $0x14fc,%esi
0x00000000005888fe <+65606>:	mov    $0x74045c,%edi
0x0000000000588903 <+65611>:	call   0x573c83 <Py_DECREF>
0x0000000000588908 <+65616>:	mov    0x48(%rsp),%rax
0x000000000058890d <+65621>:	test   %rax,%rax
0x0000000000588910 <+65624>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000588916 <+65630>:	mov    %rax,%r13
0x0000000000588919 <+65633>:	cmpq   $0x999820,0x8(%r13)
0x0000000000588921 <+65641>:	jne    0x588a5c <_PyEval_EvalFrameDefault+65956>
0x0000000000588927 <+65647>:	movzbl 0xc0(%rsp),%r8d
0x0000000000588930 <+65656>:	mov    %r14,%rcx
0x0000000000588933 <+65659>:	mov    %r13,%rdx
0x0000000000588936 <+65662>:	mov    0x8(%rsp),%rsi
0x000000000058893b <+65667>:	mov    0x18(%rsp),%rdi
0x0000000000588940 <+65672>:	call   0x57830d <do_call_core>
0x0000000000588945 <+65677>:	mov    %rax,0x48(%rsp)
0x000000000058894a <+65682>:	mov    0x8(%rsp),%rdx
0x000000000058894f <+65687>:	mov    $0x1504,%esi
0x0000000000588954 <+65692>:	mov    $0x74045c,%edi
0x0000000000588959 <+65697>:	call   0x573c83 <Py_DECREF>
0x000000000058895e <+65702>:	mov    %r13,%rdx
0x0000000000588961 <+65705>:	mov    $0x1505,%esi
0x0000000000588966 <+65710>:	mov    $0x74045c,%edi
0x000000000058896b <+65715>:	call   0x573c83 <Py_DECREF>
0x0000000000588970 <+65720>:	mov    %r14,%rdi
0x0000000000588973 <+65723>:	call   0x573cb3 <Py_XDECREF>
0x0000000000588978 <+65728>:	mov    0x20(%rbp),%rax
0x000000000058897c <+65732>:	movslq 0x4c(%rax),%rax
0x0000000000588980 <+65736>:	mov    0x50(%rsp),%rcx
0x0000000000588985 <+65741>:	lea    (%rcx,%rax,8),%rdx
0x0000000000588989 <+65745>:	mov    %rbx,%rax
0x000000000058898c <+65748>:	sub    %rdx,%rax
0x000000000058898f <+65751>:	sar    $0x3,%rax
0x0000000000588993 <+65755>:	test   %eax,%eax
0x0000000000588995 <+65757>:	jle    0x588a75 <_PyEval_EvalFrameDefault+65981>
0x000000000058899b <+65763>:	lea    -0x10(%r12),%rbx
0x00000000005889a0 <+65768>:	cmpq   $0x0,-0x18(%r12)
0x00000000005889a6 <+65774>:	jne    0x588a8e <_PyEval_EvalFrameDefault+66006>
0x00000000005889ac <+65780>:	mov    0x48(%rsp),%rax
0x00000000005889b1 <+65785>:	mov    %rax,-0x18(%r12)
0x00000000005889b6 <+65790>:	test   %rax,%rax
0x00000000005889b9 <+65793>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x00000000005889bf <+65799>:	mov    0x28(%rsp),%rax
0x00000000005889c4 <+65804>:	mov    0x64(%rax),%eax
0x00000000005889c7 <+65807>:	test   %eax,%eax
0x00000000005889c9 <+65809>:	jne    0x578b97 <_PyEval_EvalFrameDefault+735>
0x00000000005889cf <+65815>:	movzwl (%r15),%r12d
0x00000000005889d3 <+65819>:	mov    %r12d,%eax
0x00000000005889d6 <+65822>:	shr    $0x8,%ax
0x00000000005889da <+65826>:	movzwl %ax,%eax
0x00000000005889dd <+65829>:	mov    %eax,0x8(%rsp)
0x00000000005889e1 <+65833>:	cmpl   $0x0,0x14(%rsp)
0x00000000005889e6 <+65838>:	jne    0x588aa7 <_PyEval_EvalFrameDefault+66031>
0x00000000005889ec <+65844>:	movzbl 0xc0(%rsp),%eax
0x00000000005889f4 <+65852>:	lea    -0x1(%rax),%edx
0x00000000005889f7 <+65855>:	cmp    $0xfd,%dl
0x00000000005889fa <+65858>:	jbe    0x588aba <_PyEval_EvalFrameDefault+66050>
0x0000000000588a00 <+65864>:	cmpw   $0x0,0x536a44(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000588a08 <+65872>:	jne    0x588ad3 <_PyEval_EvalFrameDefault+66075>
0x0000000000588a0e <+65878>:	mov    $0x0,%edx
0x0000000000588a13 <+65883>:	or     %edx,%eax
0x0000000000588a15 <+65885>:	or     %eax,%r12d
0x0000000000588a18 <+65888>:	movzbl %r12b,%eax
0x0000000000588a1c <+65892>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000588a24 <+65900>:	mov    %r15,%r13
0x0000000000588a27 <+65903>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000588a2c <+65908>:	mov    $0x7444e0,%ecx
0x0000000000588a31 <+65913>:	mov    $0x14f5,%edx
0x0000000000588a36 <+65918>:	mov    $0x74045c,%esi
0x0000000000588a3b <+65923>:	mov    $0x7408da,%edi
0x0000000000588a40 <+65928>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588a45 <+65933>:	mov    %r13,%rdx
0x0000000000588a48 <+65936>:	mov    $0x14f9,%esi
0x0000000000588a4d <+65941>:	mov    $0x74045c,%edi
0x0000000000588a52 <+65946>:	call   0x573c83 <Py_DECREF>
0x0000000000588a57 <+65951>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000588a5c <+65956>:	mov    $0x7444e0,%ecx
0x0000000000588a61 <+65961>:	mov    $0x1501,%edx
0x0000000000588a66 <+65966>:	mov    $0x74045c,%esi
0x0000000000588a6b <+65971>:	mov    $0x740d47,%edi
0x0000000000588a70 <+65976>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588a75 <+65981>:	mov    $0x7444e0,%ecx
0x0000000000588a7a <+65986>:	mov    $0x1508,%edx
0x0000000000588a7f <+65991>:	mov    $0x74045c,%esi
0x0000000000588a84 <+65996>:	mov    $0x7408ec,%edi
0x0000000000588a89 <+66001>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588a8e <+66006>:	mov    $0x7444e0,%ecx
0x0000000000588a93 <+66011>:	mov    $0x1509,%edx
0x0000000000588a98 <+66016>:	mov    $0x74045c,%esi
0x0000000000588a9d <+66021>:	mov    $0x740d64,%edi
0x0000000000588aa2 <+66026>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588aa7 <+66031>:	mov    %r15,%rdx
0x0000000000588aaa <+66034>:	mov    %rbx,%rsi
0x0000000000588aad <+66037>:	mov    %rbp,%rdi
0x0000000000588ab0 <+66040>:	call   0x573f7b <lltrace_instruction>
0x0000000000588ab5 <+66045>:	jmp    0x5889ec <_PyEval_EvalFrameDefault+65844>
0x0000000000588aba <+66050>:	mov    $0x7444e0,%ecx
0x0000000000588abf <+66055>:	mov    $0x150f,%edx
0x0000000000588ac4 <+66060>:	mov    $0x74045c,%esi
0x0000000000588ac9 <+66065>:	mov    $0x742a50,%edi
0x0000000000588ace <+66070>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588ad3 <+66075>:	mov    $0xffffffff,%edx
0x0000000000588ad8 <+66080>:	jmp    0x588a13 <_PyEval_EvalFrameDefault+65883>
0x0000000000588add <+66085>:	lea    0x2(%r13),%r15
0x0000000000588ae1 <+66089>:	mov    %r13,0x38(%rbp)
0x0000000000588ae5 <+66093>:	lea    0x48(%rbp),%r14
0x0000000000588ae9 <+66097>:	mov    0x20(%rbp),%rax
0x0000000000588aed <+66101>:	movslq 0x4c(%rax),%rax
0x0000000000588af1 <+66105>:	lea    (%r14,%rax,8),%rdx
0x0000000000588af5 <+66109>:	mov    %rbx,%rax
0x0000000000588af8 <+66112>:	sub    %rdx,%rax
0x0000000000588afb <+66115>:	sar    $0x3,%rax
0x0000000000588aff <+66119>:	test   %eax,%eax
0x0000000000588b01 <+66121>:	jle    0x588cc4 <_PyEval_EvalFrameDefault+66572>
0x0000000000588b07 <+66127>:	lea    -0x8(%rbx),%r12
0x0000000000588b0b <+66131>:	mov    -0x8(%rbx),%rax
0x0000000000588b0f <+66135>:	mov    0x8(%rbp),%rsi
0x0000000000588b13 <+66139>:	mov    %rax,0x48(%rsp)
0x0000000000588b18 <+66144>:	mov    %rax,%rdi
0x0000000000588b1b <+66147>:	call   0x4c9b3f <PyFunction_New>
0x0000000000588b20 <+66152>:	mov    %rax,%r13
0x0000000000588b23 <+66155>:	mov    0x48(%rsp),%rdx
0x0000000000588b28 <+66160>:	mov    $0x1517,%esi
0x0000000000588b2d <+66165>:	mov    $0x74045c,%edi
0x0000000000588b32 <+66170>:	call   0x573c83 <Py_DECREF>
0x0000000000588b37 <+66175>:	test   %r13,%r13
0x0000000000588b3a <+66178>:	je     0x589bb7 <_PyEval_EvalFrameDefault+70399>
0x0000000000588b40 <+66184>:	testb  $0x8,0x8(%rsp)
0x0000000000588b45 <+66189>:	je     0x588b7f <_PyEval_EvalFrameDefault+66247>
0x0000000000588b47 <+66191>:	mov    -0x10(%rbx),%rdx
0x0000000000588b4b <+66195>:	cmpq   $0x999820,0x8(%rdx)
0x0000000000588b53 <+66203>:	jne    0x588cdd <_PyEval_EvalFrameDefault+66597>
0x0000000000588b59 <+66209>:	mov    0x20(%rbp),%rax
0x0000000000588b5d <+66213>:	movslq 0x4c(%rax),%rax
0x0000000000588b61 <+66217>:	lea    (%r14,%rax,8),%rcx
0x0000000000588b65 <+66221>:	mov    %r12,%rax
0x0000000000588b68 <+66224>:	sub    %rcx,%rax
0x0000000000588b6b <+66227>:	sar    $0x3,%rax
0x0000000000588b6f <+66231>:	test   %eax,%eax
0x0000000000588b71 <+66233>:	jle    0x588cf6 <_PyEval_EvalFrameDefault+66622>
0x0000000000588b77 <+66239>:	lea    -0x10(%rbx),%r12
0x0000000000588b7b <+66243>:	mov    %rdx,0x48(%r13)
0x0000000000588b7f <+66247>:	testb  $0x4,0x8(%rsp)
0x0000000000588b84 <+66252>:	je     0x588bbf <_PyEval_EvalFrameDefault+66311>
0x0000000000588b86 <+66254>:	mov    -0x8(%r12),%rdx
0x0000000000588b8b <+66259>:	cmpq   $0x999820,0x8(%rdx)
0x0000000000588b93 <+66267>:	jne    0x588d0f <_PyEval_EvalFrameDefault+66647>
0x0000000000588b99 <+66273>:	mov    0x20(%rbp),%rax
0x0000000000588b9d <+66277>:	movslq 0x4c(%rax),%rax
0x0000000000588ba1 <+66281>:	lea    (%r14,%rax,8),%rcx
0x0000000000588ba5 <+66285>:	mov    %r12,%rax
0x0000000000588ba8 <+66288>:	sub    %rcx,%rax
0x0000000000588bab <+66291>:	sar    $0x3,%rax
0x0000000000588baf <+66295>:	test   %eax,%eax
0x0000000000588bb1 <+66297>:	jle    0x588d28 <_PyEval_EvalFrameDefault+66672>
0x0000000000588bb7 <+66303>:	sub    $0x8,%r12
0x0000000000588bbb <+66307>:	mov    %rdx,0x70(%r13)
0x0000000000588bbf <+66311>:	testb  $0x2,0x8(%rsp)
0x0000000000588bc4 <+66316>:	je     0x588bff <_PyEval_EvalFrameDefault+66375>
0x0000000000588bc6 <+66318>:	mov    -0x8(%r12),%rdx
0x0000000000588bcb <+66323>:	cmpq   $0x994540,0x8(%rdx)
0x0000000000588bd3 <+66331>:	jne    0x588d41 <_PyEval_EvalFrameDefault+66697>
0x0000000000588bd9 <+66337>:	mov    0x20(%rbp),%rax
0x0000000000588bdd <+66341>:	movslq 0x4c(%rax),%rax
0x0000000000588be1 <+66345>:	lea    (%r14,%rax,8),%rcx
0x0000000000588be5 <+66349>:	mov    %r12,%rax
0x0000000000588be8 <+66352>:	sub    %rcx,%rax
0x0000000000588beb <+66355>:	sar    $0x3,%rax
0x0000000000588bef <+66359>:	test   %eax,%eax
0x0000000000588bf1 <+66361>:	jle    0x588d5a <_PyEval_EvalFrameDefault+66722>
0x0000000000588bf7 <+66367>:	sub    $0x8,%r12
0x0000000000588bfb <+66371>:	mov    %rdx,0x40(%r13)
0x0000000000588bff <+66375>:	testb  $0x1,0x8(%rsp)
0x0000000000588c04 <+66380>:	je     0x588c3f <_PyEval_EvalFrameDefault+66439>
0x0000000000588c06 <+66382>:	mov    -0x8(%r12),%rdx
0x0000000000588c0b <+66387>:	cmpq   $0x999820,0x8(%rdx)
0x0000000000588c13 <+66395>:	jne    0x588d73 <_PyEval_EvalFrameDefault+66747>
0x0000000000588c19 <+66401>:	mov    0x20(%rbp),%rax
0x0000000000588c1d <+66405>:	movslq 0x4c(%rax),%rax
0x0000000000588c21 <+66409>:	lea    (%r14,%rax,8),%rcx
0x0000000000588c25 <+66413>:	mov    %r12,%rax
0x0000000000588c28 <+66416>:	sub    %rcx,%rax
0x0000000000588c2b <+66419>:	sar    $0x3,%rax
0x0000000000588c2f <+66423>:	test   %eax,%eax
0x0000000000588c31 <+66425>:	jle    0x588d8c <_PyEval_EvalFrameDefault+66772>
0x0000000000588c37 <+66431>:	sub    $0x8,%r12
0x0000000000588c3b <+66435>:	mov    %rdx,0x38(%r13)
0x0000000000588c3f <+66439>:	lea    0x8(%r12),%rbx
0x0000000000588c44 <+66444>:	mov    %r13,(%r12)
0x0000000000588c48 <+66448>:	mov    0x20(%rbp),%rdx
0x0000000000588c4c <+66452>:	movslq 0x4c(%rdx),%rax
0x0000000000588c50 <+66456>:	lea    (%r14,%rax,8),%rcx
0x0000000000588c54 <+66460>:	mov    %rbx,%rax
0x0000000000588c57 <+66463>:	sub    %rcx,%rax
0x0000000000588c5a <+66466>:	sar    $0x3,%rax
0x0000000000588c5e <+66470>:	cmp    %eax,0x44(%rdx)
0x0000000000588c61 <+66473>:	jl     0x588da5 <_PyEval_EvalFrameDefault+66797>
0x0000000000588c67 <+66479>:	movzwl (%r15),%r12d
0x0000000000588c6b <+66483>:	mov    %r12d,%eax
0x0000000000588c6e <+66486>:	shr    $0x8,%ax
0x0000000000588c72 <+66490>:	movzwl %ax,%eax
0x0000000000588c75 <+66493>:	mov    %eax,0x8(%rsp)
0x0000000000588c79 <+66497>:	cmpl   $0x0,0x14(%rsp)
0x0000000000588c7e <+66502>:	jne    0x588dbe <_PyEval_EvalFrameDefault+66822>
0x0000000000588c84 <+66508>:	movzbl 0xc0(%rsp),%eax
0x0000000000588c8c <+66516>:	lea    -0x1(%rax),%edx
0x0000000000588c8f <+66519>:	cmp    $0xfd,%dl
0x0000000000588c92 <+66522>:	jbe    0x588dd1 <_PyEval_EvalFrameDefault+66841>
0x0000000000588c98 <+66528>:	cmpw   $0x0,0x5367ac(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000588ca0 <+66536>:	jne    0x588dea <_PyEval_EvalFrameDefault+66866>
0x0000000000588ca6 <+66542>:	mov    $0x0,%edx
0x0000000000588cab <+66547>:	or     %edx,%eax
0x0000000000588cad <+66549>:	or     %eax,%r12d
0x0000000000588cb0 <+66552>:	movzbl %r12b,%eax
0x0000000000588cb4 <+66556>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000588cbc <+66564>:	mov    %r15,%r13
0x0000000000588cbf <+66567>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000588cc4 <+66572>:	mov    $0x7444e0,%ecx
0x0000000000588cc9 <+66577>:	mov    $0x1513,%edx
0x0000000000588cce <+66582>:	mov    $0x74045c,%esi
0x0000000000588cd3 <+66587>:	mov    $0x7408da,%edi
0x0000000000588cd8 <+66592>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588cdd <+66597>:	mov    $0x7444e0,%ecx
0x0000000000588ce2 <+66602>:	mov    $0x151d,%edx
0x0000000000588ce7 <+66607>:	mov    $0x74045c,%esi
0x0000000000588cec <+66612>:	mov    $0x740d72,%edi
0x0000000000588cf1 <+66617>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588cf6 <+66622>:	mov    $0x7444e0,%ecx
0x0000000000588cfb <+66627>:	mov    $0x151e,%edx
0x0000000000588d00 <+66632>:	mov    $0x74045c,%esi
0x0000000000588d05 <+66637>:	mov    $0x7408da,%edi
0x0000000000588d0a <+66642>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588d0f <+66647>:	mov    $0x7444e0,%ecx
0x0000000000588d14 <+66652>:	mov    $0x1521,%edx
0x0000000000588d19 <+66657>:	mov    $0x74045c,%esi
0x0000000000588d1e <+66662>:	mov    $0x740d72,%edi
0x0000000000588d23 <+66667>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588d28 <+66672>:	mov    $0x7444e0,%ecx
0x0000000000588d2d <+66677>:	mov    $0x1522,%edx
0x0000000000588d32 <+66682>:	mov    $0x74045c,%esi
0x0000000000588d37 <+66687>:	mov    $0x7408da,%edi
0x0000000000588d3c <+66692>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588d41 <+66697>:	mov    $0x7444e0,%ecx
0x0000000000588d46 <+66702>:	mov    $0x1525,%edx
0x0000000000588d4b <+66707>:	mov    $0x74045c,%esi
0x0000000000588d50 <+66712>:	mov    $0x740d8c,%edi
0x0000000000588d55 <+66717>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588d5a <+66722>:	mov    $0x7444e0,%ecx
0x0000000000588d5f <+66727>:	mov    $0x1526,%edx
0x0000000000588d64 <+66732>:	mov    $0x74045c,%esi
0x0000000000588d69 <+66737>:	mov    $0x7408da,%edi
0x0000000000588d6e <+66742>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588d73 <+66747>:	mov    $0x7444e0,%ecx
0x0000000000588d78 <+66752>:	mov    $0x1529,%edx
0x0000000000588d7d <+66757>:	mov    $0x74045c,%esi
0x0000000000588d82 <+66762>:	mov    $0x740d72,%edi
0x0000000000588d87 <+66767>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588d8c <+66772>:	mov    $0x7444e0,%ecx
0x0000000000588d91 <+66777>:	mov    $0x152a,%edx
0x0000000000588d96 <+66782>:	mov    $0x74045c,%esi
0x0000000000588d9b <+66787>:	mov    $0x7408da,%edi
0x0000000000588da0 <+66792>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588da5 <+66797>:	mov    $0x7444e0,%ecx
0x0000000000588daa <+66802>:	mov    $0x152d,%edx
0x0000000000588daf <+66807>:	mov    $0x74045c,%esi
0x0000000000588db4 <+66812>:	mov    $0x7408bc,%edi
0x0000000000588db9 <+66817>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588dbe <+66822>:	mov    %r15,%rdx
0x0000000000588dc1 <+66825>:	mov    %rbx,%rsi
0x0000000000588dc4 <+66828>:	mov    %rbp,%rdi
0x0000000000588dc7 <+66831>:	call   0x573f7b <lltrace_instruction>
0x0000000000588dcc <+66836>:	jmp    0x588c84 <_PyEval_EvalFrameDefault+66508>
0x0000000000588dd1 <+66841>:	mov    $0x7444e0,%ecx
0x0000000000588dd6 <+66846>:	mov    $0x152e,%edx
0x0000000000588ddb <+66851>:	mov    $0x74045c,%esi
0x0000000000588de0 <+66856>:	mov    $0x742a50,%edi
0x0000000000588de5 <+66861>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588dea <+66866>:	mov    $0xffffffff,%edx
0x0000000000588def <+66871>:	jmp    0x588cab <_PyEval_EvalFrameDefault+66547>
0x0000000000588df4 <+66876>:	lea    0x2(%r13),%r15
0x0000000000588df8 <+66880>:	mov    %r13,0x38(%rbp)
0x0000000000588dfc <+66884>:	mov    0x0(%rbp),%rdi
0x0000000000588e00 <+66888>:	call   0x4c0c2c <_Py_MakeCoro>
0x0000000000588e05 <+66893>:	mov    %rax,%r12
0x0000000000588e08 <+66896>:	test   %rax,%rax
0x0000000000588e0b <+66899>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000588e11 <+66905>:	lea    0x48(%rbp),%rdx
0x0000000000588e15 <+66909>:	mov    0x20(%rbp),%rax
0x0000000000588e19 <+66913>:	movslq 0x4c(%rax),%rax
0x0000000000588e1d <+66917>:	lea    (%rdx,%rax,8),%rcx
0x0000000000588e21 <+66921>:	mov    %rbx,%rax
0x0000000000588e24 <+66924>:	sub    %rcx,%rax
0x0000000000588e27 <+66927>:	sar    $0x3,%rax
0x0000000000588e2b <+66931>:	test   %eax,%eax
0x0000000000588e2d <+66933>:	jne    0x588f17 <_PyEval_EvalFrameDefault+67167>
0x0000000000588e33 <+66939>:	mov    %rbx,%rax
0x0000000000588e36 <+66942>:	sub    %rdx,%rax
0x0000000000588e39 <+66945>:	sar    $0x3,%rax
0x0000000000588e3d <+66949>:	mov    %eax,0x40(%rbp)
0x0000000000588e40 <+66952>:	lea    0x50(%r12),%rsi
0x0000000000588e45 <+66957>:	mov    %rbp,%rdi
0x0000000000588e48 <+66960>:	call   0x5a5168 <_PyFrame_Copy>
0x0000000000588e4d <+66965>:	cmpq   $0x0,0x28(%rbp)
0x0000000000588e52 <+66970>:	jne    0x588f30 <_PyEval_EvalFrameDefault+67192>
0x0000000000588e58 <+66976>:	movb   $0xfe,0x4b(%r12)
0x0000000000588e5e <+66982>:	movb   $0x1,0x95(%r12)
0x0000000000588e67 <+66991>:	mov    0x18(%rsp),%rcx
0x0000000000588e6c <+66996>:	mov    0x20(%rcx),%eax
0x0000000000588e6f <+66999>:	mov    %eax,0x8(%rsp)
0x0000000000588e73 <+67003>:	add    $0x1,%eax
0x0000000000588e76 <+67006>:	mov    %eax,0x20(%rcx)
0x0000000000588e79 <+67009>:	cmpb   $0x0,0x44(%rbp)
0x0000000000588e7d <+67013>:	je     0x588f49 <_PyEval_EvalFrameDefault+67217>
0x0000000000588e83 <+67019>:	movl   $0x0,0x40(%rbp)
0x0000000000588e8a <+67026>:	movq   $0x0,0x18(%rbp)
0x0000000000588e92 <+67034>:	mov    0x0(%rbp),%rdx
0x0000000000588e96 <+67038>:	addq   $0x1,0x53abea(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000588e9e <+67046>:	mov    (%rdx),%rax
0x0000000000588ea1 <+67049>:	add    $0x1,%rax
0x0000000000588ea5 <+67053>:	mov    %rax,(%rdx)
0x0000000000588ea8 <+67056>:	mov    0x20(%rbp),%rdx
0x0000000000588eac <+67060>:	addq   $0x1,0x53abd4(%rip)        # 0xac3a88 <_Py_RefTotal>
0x0000000000588eb4 <+67068>:	mov    (%rdx),%rax
0x0000000000588eb7 <+67071>:	add    $0x1,%rax
0x0000000000588ebb <+67075>:	mov    %rax,(%rdx)
0x0000000000588ebe <+67078>:	mov    0xd0(%rsp),%rax
0x0000000000588ec6 <+67086>:	mov    0x18(%rsp),%rcx
0x0000000000588ecb <+67091>:	mov    %rax,0x38(%rcx)
0x0000000000588ecf <+67095>:	movzbl 0xc0(%rsp),%edx
0x0000000000588ed7 <+67103>:	mov    %dl,(%rax)
0x0000000000588ed9 <+67105>:	mov    0x38(%rcx),%rax
0x0000000000588edd <+67109>:	mov    0x30(%rbp),%rcx
0x0000000000588ee1 <+67113>:	cmp    %rcx,0x8(%rax)
0x0000000000588ee5 <+67117>:	jne    0x588f7e <_PyEval_EvalFrameDefault+67270>
0x0000000000588eeb <+67123>:	mov    0x18(%rsp),%rdi
0x0000000000588ef0 <+67128>:	call   0x573630 <_PyErr_Occurred>
0x0000000000588ef5 <+67133>:	test   %rax,%rax
0x0000000000588ef8 <+67136>:	je     0x578adb <_PyEval_EvalFrameDefault+547>
0x0000000000588efe <+67142>:	mov    $0x7444e0,%ecx
0x0000000000588f03 <+67147>:	mov    $0x154e,%edx
0x0000000000588f08 <+67152>:	mov    $0x74045c,%esi
0x0000000000588f0d <+67157>:	mov    $0x6dba3b,%edi
0x0000000000588f12 <+67162>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588f17 <+67167>:	mov    $0x7444e0,%ecx
0x0000000000588f1c <+67172>:	mov    $0x1536,%edx
0x0000000000588f21 <+67177>:	mov    $0x74045c,%esi
0x0000000000588f26 <+67182>:	mov    $0x7409bb,%edi
0x0000000000588f2b <+67187>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588f30 <+67192>:	mov    $0x7444e0,%ecx
0x0000000000588f35 <+67197>:	mov    $0x153a,%edx
0x0000000000588f3a <+67202>:	mov    $0x74045c,%esi
0x0000000000588f3f <+67207>:	mov    $0x6e318e,%edi
0x0000000000588f44 <+67212>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588f49 <+67217>:	mov    0x30(%rbp),%rbx
0x0000000000588f4d <+67221>:	mov    %rbp,%rsi
0x0000000000588f50 <+67224>:	mov    %rcx,%rdi
0x0000000000588f53 <+67227>:	call   0x5c9e9a <_PyThreadState_PopFrame>
0x0000000000588f58 <+67232>:	mov    %rbx,0xc8(%rsp)
0x0000000000588f60 <+67240>:	mov    0x40(%rbx),%eax
0x0000000000588f63 <+67243>:	movslq %eax,%rdx
0x0000000000588f66 <+67246>:	mov    %r12,0x48(%rbx,%rdx,8)
0x0000000000588f6b <+67251>:	add    $0x1,%eax
0x0000000000588f6e <+67254>:	mov    %eax,0x40(%rbx)
0x0000000000588f71 <+67257>:	mov    0x14(%rsp),%r14d
0x0000000000588f76 <+67262>:	mov    %rbx,%rbp
0x0000000000588f79 <+67265>:	jmp    0x57b1c5 <_PyEval_EvalFrameDefault+10509>
0x0000000000588f7e <+67270>:	mov    $0x7444e0,%ecx
0x0000000000588f83 <+67275>:	mov    $0x154d,%edx
0x0000000000588f88 <+67280>:	mov    $0x74045c,%esi
0x0000000000588f8d <+67285>:	mov    $0x6e2990,%edi
0x0000000000588f92 <+67290>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000588f97 <+67295>:	lea    0x2(%r13),%r15
0x0000000000588f9b <+67299>:	mov    %r13,0x38(%rbp)
0x0000000000588f9f <+67303>:	cmpl   $0x3,0x8(%rsp)
0x0000000000588fa4 <+67308>:	je     0x589093 <_PyEval_EvalFrameDefault+67547>
0x0000000000588faa <+67314>:	mov    $0x0,%r12d
0x0000000000588fb0 <+67320>:	mov    0x20(%rbp),%rax
0x0000000000588fb4 <+67324>:	movslq 0x4c(%rax),%rax
0x0000000000588fb8 <+67328>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000588fbd <+67333>:	mov    %rbx,%rax
0x0000000000588fc0 <+67336>:	sub    %rdx,%rax
0x0000000000588fc3 <+67339>:	sar    $0x3,%rax
0x0000000000588fc7 <+67343>:	test   %eax,%eax
0x0000000000588fc9 <+67345>:	jle    0x5890d4 <_PyEval_EvalFrameDefault+67612>
0x0000000000588fcf <+67351>:	lea    -0x8(%rbx),%r13
0x0000000000588fd3 <+67355>:	mov    -0x8(%rbx),%rax
0x0000000000588fd7 <+67359>:	mov    -0x10(%rbx),%r14
0x0000000000588fdb <+67363>:	mov    %r12,%rdx
0x0000000000588fde <+67366>:	mov    %rax,0x8(%rsp)
0x0000000000588fe3 <+67371>:	mov    %rax,%rsi
0x0000000000588fe6 <+67374>:	mov    %r14,%rdi
0x0000000000588fe9 <+67377>:	call   0x4fcf78 <PySlice_New>
0x0000000000588fee <+67382>:	mov    %rax,0x48(%rsp)
0x0000000000588ff3 <+67387>:	mov    %r14,%rdx
0x0000000000588ff6 <+67390>:	mov    $0x155b,%esi
0x0000000000588ffb <+67395>:	mov    $0x74045c,%edi
0x0000000000589000 <+67400>:	call   0x573c83 <Py_DECREF>
0x0000000000589005 <+67405>:	mov    0x8(%rsp),%rdx
0x000000000058900a <+67410>:	mov    $0x155c,%esi
0x000000000058900f <+67415>:	mov    $0x74045c,%edi
0x0000000000589014 <+67420>:	call   0x573c83 <Py_DECREF>
0x0000000000589019 <+67425>:	mov    %r12,%rdi
0x000000000058901c <+67428>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589021 <+67433>:	mov    0x48(%rsp),%rax
0x0000000000589026 <+67438>:	mov    %rax,-0x10(%rbx)
0x000000000058902a <+67442>:	test   %rax,%rax
0x000000000058902d <+67445>:	je     0x589bbf <_PyEval_EvalFrameDefault+70407>
0x0000000000589033 <+67451>:	movzwl (%r15),%r12d
0x0000000000589037 <+67455>:	mov    %r12d,%eax
0x000000000058903a <+67458>:	shr    $0x8,%ax
0x000000000058903e <+67462>:	movzwl %ax,%eax
0x0000000000589041 <+67465>:	mov    %eax,0x8(%rsp)
0x0000000000589045 <+67469>:	cmpl   $0x0,0x14(%rsp)
0x000000000058904a <+67474>:	jne    0x5890ed <_PyEval_EvalFrameDefault+67637>
0x0000000000589050 <+67480>:	movzbl 0xc0(%rsp),%eax
0x0000000000589058 <+67488>:	lea    -0x1(%rax),%edx
0x000000000058905b <+67491>:	cmp    $0xfd,%dl
0x000000000058905e <+67494>:	jbe    0x589100 <_PyEval_EvalFrameDefault+67656>
0x0000000000589064 <+67500>:	cmpw   $0x0,0x5363e0(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058906c <+67508>:	jne    0x589119 <_PyEval_EvalFrameDefault+67681>
0x0000000000589072 <+67514>:	mov    $0x0,%edx
0x0000000000589077 <+67519>:	or     %edx,%eax
0x0000000000589079 <+67521>:	or     %eax,%r12d
0x000000000058907c <+67524>:	movzbl %r12b,%eax
0x0000000000589080 <+67528>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000589088 <+67536>:	mov    %r13,%rbx
0x000000000058908b <+67539>:	mov    %r15,%r13
0x000000000058908e <+67542>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000589093 <+67547>:	mov    0x20(%rbp),%rax
0x0000000000589097 <+67551>:	movslq 0x4c(%rax),%rax
0x000000000058909b <+67555>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005890a0 <+67560>:	mov    %rbx,%rax
0x00000000005890a3 <+67563>:	sub    %rdx,%rax
0x00000000005890a6 <+67566>:	sar    $0x3,%rax
0x00000000005890aa <+67570>:	test   %eax,%eax
0x00000000005890ac <+67572>:	jle    0x5890bb <_PyEval_EvalFrameDefault+67587>
0x00000000005890ae <+67574>:	mov    -0x8(%rbx),%r12
0x00000000005890b2 <+67578>:	lea    -0x8(%rbx),%rbx
0x00000000005890b6 <+67582>:	jmp    0x588fb0 <_PyEval_EvalFrameDefault+67320>
0x00000000005890bb <+67587>:	mov    $0x7444e0,%ecx
0x00000000005890c0 <+67592>:	mov    $0x1555,%edx
0x00000000005890c5 <+67597>:	mov    $0x74045c,%esi
0x00000000005890ca <+67602>:	mov    $0x7408da,%edi
0x00000000005890cf <+67607>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005890d4 <+67612>:	mov    $0x7444e0,%ecx
0x00000000005890d9 <+67617>:	mov    $0x1558,%edx
0x00000000005890de <+67622>:	mov    $0x74045c,%esi
0x00000000005890e3 <+67627>:	mov    $0x7408da,%edi
0x00000000005890e8 <+67632>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005890ed <+67637>:	mov    %r15,%rdx
0x00000000005890f0 <+67640>:	mov    %r13,%rsi
0x00000000005890f3 <+67643>:	mov    %rbp,%rdi
0x00000000005890f6 <+67646>:	call   0x573f7b <lltrace_instruction>
0x00000000005890fb <+67651>:	jmp    0x589050 <_PyEval_EvalFrameDefault+67480>
0x0000000000589100 <+67656>:	mov    $0x7444e0,%ecx
0x0000000000589105 <+67661>:	mov    $0x1561,%edx
0x000000000058910a <+67666>:	mov    $0x74045c,%esi
0x000000000058910f <+67671>:	mov    $0x742a50,%edi
0x0000000000589114 <+67676>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589119 <+67681>:	mov    $0xffffffff,%edx
0x000000000058911e <+67686>:	jmp    0x589077 <_PyEval_EvalFrameDefault+67519>
0x0000000000589123 <+67691>:	lea    0x2(%r13),%r15
0x0000000000589127 <+67695>:	mov    %r13,0x38(%rbp)
0x000000000058912b <+67699>:	mov    0x8(%rsp),%eax
0x000000000058912f <+67703>:	mov    %eax,%ecx
0x0000000000589131 <+67705>:	and    $0x3,%ecx
0x0000000000589134 <+67708>:	test   $0x4,%al
0x0000000000589136 <+67710>:	je     0x58917b <_PyEval_EvalFrameDefault+67779>
0x0000000000589138 <+67712>:	mov    0x20(%rbp),%rax
0x000000000058913c <+67716>:	movslq 0x4c(%rax),%rax
0x0000000000589140 <+67720>:	lea    0x48(%rbp,%rax,8),%rdx
0x0000000000589145 <+67725>:	mov    %rbx,%rax
0x0000000000589148 <+67728>:	sub    %rdx,%rax
0x000000000058914b <+67731>:	sar    $0x3,%rax
0x000000000058914f <+67735>:	test   %eax,%eax
0x0000000000589151 <+67737>:	jle    0x589162 <_PyEval_EvalFrameDefault+67754>
0x0000000000589153 <+67739>:	lea    -0x8(%rbx),%r13
0x0000000000589157 <+67743>:	mov    -0x8(%rbx),%rax
0x000000000058915b <+67747>:	mov    %rax,0x8(%rsp)
0x0000000000589160 <+67752>:	jmp    0x589187 <_PyEval_EvalFrameDefault+67791>
0x0000000000589162 <+67754>:	mov    $0x7444e0,%ecx
0x0000000000589167 <+67759>:	mov    $0x156d,%edx
0x000000000058916c <+67764>:	mov    $0x74045c,%esi
0x0000000000589171 <+67769>:	mov    $0x7408da,%edi
0x0000000000589176 <+67774>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058917b <+67779>:	mov    %rbx,%r13
0x000000000058917e <+67782>:	movq   $0x0,0x8(%rsp)
0x0000000000589187 <+67791>:	lea    0x48(%rbp),%rsi
0x000000000058918b <+67795>:	mov    %rsi,0x48(%rsp)
0x0000000000589190 <+67800>:	mov    0x20(%rbp),%rax
0x0000000000589194 <+67804>:	movslq 0x4c(%rax),%rax
0x0000000000589198 <+67808>:	lea    (%rsi,%rax,8),%rdx
0x000000000058919c <+67812>:	mov    %r13,%rax
0x000000000058919f <+67815>:	sub    %rdx,%rax
0x00000000005891a2 <+67818>:	sar    $0x3,%rax
0x00000000005891a6 <+67822>:	test   %eax,%eax
0x00000000005891a8 <+67824>:	jle    0x5892ca <_PyEval_EvalFrameDefault+68114>
0x00000000005891ae <+67830>:	lea    -0x8(%r13),%rbx
0x00000000005891b2 <+67834>:	mov    -0x8(%r13),%r14
0x00000000005891b6 <+67838>:	cmp    $0x2,%ecx
0x00000000005891b9 <+67841>:	je     0x589312 <_PyEval_EvalFrameDefault+68186>
0x00000000005891bf <+67847>:	jg     0x5892e3 <_PyEval_EvalFrameDefault+68139>
0x00000000005891c5 <+67853>:	test   %ecx,%ecx
0x00000000005891c7 <+67855>:	je     0x58932b <_PyEval_EvalFrameDefault+68211>
0x00000000005891cd <+67861>:	cmp    $0x1,%ecx
0x00000000005891d0 <+67864>:	jne    0x5892f2 <_PyEval_EvalFrameDefault+68154>
0x00000000005891d6 <+67870>:	mov    $0x4f0476,%eax
0x00000000005891db <+67875>:	mov    %r14,%rdi
0x00000000005891de <+67878>:	call   *%rax
0x00000000005891e0 <+67880>:	mov    %rax,%r12
0x00000000005891e3 <+67883>:	mov    %r14,%rdx
0x00000000005891e6 <+67886>:	mov    $0x1582,%esi
0x00000000005891eb <+67891>:	mov    $0x74045c,%edi
0x00000000005891f0 <+67896>:	call   0x573c83 <Py_DECREF>
0x00000000005891f5 <+67901>:	test   %r12,%r12
0x00000000005891f8 <+67904>:	je     0x58931c <_PyEval_EvalFrameDefault+68196>
0x00000000005891fe <+67910>:	cmpq   $0x99c300,0x8(%r12)
0x0000000000589207 <+67919>:	je     0x589333 <_PyEval_EvalFrameDefault+68219>
0x000000000058920d <+67925>:	mov    0x8(%rsp),%rsi
0x0000000000589212 <+67930>:	mov    %r12,%rdi
0x0000000000589215 <+67933>:	call   0x49152f <PyObject_Format>
0x000000000058921a <+67938>:	mov    %rax,%r14
0x000000000058921d <+67941>:	mov    %r12,%rdx
0x0000000000589220 <+67944>:	mov    $0x1595,%esi
0x0000000000589225 <+67949>:	mov    $0x74045c,%edi
0x000000000058922a <+67954>:	call   0x573c83 <Py_DECREF>
0x000000000058922f <+67959>:	mov    0x8(%rsp),%rdi
0x0000000000589234 <+67964>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589239 <+67969>:	test   %r14,%r14
0x000000000058923c <+67972>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589242 <+67978>:	mov    %r14,-0x8(%r13)
0x0000000000589246 <+67982>:	mov    0x20(%rbp),%rdx
0x000000000058924a <+67986>:	movslq 0x4c(%rdx),%rax
0x000000000058924e <+67990>:	mov    0x48(%rsp),%rcx
0x0000000000589253 <+67995>:	lea    (%rcx,%rax,8),%rcx
0x0000000000589257 <+67999>:	mov    %r13,%rax
0x000000000058925a <+68002>:	sub    %rcx,%rax
0x000000000058925d <+68005>:	sar    $0x3,%rax
0x0000000000589261 <+68009>:	cmp    %eax,0x44(%rdx)
0x0000000000589264 <+68012>:	jl     0x589347 <_PyEval_EvalFrameDefault+68239>
0x000000000058926a <+68018>:	movzwl (%r15),%r12d
0x000000000058926e <+68022>:	mov    %r12d,%eax
0x0000000000589271 <+68025>:	shr    $0x8,%ax
0x0000000000589275 <+68029>:	movzwl %ax,%eax
0x0000000000589278 <+68032>:	mov    %eax,0x8(%rsp)
0x000000000058927c <+68036>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589281 <+68041>:	jne    0x589360 <_PyEval_EvalFrameDefault+68264>
0x0000000000589287 <+68047>:	movzbl 0xc0(%rsp),%eax
0x000000000058928f <+68055>:	lea    -0x1(%rax),%edx
0x0000000000589292 <+68058>:	cmp    $0xfd,%dl
0x0000000000589295 <+68061>:	jbe    0x589373 <_PyEval_EvalFrameDefault+68283>
0x000000000058929b <+68067>:	cmpw   $0x0,0x5361a9(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005892a3 <+68075>:	jne    0x58938c <_PyEval_EvalFrameDefault+68308>
0x00000000005892a9 <+68081>:	mov    $0x0,%edx
0x00000000005892ae <+68086>:	or     %edx,%eax
0x00000000005892b0 <+68088>:	or     %eax,%r12d
0x00000000005892b3 <+68091>:	movzbl %r12b,%eax
0x00000000005892b7 <+68095>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005892bf <+68103>:	mov    %r13,%rbx
0x00000000005892c2 <+68106>:	mov    %r15,%r13
0x00000000005892c5 <+68109>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005892ca <+68114>:	mov    $0x7444e0,%ecx
0x00000000005892cf <+68119>:	mov    $0x156e,%edx
0x00000000005892d4 <+68124>:	mov    $0x74045c,%esi
0x00000000005892d9 <+68129>:	mov    $0x7408da,%edi
0x00000000005892de <+68134>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005892e3 <+68139>:	cmp    $0x3,%ecx
0x00000000005892e6 <+68142>:	jne    0x5892f2 <_PyEval_EvalFrameDefault+68154>
0x00000000005892e8 <+68144>:	mov    $0x4f1059,%eax
0x00000000005892ed <+68149>:	jmp    0x5891db <_PyEval_EvalFrameDefault+67875>
0x00000000005892f2 <+68154>:	mov    $0x740da5,%edx
0x00000000005892f7 <+68159>:	mov    0x3ff8ba(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x00000000005892fe <+68166>:	mov    0x18(%rsp),%rdi
0x0000000000589303 <+68171>:	mov    $0x0,%eax
0x0000000000589308 <+68176>:	call   0x5a3574 <_PyErr_Format>
0x000000000058930d <+68181>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589312 <+68186>:	mov    $0x4f036d,%eax
0x0000000000589317 <+68191>:	jmp    0x5891db <_PyEval_EvalFrameDefault+67875>
0x000000000058931c <+68196>:	mov    0x8(%rsp),%rdi
0x0000000000589321 <+68201>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589326 <+68206>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058932b <+68211>:	mov    %r14,%r12
0x000000000058932e <+68214>:	jmp    0x5891fe <_PyEval_EvalFrameDefault+67910>
0x0000000000589333 <+68219>:	cmpq   $0x0,0x8(%rsp)
0x0000000000589339 <+68225>:	jne    0x58920d <_PyEval_EvalFrameDefault+67925>
0x000000000058933f <+68231>:	mov    %r12,%r14
0x0000000000589342 <+68234>:	jmp    0x589242 <_PyEval_EvalFrameDefault+67978>
0x0000000000589347 <+68239>:	mov    $0x7444e0,%ecx
0x000000000058934c <+68244>:	mov    $0x159c,%edx
0x0000000000589351 <+68249>:	mov    $0x74045c,%esi
0x0000000000589356 <+68254>:	mov    $0x7408bc,%edi
0x000000000058935b <+68259>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589360 <+68264>:	mov    %r15,%rdx
0x0000000000589363 <+68267>:	mov    %r13,%rsi
0x0000000000589366 <+68270>:	mov    %rbp,%rdi
0x0000000000589369 <+68273>:	call   0x573f7b <lltrace_instruction>
0x000000000058936e <+68278>:	jmp    0x589287 <_PyEval_EvalFrameDefault+68047>
0x0000000000589373 <+68283>:	mov    $0x7444e0,%ecx
0x0000000000589378 <+68288>:	mov    $0x159d,%edx
0x000000000058937d <+68293>:	mov    $0x74045c,%esi
0x0000000000589382 <+68298>:	mov    $0x742a50,%edi
0x0000000000589387 <+68303>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058938c <+68308>:	mov    $0xffffffff,%edx
0x0000000000589391 <+68313>:	jmp    0x5892ae <_PyEval_EvalFrameDefault+68086>
0x0000000000589396 <+68318>:	lea    0x2(%r13),%r14
0x000000000058939a <+68322>:	mov    %r13,0x38(%rbp)
0x000000000058939e <+68326>:	cmpl   $0x0,0x8(%rsp)
0x00000000005893a3 <+68331>:	je     0x58943e <_PyEval_EvalFrameDefault+68486>
0x00000000005893a9 <+68337>:	mov    0x8(%rsp),%eax
0x00000000005893ad <+68341>:	neg    %eax
0x00000000005893af <+68343>:	cltq
0x00000000005893b1 <+68345>:	mov    (%rbx,%rax,8),%rax
0x00000000005893b5 <+68349>:	addq   $0x1,0x53a6cb(%rip)        # 0xac3a88 <_Py_RefTotal>
0x00000000005893bd <+68357>:	mov    (%rax),%rcx
0x00000000005893c0 <+68360>:	lea    0x1(%rcx),%rdx
0x00000000005893c4 <+68364>:	mov    %rdx,(%rax)
0x00000000005893c7 <+68367>:	lea    0x8(%rbx),%r13
0x00000000005893cb <+68371>:	mov    %rax,(%rbx)
0x00000000005893ce <+68374>:	mov    0x20(%rbp),%rdx
0x00000000005893d2 <+68378>:	movslq 0x4c(%rdx),%rax
0x00000000005893d6 <+68382>:	lea    0x48(%rbp,%rax,8),%rcx
0x00000000005893db <+68387>:	mov    %r13,%rax
0x00000000005893de <+68390>:	sub    %rcx,%rax
0x00000000005893e1 <+68393>:	sar    $0x3,%rax
0x00000000005893e5 <+68397>:	cmp    %eax,0x44(%rdx)
0x00000000005893e8 <+68400>:	jl     0x589457 <_PyEval_EvalFrameDefault+68511>
0x00000000005893ea <+68402>:	movzwl (%r14),%r12d
0x00000000005893ee <+68406>:	mov    %r12d,%eax
0x00000000005893f1 <+68409>:	shr    $0x8,%ax
0x00000000005893f5 <+68413>:	movzwl %ax,%eax
0x00000000005893f8 <+68416>:	mov    %eax,0x8(%rsp)
0x00000000005893fc <+68420>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589401 <+68425>:	jne    0x589470 <_PyEval_EvalFrameDefault+68536>
0x0000000000589403 <+68427>:	movzbl 0xc0(%rsp),%eax
0x000000000058940b <+68435>:	lea    -0x1(%rax),%edx
0x000000000058940e <+68438>:	cmp    $0xfd,%dl
0x0000000000589411 <+68441>:	jbe    0x589480 <_PyEval_EvalFrameDefault+68552>
0x0000000000589413 <+68443>:	cmpw   $0x0,0x536031(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058941b <+68451>:	jne    0x589499 <_PyEval_EvalFrameDefault+68577>
0x000000000058941d <+68453>:	mov    $0x0,%edx
0x0000000000589422 <+68458>:	or     %edx,%eax
0x0000000000589424 <+68460>:	or     %eax,%r12d
0x0000000000589427 <+68463>:	movzbl %r12b,%eax
0x000000000058942b <+68467>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000589433 <+68475>:	mov    %r13,%rbx
0x0000000000589436 <+68478>:	mov    %r14,%r13
0x0000000000589439 <+68481>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058943e <+68486>:	mov    $0x7444e0,%ecx
0x0000000000589443 <+68491>:	mov    $0x15a1,%edx
0x0000000000589448 <+68496>:	mov    $0x74045c,%esi
0x000000000058944d <+68501>:	mov    $0x740dc3,%edi
0x0000000000589452 <+68506>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589457 <+68511>:	mov    $0x7444e0,%ecx
0x000000000058945c <+68516>:	mov    $0x15a4,%edx
0x0000000000589461 <+68521>:	mov    $0x74045c,%esi
0x0000000000589466 <+68526>:	mov    $0x7408bc,%edi
0x000000000058946b <+68531>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589470 <+68536>:	mov    %r14,%rdx
0x0000000000589473 <+68539>:	mov    %r13,%rsi
0x0000000000589476 <+68542>:	mov    %rbp,%rdi
0x0000000000589479 <+68545>:	call   0x573f7b <lltrace_instruction>
0x000000000058947e <+68550>:	jmp    0x589403 <_PyEval_EvalFrameDefault+68427>
0x0000000000589480 <+68552>:	mov    $0x7444e0,%ecx
0x0000000000589485 <+68557>:	mov    $0x15a5,%edx
0x000000000058948a <+68562>:	mov    $0x74045c,%esi
0x000000000058948f <+68567>:	mov    $0x742a50,%edi
0x0000000000589494 <+68572>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589499 <+68577>:	mov    $0xffffffff,%edx
0x000000000058949e <+68582>:	jmp    0x589422 <_PyEval_EvalFrameDefault+68458>
0x00000000005894a0 <+68584>:	lea    0x2(%r13),%r15
0x00000000005894a4 <+68588>:	mov    %r13,0x38(%rbp)
0x00000000005894a8 <+68592>:	mov    0x20(%rbp),%rax
0x00000000005894ac <+68596>:	movslq 0x4c(%rax),%rax
0x00000000005894b0 <+68600>:	lea    0x48(%rbp,%rax,8),%rdx
0x00000000005894b5 <+68605>:	mov    %rbx,%rax
0x00000000005894b8 <+68608>:	sub    %rdx,%rax
0x00000000005894bb <+68611>:	sar    $0x3,%rax
0x00000000005894bf <+68615>:	test   %eax,%eax
0x00000000005894c1 <+68617>:	jle    0x589599 <_PyEval_EvalFrameDefault+68833>
0x00000000005894c7 <+68623>:	sub    $0x8,%rbx
0x00000000005894cb <+68627>:	mov    (%rbx),%r12
0x00000000005894ce <+68630>:	mov    -0x8(%rbx),%r13
0x00000000005894d2 <+68634>:	cmpl   $0x0,0x8(%rsp)
0x00000000005894d7 <+68639>:	js     0x5895b2 <_PyEval_EvalFrameDefault+68858>
0x00000000005894dd <+68645>:	cmpl   $0x19,0x8(%rsp)
0x00000000005894e2 <+68650>:	ja     0x5895cb <_PyEval_EvalFrameDefault+68883>
0x00000000005894e8 <+68656>:	movslq 0x8(%rsp),%rax
0x00000000005894ed <+68661>:	mov    0x7447a0(,%rax,8),%rax
0x00000000005894f5 <+68669>:	test   %rax,%rax
0x00000000005894f8 <+68672>:	je     0x5895e4 <_PyEval_EvalFrameDefault+68908>
0x00000000005894fe <+68678>:	mov    %r12,%rsi
0x0000000000589501 <+68681>:	mov    %r13,%rdi
0x0000000000589504 <+68684>:	call   *%rax
0x0000000000589506 <+68686>:	mov    %rax,%r14
0x0000000000589509 <+68689>:	mov    %r13,%rdx
0x000000000058950c <+68692>:	mov    $0x15b0,%esi
0x0000000000589511 <+68697>:	mov    $0x74045c,%edi
0x0000000000589516 <+68702>:	call   0x573c83 <Py_DECREF>
0x000000000058951b <+68707>:	mov    %r12,%rdx
0x000000000058951e <+68710>:	mov    $0x15b1,%esi
0x0000000000589523 <+68715>:	mov    $0x74045c,%edi
0x0000000000589528 <+68720>:	call   0x573c83 <Py_DECREF>
0x000000000058952d <+68725>:	mov    %r14,-0x8(%rbx)
0x0000000000589531 <+68729>:	test   %r14,%r14
0x0000000000589534 <+68732>:	je     0x5789ce <_PyEval_EvalFrameDefault+278>
0x000000000058953a <+68738>:	lea    0x2(%r15),%r13
0x000000000058953e <+68742>:	movzwl 0x2(%r15),%r12d
0x0000000000589543 <+68747>:	mov    %r12d,%eax
0x0000000000589546 <+68750>:	shr    $0x8,%ax
0x000000000058954a <+68754>:	movzwl %ax,%eax
0x000000000058954d <+68757>:	mov    %eax,0x8(%rsp)
0x0000000000589551 <+68761>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589556 <+68766>:	jne    0x5895fd <_PyEval_EvalFrameDefault+68933>
0x000000000058955c <+68772>:	movzbl 0xc0(%rsp),%eax
0x0000000000589564 <+68780>:	lea    -0x1(%rax),%edx
0x0000000000589567 <+68783>:	cmp    $0xfd,%dl
0x000000000058956a <+68786>:	jbe    0x589610 <_PyEval_EvalFrameDefault+68952>
0x0000000000589570 <+68792>:	cmpw   $0x0,0x535ed4(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000589578 <+68800>:	jne    0x589629 <_PyEval_EvalFrameDefault+68977>
0x000000000058957e <+68806>:	mov    $0x0,%edx
0x0000000000589583 <+68811>:	or     %edx,%eax
0x0000000000589585 <+68813>:	or     %eax,%r12d
0x0000000000589588 <+68816>:	movzbl %r12b,%eax
0x000000000058958c <+68820>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000589594 <+68828>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000589599 <+68833>:	mov    $0x7444e0,%ecx
0x000000000058959e <+68838>:	mov    $0x15aa,%edx
0x00000000005895a3 <+68843>:	mov    $0x74045c,%esi
0x00000000005895a8 <+68848>:	mov    $0x7408da,%edi
0x00000000005895ad <+68853>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005895b2 <+68858>:	mov    $0x7444e0,%ecx
0x00000000005895b7 <+68863>:	mov    $0x15ac,%edx
0x00000000005895bc <+68868>:	mov    $0x74045c,%esi
0x00000000005895c1 <+68873>:	mov    $0x740dce,%edi
0x00000000005895c6 <+68878>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005895cb <+68883>:	mov    $0x7444e0,%ecx
0x00000000005895d0 <+68888>:	mov    $0x15ad,%edx
0x00000000005895d5 <+68893>:	mov    $0x74045c,%esi
0x00000000005895da <+68898>:	mov    $0x743398,%edi
0x00000000005895df <+68903>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005895e4 <+68908>:	mov    $0x7444e0,%ecx
0x00000000005895e9 <+68913>:	mov    $0x15ae,%edx
0x00000000005895ee <+68918>:	mov    $0x74045c,%esi
0x00000000005895f3 <+68923>:	mov    $0x740dd9,%edi
0x00000000005895f8 <+68928>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005895fd <+68933>:	mov    %r13,%rdx
0x0000000000589600 <+68936>:	mov    %rbx,%rsi
0x0000000000589603 <+68939>:	mov    %rbp,%rdi
0x0000000000589606 <+68942>:	call   0x573f7b <lltrace_instruction>
0x000000000058960b <+68947>:	jmp    0x58955c <_PyEval_EvalFrameDefault+68772>
0x0000000000589610 <+68952>:	mov    $0x7444e0,%ecx
0x0000000000589615 <+68957>:	mov    $0x15b7,%edx
0x000000000058961a <+68962>:	mov    $0x74045c,%esi
0x000000000058961f <+68967>:	mov    $0x742a50,%edi
0x0000000000589624 <+68972>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589629 <+68977>:	mov    $0xffffffff,%edx
0x000000000058962e <+68982>:	jmp    0x589583 <_PyEval_EvalFrameDefault+68811>
0x0000000000589633 <+68987>:	lea    0x2(%r13),%r15
0x0000000000589637 <+68991>:	mov    %r13,0x38(%rbp)
0x000000000058963b <+68995>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000589643 <+69003>:	jne    0x58965d <_PyEval_EvalFrameDefault+69029>
0x0000000000589645 <+69005>:	movzwl 0x2(%r13),%eax
0x000000000058964a <+69010>:	cmp    $0xf,%ax
0x000000000058964e <+69014>:	jbe    0x589676 <_PyEval_EvalFrameDefault+69054>
0x0000000000589650 <+69016>:	sub    $0x10,%eax
0x0000000000589653 <+69019>:	mov    %ax,0x2(%r13)
0x0000000000589658 <+69024>:	jmp    0x5894a8 <_PyEval_EvalFrameDefault+68592>
0x000000000058965d <+69029>:	mov    $0x7444e0,%ecx
0x0000000000589662 <+69034>:	mov    $0x15bb,%edx
0x0000000000589667 <+69039>:	mov    $0x74045c,%esi
0x000000000058966c <+69044>:	mov    $0x7408ff,%edi
0x0000000000589671 <+69049>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589676 <+69054>:	mov    -0x10(%rbx),%rdi
0x000000000058967a <+69058>:	mov    -0x8(%rbx),%rsi
0x000000000058967e <+69062>:	lea    0x48(%rbp),%r8
0x0000000000589682 <+69066>:	mov    0x8(%rsp),%ecx
0x0000000000589686 <+69070>:	mov    %r13,%rdx
0x0000000000589689 <+69073>:	call   0x5d039d <_Py_Specialize_BinaryOp>
0x000000000058968e <+69078>:	movzwl 0x0(%r13),%r14d
0x0000000000589693 <+69083>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589698 <+69088>:	jne    0x5896c9 <_PyEval_EvalFrameDefault+69137>
0x000000000058969a <+69090>:	movzbl 0xc0(%rsp),%r12d
0x00000000005896a3 <+69099>:	cmpw   $0x0,0x535da1(%rip)        # 0xabf44c <python_line_semaphore>
0x00000000005896ab <+69107>:	jne    0x5896d9 <_PyEval_EvalFrameDefault+69153>
0x00000000005896ad <+69109>:	mov    $0x0,%eax
0x00000000005896b2 <+69114>:	or     %eax,%r12d
0x00000000005896b5 <+69117>:	or     %r14d,%r12d
0x00000000005896b8 <+69120>:	movzbl %r12b,%eax
0x00000000005896bc <+69124>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005896c4 <+69132>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005896c9 <+69137>:	mov    %r13,%rdx
0x00000000005896cc <+69140>:	mov    %rbx,%rsi
0x00000000005896cf <+69143>:	mov    %rbp,%rdi
0x00000000005896d2 <+69146>:	call   0x573f7b <lltrace_instruction>
0x00000000005896d7 <+69151>:	jmp    0x58969a <_PyEval_EvalFrameDefault+69090>
0x00000000005896d9 <+69153>:	mov    $0xffffffff,%eax
0x00000000005896de <+69158>:	jmp    0x5896b2 <_PyEval_EvalFrameDefault+69114>
0x00000000005896e0 <+69160>:	lea    0x2(%r13),%r14
0x00000000005896e4 <+69164>:	mov    %r13,0x38(%rbp)
0x00000000005896e8 <+69168>:	cmpl   $0x0,0x8(%rsp)
0x00000000005896ed <+69173>:	je     0x58975b <_PyEval_EvalFrameDefault+69283>
0x00000000005896ef <+69175>:	mov    -0x8(%rbx),%rdx
0x00000000005896f3 <+69179>:	mov    0x8(%rsp),%eax
0x00000000005896f7 <+69183>:	neg    %eax
0x00000000005896f9 <+69185>:	cltq
0x00000000005896fb <+69187>:	lea    (%rbx,%rax,8),%rax
0x00000000005896ff <+69191>:	mov    (%rax),%rcx
0x0000000000589702 <+69194>:	mov    %rcx,-0x8(%rbx)
0x0000000000589706 <+69198>:	mov    %rdx,(%rax)
0x0000000000589709 <+69201>:	movzwl 0x2(%r13),%r12d
0x000000000058970e <+69206>:	mov    %r12d,%eax
0x0000000000589711 <+69209>:	shr    $0x8,%ax
0x0000000000589715 <+69213>:	movzwl %ax,%eax
0x0000000000589718 <+69216>:	mov    %eax,0x8(%rsp)
0x000000000058971c <+69220>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589721 <+69225>:	jne    0x589774 <_PyEval_EvalFrameDefault+69308>
0x0000000000589723 <+69227>:	movzbl 0xc0(%rsp),%eax
0x000000000058972b <+69235>:	lea    -0x1(%rax),%edx
0x000000000058972e <+69238>:	cmp    $0xfd,%dl
0x0000000000589731 <+69241>:	jbe    0x589784 <_PyEval_EvalFrameDefault+69324>
0x0000000000589733 <+69243>:	cmpw   $0x0,0x535d11(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058973b <+69251>:	jne    0x58979d <_PyEval_EvalFrameDefault+69349>
0x000000000058973d <+69253>:	mov    $0x0,%edx
0x0000000000589742 <+69258>:	or     %edx,%eax
0x0000000000589744 <+69260>:	or     %eax,%r12d
0x0000000000589747 <+69263>:	movzbl %r12b,%eax
0x000000000058974b <+69267>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000589753 <+69275>:	mov    %r14,%r13
0x0000000000589756 <+69278>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x000000000058975b <+69283>:	mov    $0x7444e0,%ecx
0x0000000000589760 <+69288>:	mov    $0x15cc,%edx
0x0000000000589765 <+69293>:	mov    $0x74045c,%esi
0x000000000058976a <+69298>:	mov    $0x740dc3,%edi
0x000000000058976f <+69303>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589774 <+69308>:	mov    %r14,%rdx
0x0000000000589777 <+69311>:	mov    %rbx,%rsi
0x000000000058977a <+69314>:	mov    %rbp,%rdi
0x000000000058977d <+69317>:	call   0x573f7b <lltrace_instruction>
0x0000000000589782 <+69322>:	jmp    0x589723 <_PyEval_EvalFrameDefault+69227>
0x0000000000589784 <+69324>:	mov    $0x7444e0,%ecx
0x0000000000589789 <+69329>:	mov    $0x15d0,%edx
0x000000000058978e <+69334>:	mov    $0x74045c,%esi
0x0000000000589793 <+69339>:	mov    $0x742a50,%edi
0x0000000000589798 <+69344>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058979d <+69349>:	mov    $0xffffffff,%edx
0x00000000005897a2 <+69354>:	jmp    0x589742 <_PyEval_EvalFrameDefault+69258>
0x00000000005897a4 <+69356>:	lea    0x2(%r13),%r14
0x00000000005897a8 <+69360>:	mov    %r13,0x38(%rbp)
0x00000000005897ac <+69364>:	cmpl   $0x0,0x8(%rsp)
0x00000000005897b1 <+69369>:	je     0x5897fa <_PyEval_EvalFrameDefault+69442>
0x00000000005897b3 <+69371>:	mov    0x8(%rsp),%ecx
0x00000000005897b7 <+69375>:	shl    $0x8,%ecx
0x00000000005897ba <+69378>:	movzwl 0x2(%r13),%eax
0x00000000005897bf <+69383>:	mov    %eax,%edx
0x00000000005897c1 <+69385>:	shr    $0x8,%dx
0x00000000005897c5 <+69389>:	movzwl %dx,%edx
0x00000000005897c8 <+69392>:	or     %ecx,%edx
0x00000000005897ca <+69394>:	mov    %edx,0x8(%rsp)
0x00000000005897ce <+69398>:	movzbl %al,%eax
0x00000000005897d1 <+69401>:	movzbl 0x7472a0(%rax),%r12d
0x00000000005897d9 <+69409>:	cmpl   $0x0,0x14(%rsp)
0x00000000005897de <+69414>:	jne    0x589813 <_PyEval_EvalFrameDefault+69467>
0x00000000005897e0 <+69416>:	cmp    $0x97,%r12b
0x00000000005897e4 <+69420>:	je     0x589823 <_PyEval_EvalFrameDefault+69483>
0x00000000005897e6 <+69422>:	movzbl %r12b,%eax
0x00000000005897ea <+69426>:	mov    0x743ce0(,%rax,8),%rax
0x00000000005897f2 <+69434>:	mov    %r14,%r13
0x00000000005897f5 <+69437>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x00000000005897fa <+69442>:	mov    $0x7444e0,%ecx
0x00000000005897ff <+69447>:	mov    $0x15d4,%edx
0x0000000000589804 <+69452>:	mov    $0x74045c,%esi
0x0000000000589809 <+69457>:	mov    $0x740dd3,%edi
0x000000000058980e <+69462>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589813 <+69467>:	mov    %r14,%rdx
0x0000000000589816 <+69470>:	mov    %rbx,%rsi
0x0000000000589819 <+69473>:	mov    %rbp,%rdi
0x000000000058981c <+69476>:	call   0x573f7b <lltrace_instruction>
0x0000000000589821 <+69481>:	jmp    0x5897e0 <_PyEval_EvalFrameDefault+69416>
0x0000000000589823 <+69483>:	mov    $0x7444e0,%ecx
0x0000000000589828 <+69488>:	mov    $0x15e0,%edx
0x000000000058982d <+69493>:	mov    $0x74045c,%esi
0x0000000000589832 <+69498>:	mov    $0x740deb,%edi
0x0000000000589837 <+69503>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058983c <+69508>:	lea    0x2(%r13),%rcx
0x0000000000589840 <+69512>:	mov    %r13,0x38(%rbp)
0x0000000000589844 <+69516>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058984c <+69524>:	jne    0x589884 <_PyEval_EvalFrameDefault+69580>
0x000000000058984e <+69526>:	cmpl   $0x0,0x8(%rsp)
0x0000000000589853 <+69531>:	je     0x58989d <_PyEval_EvalFrameDefault+69605>
0x0000000000589855 <+69533>:	movzwl (%rcx),%eax
0x0000000000589858 <+69536>:	mov    %eax,%r12d
0x000000000058985b <+69539>:	mov    %eax,%edx
0x000000000058985d <+69541>:	shr    $0x8,%dx
0x0000000000589861 <+69545>:	movzwl %dx,%edx
0x0000000000589864 <+69548>:	mov    0x8(%rsp),%esi
0x0000000000589868 <+69552>:	shl    $0x8,%esi
0x000000000058986b <+69555>:	or     %edx,%esi
0x000000000058986d <+69557>:	mov    %esi,0x8(%rsp)
0x0000000000589871 <+69561>:	movzbl %al,%eax
0x0000000000589874 <+69564>:	mov    0x743ce0(,%rax,8),%rax
0x000000000058987c <+69572>:	mov    %rcx,%r13
0x000000000058987f <+69575>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000589884 <+69580>:	mov    $0x7444e0,%ecx
0x0000000000589889 <+69585>:	mov    $0x15e5,%edx
0x000000000058988e <+69590>:	mov    $0x74045c,%esi
0x0000000000589893 <+69595>:	mov    $0x7408ff,%edi
0x0000000000589898 <+69600>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058989d <+69605>:	mov    $0x7444e0,%ecx
0x00000000005898a2 <+69610>:	mov    $0x15e6,%edx
0x00000000005898a7 <+69615>:	mov    $0x74045c,%esi
0x00000000005898ac <+69620>:	mov    $0x740dd3,%edi
0x00000000005898b1 <+69625>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005898b6 <+69630>:	mov    %r13,0x38(%rbp)
0x00000000005898ba <+69634>:	mov    $0x6be5d0,%esi
0x00000000005898bf <+69639>:	mov    $0x744500,%edi
0x00000000005898c4 <+69644>:	call   0x5c6807 <_Py_FatalErrorFunc>
0x00000000005898c9 <+69649>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005898d1 <+69657>:	je     0x5899b2 <_PyEval_EvalFrameDefault+69882>
0x00000000005898d7 <+69663>:	mov    0x18(%rsp),%rax
0x00000000005898dc <+69668>:	cmpl   $0x0,0x2c(%rax)
0x00000000005898e0 <+69672>:	jne    0x5899cb <_PyEval_EvalFrameDefault+69907>
0x00000000005898e6 <+69678>:	mov    %r13,%rdx
0x00000000005898e9 <+69681>:	mov    0x38(%rsp),%rax
0x00000000005898ee <+69686>:	sub    %rax,%rdx
0x00000000005898f1 <+69689>:	sar    %rdx
0x00000000005898f4 <+69692>:	mov    0x20(%rbp),%rax
0x00000000005898f8 <+69696>:	cmp    %edx,0xa8(%rax)
0x00000000005898fe <+69702>:	jg     0x5899fe <_PyEval_EvalFrameDefault+69958>
0x0000000000589904 <+69708>:	add    $0xb8,%rax
0x000000000058990a <+69714>:	mov    0x38(%rbp),%r12
0x000000000058990e <+69718>:	sub    %rax,%r12
0x0000000000589911 <+69721>:	sar    %r12
0x0000000000589914 <+69724>:	mov    %r12d,%edx
0x0000000000589917 <+69727>:	mov    %r13,0x38(%rbp)
0x000000000058991b <+69731>:	movzwl 0x0(%r13),%eax
0x0000000000589920 <+69736>:	mov    %eax,%ecx
0x0000000000589922 <+69738>:	shr    $0x8,%cx
0x0000000000589926 <+69742>:	movzbl %al,%eax
0x0000000000589929 <+69745>:	cmpb   $0x97,0x7472a0(%rax)
0x0000000000589930 <+69752>:	je     0x5899e4 <_PyEval_EvalFrameDefault+69932>
0x0000000000589936 <+69758>:	cmpw   $0x0,0x535b0e(%rip)        # 0xabf44c <python_line_semaphore>
0x000000000058993e <+69766>:	jne    0x589a87 <_PyEval_EvalFrameDefault+70095>
0x0000000000589944 <+69772>:	cmpb   $0x0,0xc0(%rsp)
0x000000000058994c <+69780>:	je     0x5899fe <_PyEval_EvalFrameDefault+69958>
0x0000000000589952 <+69786>:	mov    0x18(%rsp),%rax
0x0000000000589957 <+69791>:	cmpq   $0x0,0x48(%rax)
0x000000000058995c <+69796>:	je     0x5899fe <_PyEval_EvalFrameDefault+69958>
0x0000000000589962 <+69802>:	cmpl   $0x0,0x2c(%rax)
0x0000000000589966 <+69806>:	jne    0x5899fe <_PyEval_EvalFrameDefault+69958>
0x000000000058996c <+69812>:	lea    0x48(%rbp),%r14
0x0000000000589970 <+69816>:	mov    %rbx,%rax
0x0000000000589973 <+69819>:	sub    %r14,%rax
0x0000000000589976 <+69822>:	sar    $0x3,%rax
0x000000000058997a <+69826>:	mov    %eax,0x40(%rbp)
0x000000000058997d <+69829>:	mov    0x18(%rsp),%rdx
0x0000000000589982 <+69834>:	mov    0x58(%rdx),%rsi
0x0000000000589986 <+69838>:	mov    0x48(%rdx),%rdi
0x000000000058998a <+69842>:	mov    %r12d,%r8d
0x000000000058998d <+69845>:	mov    %rbp,%rcx
0x0000000000589990 <+69848>:	call   0x57861b <maybe_call_line_trace>
0x0000000000589995 <+69853>:	movslq 0x40(%rbp),%rdx
0x0000000000589999 <+69857>:	lea    (%r14,%rdx,8),%rbx
0x000000000058999d <+69861>:	movl   $0xffffffff,0x40(%rbp)
0x00000000005899a4 <+69868>:	test   %eax,%eax
0x00000000005899a6 <+69870>:	jne    0x589aa0 <_PyEval_EvalFrameDefault+70120>
0x00000000005899ac <+69876>:	mov    0x38(%rbp),%r13
0x00000000005899b0 <+69880>:	jmp    0x5899fe <_PyEval_EvalFrameDefault+69958>
0x00000000005899b2 <+69882>:	mov    $0x7444e0,%ecx
0x00000000005899b7 <+69887>:	mov    $0x15f7,%edx
0x00000000005899bc <+69892>:	mov    $0x74045c,%esi
0x00000000005899c1 <+69897>:	mov    $0x740dfc,%edi
0x00000000005899c6 <+69902>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005899cb <+69907>:	mov    $0x7444e0,%ecx
0x00000000005899d0 <+69912>:	mov    $0x15f8,%edx
0x00000000005899d5 <+69917>:	mov    $0x74045c,%esi
0x00000000005899da <+69922>:	mov    $0x740e0f,%edi
0x00000000005899df <+69927>:	call   0x41f4f0 <__assert_fail@plt>
0x00000000005899e4 <+69932>:	cmp    $0x1,%cx
0x00000000005899e8 <+69936>:	jbe    0x589a37 <_PyEval_EvalFrameDefault+70015>
0x00000000005899ea <+69938>:	cmpb   $0x0,0xc0(%rsp)
0x00000000005899f2 <+69946>:	jne    0x589a48 <_PyEval_EvalFrameDefault+70032>
0x00000000005899f4 <+69948>:	cmpw   $0x0,0x535a44(%rip)        # 0xabf440 <python_function__entry_semaphore>
0x00000000005899fc <+69956>:	jne    0x589a7a <_PyEval_EvalFrameDefault+70082>
0x00000000005899fe <+69958>:	movzwl 0x0(%r13),%eax
0x0000000000589a03 <+69963>:	mov    %eax,%edx
0x0000000000589a05 <+69965>:	shr    $0x8,%dx
0x0000000000589a09 <+69969>:	movzwl %dx,%ecx
0x0000000000589a0c <+69972>:	mov    %ecx,0x8(%rsp)
0x0000000000589a10 <+69976>:	movzbl %al,%eax
0x0000000000589a13 <+69979>:	movzbl 0x7472a0(%rax),%r12d
0x0000000000589a1b <+69987>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589a20 <+69992>:	jne    0x589aa9 <_PyEval_EvalFrameDefault+70129>
0x0000000000589a26 <+69998>:	movzbl %r12b,%eax
0x0000000000589a2a <+70002>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000589a32 <+70010>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000589a37 <+70015>:	mov    0x28(%rsp),%rax
0x0000000000589a3c <+70020>:	mov    0x64(%rax),%eax
0x0000000000589a3f <+70023>:	test   %eax,%eax
0x0000000000589a41 <+70025>:	je     0x5899ea <_PyEval_EvalFrameDefault+69938>
0x0000000000589a43 <+70027>:	jmp    0x578b9a <_PyEval_EvalFrameDefault+738>
0x0000000000589a48 <+70032>:	lea    0x48(%rbp),%r12
0x0000000000589a4c <+70036>:	mov    %rbx,%rax
0x0000000000589a4f <+70039>:	sub    %r12,%rax
0x0000000000589a52 <+70042>:	sar    $0x3,%rax
0x0000000000589a56 <+70046>:	mov    %eax,0x40(%rbp)
0x0000000000589a59 <+70049>:	mov    %rbp,%rsi
0x0000000000589a5c <+70052>:	mov    0x18(%rsp),%rdi
0x0000000000589a61 <+70057>:	call   0x577fd3 <trace_function_entry>
0x0000000000589a66 <+70062>:	movslq 0x40(%rbp),%rdx
0x0000000000589a6a <+70066>:	lea    (%r12,%rdx,8),%rbx
0x0000000000589a6e <+70070>:	test   %eax,%eax
0x0000000000589a70 <+70072>:	je     0x5899f4 <_PyEval_EvalFrameDefault+69948>
0x0000000000589a72 <+70074>:	mov    %r13,%r15
0x0000000000589a75 <+70077>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589a7a <+70082>:	mov    %rbp,%rdi
0x0000000000589a7d <+70085>:	call   0x576cbf <dtrace_function_entry>
0x0000000000589a82 <+70090>:	jmp    0x5899fe <_PyEval_EvalFrameDefault+69958>
0x0000000000589a87 <+70095>:	mov    0x18(%rsp),%rax
0x0000000000589a8c <+70100>:	lea    0xf8(%rax),%rsi
0x0000000000589a93 <+70107>:	mov    %rbp,%rdi
0x0000000000589a96 <+70110>:	call   0x576d47 <maybe_dtrace_line>
0x0000000000589a9b <+70115>:	jmp    0x589944 <_PyEval_EvalFrameDefault+69772>
0x0000000000589aa0 <+70120>:	lea    0x2(%r13),%r15
0x0000000000589aa4 <+70124>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589aa9 <+70129>:	mov    %r13,%rdx
0x0000000000589aac <+70132>:	mov    %rbx,%rsi
0x0000000000589aaf <+70135>:	mov    %rbp,%rdi
0x0000000000589ab2 <+70138>:	call   0x573f7b <lltrace_instruction>
0x0000000000589ab7 <+70143>:	jmp    0x589a26 <_PyEval_EvalFrameDefault+69998>
0x0000000000589abc <+70148>:	movzbl 0x0(%r13),%r12d
0x0000000000589ac1 <+70153>:	mov    %rbp,%rdi
0x0000000000589ac4 <+70156>:	call   0x5a5326 <_PyInterpreterFrame_GetLine>
0x0000000000589ac9 <+70161>:	mov    %eax,%ecx
0x0000000000589acb <+70163>:	mov    %r12d,%r8d
0x0000000000589ace <+70166>:	mov    $0x740e24,%edx
0x0000000000589ad3 <+70171>:	mov    $0x1,%esi
0x0000000000589ad8 <+70176>:	mov    0x5359a1(%rip),%rdi        # 0xabf480 <stderr@GLIBC_2.2.5>
0x0000000000589adf <+70183>:	mov    $0x0,%eax
0x0000000000589ae4 <+70188>:	call   0x41f3c0 <__fprintf_chk@plt>
0x0000000000589ae9 <+70193>:	mov    $0x740e40,%edx
0x0000000000589aee <+70198>:	mov    0x3ff0c3(%rip),%rsi        # 0x988bb8 <PyExc_SystemError>
0x0000000000589af5 <+70205>:	mov    0x18(%rsp),%rdi
0x0000000000589afa <+70210>:	call   0x5a33b2 <_PyErr_SetString>
0x0000000000589aff <+70215>:	mov    %r13,%r15
0x0000000000589b02 <+70218>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589b07 <+70223>:	mov    $0x7444e0,%ecx
0x0000000000589b0c <+70228>:	mov    $0x164f,%edx
0x0000000000589b11 <+70233>:	mov    $0x74045c,%esi
0x0000000000589b16 <+70238>:	mov    $0x740e4f,%edi
0x0000000000589b1b <+70243>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589b20 <+70248>:	mov    $0x7444e0,%ecx
0x0000000000589b25 <+70253>:	mov    $0x165a,%edx
0x0000000000589b2a <+70258>:	mov    $0x74045c,%esi
0x0000000000589b2f <+70263>:	mov    $0x7408da,%edi
0x0000000000589b34 <+70268>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589b39 <+70273>:	mov    %rbx,%rdi
0x0000000000589b3c <+70276>:	call   0x5a32f0 <_PyErr_SetKeyError>
0x0000000000589b41 <+70281>:	jmp    0x57af8b <_PyEval_EvalFrameDefault+9939>
0x0000000000589b46 <+70286>:	mov    %rdx,%rbx
0x0000000000589b49 <+70289>:	jmp    0x589b4e <_PyEval_EvalFrameDefault+70294>
0x0000000000589b4b <+70291>:	mov    %r14,%rbx
0x0000000000589b4e <+70294>:	mov    0x20(%rbp),%rax
0x0000000000589b52 <+70298>:	movslq 0x8(%rsp),%rsi
0x0000000000589b57 <+70303>:	mov    0x60(%rax),%rdi
0x0000000000589b5b <+70307>:	call   0x500470 <PyTuple_GetItem>
0x0000000000589b60 <+70312>:	mov    %rax,%rcx
0x0000000000589b63 <+70315>:	mov    $0x7426f0,%edx
0x0000000000589b68 <+70320>:	mov    0x401089(%rip),%rsi        # 0x98abf8 <PyExc_UnboundLocalError>
0x0000000000589b6f <+70327>:	mov    0x18(%rsp),%rdi
0x0000000000589b74 <+70332>:	call   0x576e0d <format_exc_check_arg>
0x0000000000589b79 <+70337>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589b7e <+70342>:	mov    %rdx,%rbx
0x0000000000589b81 <+70345>:	jmp    0x589b4e <_PyEval_EvalFrameDefault+70294>
0x0000000000589b83 <+70347>:	mov    %r13,%r15
0x0000000000589b86 <+70350>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589b8b <+70355>:	mov    0x8(%rsp),%rbx
0x0000000000589b90 <+70360>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589b95 <+70365>:	mov    %r13,%rbx
0x0000000000589b98 <+70368>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589b9d <+70373>:	mov    %r13,%rbx
0x0000000000589ba0 <+70376>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589ba5 <+70381>:	mov    0x8(%rsp),%rbx
0x0000000000589baa <+70386>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589baf <+70391>:	mov    %r12,%rbx
0x0000000000589bb2 <+70394>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589bb7 <+70399>:	mov    %r12,%rbx
0x0000000000589bba <+70402>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589bbf <+70407>:	mov    %r13,%rbx
0x0000000000589bc2 <+70410>:	jmp    0x5789ce <_PyEval_EvalFrameDefault+278>
0x0000000000589bc7 <+70415>:	mov    $0x7444e0,%ecx
0x0000000000589bcc <+70420>:	mov    $0x1674,%edx
0x0000000000589bd1 <+70425>:	mov    $0x74045c,%esi
0x0000000000589bd6 <+70430>:	mov    $0x6dba3c,%edi
0x0000000000589bdb <+70435>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589be0 <+70440>:	mov    $0x0,%eax
0x0000000000589be5 <+70445>:	test   %eax,%eax
0x0000000000589be7 <+70447>:	je     0x589c14 <_PyEval_EvalFrameDefault+70492>
0x0000000000589be9 <+70449>:	mov    0x18(%rsp),%rdx
0x0000000000589bee <+70454>:	mov    0x48(%rdx),%rdi
0x0000000000589bf2 <+70458>:	test   %rdi,%rdi
0x0000000000589bf5 <+70461>:	je     0x589c2b <_PyEval_EvalFrameDefault+70515>
0x0000000000589bf7 <+70463>:	mov    0x58(%rdx),%rsi
0x0000000000589bfb <+70467>:	mov    %rbp,%rcx
0x0000000000589bfe <+70470>:	call   0x578770 <call_exc_trace>
0x0000000000589c03 <+70475>:	mov    0x38(%rsp),%r14
0x0000000000589c08 <+70480>:	jmp    0x589dbb <_PyEval_EvalFrameDefault+70915>
0x0000000000589c0d <+70485>:	mov    $0x1,%eax
0x0000000000589c12 <+70490>:	jmp    0x589be5 <_PyEval_EvalFrameDefault+70445>
0x0000000000589c14 <+70492>:	mov    %rbp,%rdi
0x0000000000589c17 <+70495>:	call   0x576f57 <_PyFrame_GetFrameObject>
0x0000000000589c1c <+70500>:	mov    %rax,%rdi
0x0000000000589c1f <+70503>:	test   %rax,%rax
0x0000000000589c22 <+70506>:	je     0x589be9 <_PyEval_EvalFrameDefault+70449>
0x0000000000589c24 <+70508>:	call   0x5dcc1c <PyTraceBack_Here>
0x0000000000589c29 <+70513>:	jmp    0x589be9 <_PyEval_EvalFrameDefault+70449>
0x0000000000589c2b <+70515>:	mov    0x38(%rsp),%r14
0x0000000000589c30 <+70520>:	jmp    0x589dbb <_PyEval_EvalFrameDefault+70915>
0x0000000000589c35 <+70525>:	mov    0x18(%rsp),%rdi
0x0000000000589c3a <+70530>:	call   0x573630 <_PyErr_Occurred>
0x0000000000589c3f <+70535>:	test   %rax,%rax
0x0000000000589c42 <+70538>:	je     0x589c83 <_PyEval_EvalFrameDefault+70603>
0x0000000000589c44 <+70540>:	lea    0x48(%rbp),%r13
0x0000000000589c48 <+70544>:	mov    0x20(%rbp),%rax
0x0000000000589c4c <+70548>:	movslq 0x4c(%rax),%rax
0x0000000000589c50 <+70552>:	lea    0x0(%r13,%rax,8),%r12
0x0000000000589c55 <+70557>:	cmp    %rbx,%r12
0x0000000000589c58 <+70560>:	jae    0x589cb5 <_PyEval_EvalFrameDefault+70653>
0x0000000000589c5a <+70562>:	mov    0x20(%rbp),%rax
0x0000000000589c5e <+70566>:	movslq 0x4c(%rax),%rax
0x0000000000589c62 <+70570>:	lea    0x0(%r13,%rax,8),%rdx
0x0000000000589c67 <+70575>:	mov    %rbx,%rax
0x0000000000589c6a <+70578>:	sub    %rdx,%rax
0x0000000000589c6d <+70581>:	sar    $0x3,%rax
0x0000000000589c71 <+70585>:	test   %eax,%eax
0x0000000000589c73 <+70587>:	jle    0x589c9c <_PyEval_EvalFrameDefault+70628>
0x0000000000589c75 <+70589>:	sub    $0x8,%rbx
0x0000000000589c79 <+70593>:	mov    (%rbx),%rdi
0x0000000000589c7c <+70596>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589c81 <+70601>:	jmp    0x589c55 <_PyEval_EvalFrameDefault+70557>
0x0000000000589c83 <+70603>:	mov    $0x7444e0,%ecx
0x0000000000589c88 <+70608>:	mov    $0x168c,%edx
0x0000000000589c8d <+70613>:	mov    $0x74045c,%esi
0x0000000000589c92 <+70618>:	mov    $0x6dba3c,%edi
0x0000000000589c97 <+70623>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589c9c <+70628>:	mov    $0x7444e0,%ecx
0x0000000000589ca1 <+70633>:	mov    $0x1691,%edx
0x0000000000589ca6 <+70638>:	mov    $0x74045c,%esi
0x0000000000589cab <+70643>:	mov    $0x7408da,%edi
0x0000000000589cb0 <+70648>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589cb5 <+70653>:	mov    0x20(%rbp),%rax
0x0000000000589cb9 <+70657>:	movslq 0x4c(%rax),%rax
0x0000000000589cbd <+70661>:	lea    0x0(%r13,%rax,8),%rdx
0x0000000000589cc2 <+70666>:	mov    %rbx,%rax
0x0000000000589cc5 <+70669>:	sub    %rdx,%rax
0x0000000000589cc8 <+70672>:	sar    $0x3,%rax
0x0000000000589ccc <+70676>:	test   %eax,%eax
0x0000000000589cce <+70678>:	jne    0x589d02 <_PyEval_EvalFrameDefault+70730>
0x0000000000589cd0 <+70680>:	mov    %rbx,%rax
0x0000000000589cd3 <+70683>:	sub    %r13,%rax
0x0000000000589cd6 <+70686>:	sar    $0x3,%rax
0x0000000000589cda <+70690>:	mov    %eax,0x40(%rbp)
0x0000000000589cdd <+70693>:	cmpb   $0x0,0xc0(%rsp)
0x0000000000589ce5 <+70701>:	jne    0x589d1b <_PyEval_EvalFrameDefault+70755>
0x0000000000589ce7 <+70703>:	cmpw   $0x0,0x535753(%rip)        # 0xabf442 <python_function__return_semaphore>
0x0000000000589cef <+70711>:	je     0x578a7e <_PyEval_EvalFrameDefault+454>
0x0000000000589cf5 <+70717>:	mov    %rbp,%rdi
0x0000000000589cf8 <+70720>:	call   0x576cf2 <dtrace_function_return>
0x0000000000589cfd <+70725>:	jmp    0x578a7e <_PyEval_EvalFrameDefault+454>
0x0000000000589d02 <+70730>:	mov    $0x7444e0,%ecx
0x0000000000589d07 <+70735>:	mov    $0x1694,%edx
0x0000000000589d0c <+70740>:	mov    $0x74045c,%esi
0x0000000000589d11 <+70745>:	mov    $0x740e5f,%edi
0x0000000000589d16 <+70750>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589d1b <+70755>:	mov    $0x0,%edx
0x0000000000589d20 <+70760>:	mov    %rbp,%rsi
0x0000000000589d23 <+70763>:	mov    0x18(%rsp),%rdi
0x0000000000589d28 <+70768>:	call   0x57804b <trace_function_exit>
0x0000000000589d2d <+70773>:	jmp    0x589ce7 <_PyEval_EvalFrameDefault+70703>
0x0000000000589d2f <+70775>:	mov    $0x7444e0,%ecx
0x0000000000589d34 <+70780>:	mov    $0x169b,%edx
0x0000000000589d39 <+70785>:	mov    $0x74045c,%esi
0x0000000000589d3e <+70790>:	mov    $0x740e72,%edi
0x0000000000589d43 <+70795>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589d48 <+70800>:	sub    $0x8,%rbx
0x0000000000589d4c <+70804>:	mov    (%rbx),%rdi
0x0000000000589d4f <+70807>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589d54 <+70812>:	cmp    %rbx,%r13
0x0000000000589d57 <+70815>:	jae    0x589d8c <_PyEval_EvalFrameDefault+70868>
0x0000000000589d59 <+70817>:	mov    0x20(%rbp),%rax
0x0000000000589d5d <+70821>:	movslq 0x4c(%rax),%rax
0x0000000000589d61 <+70825>:	lea    (%r12,%rax,8),%rdx
0x0000000000589d65 <+70829>:	mov    %rbx,%rax
0x0000000000589d68 <+70832>:	sub    %rdx,%rax
0x0000000000589d6b <+70835>:	sar    $0x3,%rax
0x0000000000589d6f <+70839>:	test   %eax,%eax
0x0000000000589d71 <+70841>:	jg     0x589d48 <_PyEval_EvalFrameDefault+70800>
0x0000000000589d73 <+70843>:	mov    $0x7444e0,%ecx
0x0000000000589d78 <+70848>:	mov    $0x169e,%edx
0x0000000000589d7d <+70853>:	mov    $0x74045c,%esi
0x0000000000589d82 <+70858>:	mov    $0x7408da,%edi
0x0000000000589d87 <+70863>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589d8c <+70868>:	cmpl   $0x0,0x84(%rsp)
0x0000000000589d94 <+70876>:	je     0x589e4a <_PyEval_EvalFrameDefault+71058>
0x0000000000589d9a <+70882>:	mov    0x20(%rbp),%rax
0x0000000000589d9e <+70886>:	add    $0xb8,%rax
0x0000000000589da4 <+70892>:	mov    0x38(%rbp),%rdi
0x0000000000589da8 <+70896>:	sub    %rax,%rdi
0x0000000000589dab <+70899>:	sar    %rdi
0x0000000000589dae <+70902>:	movslq %edi,%rdi
0x0000000000589db1 <+70905>:	call   0x4d4dde <PyLong_FromLong>
0x0000000000589db6 <+70910>:	test   %rax,%rax
0x0000000000589db9 <+70913>:	jne    0x589e21 <_PyEval_EvalFrameDefault+71017>
0x0000000000589dbb <+70915>:	mov    %r15,%rsi
0x0000000000589dbe <+70918>:	sub    %r14,%rsi
0x0000000000589dc1 <+70921>:	sar    %rsi
0x0000000000589dc4 <+70924>:	sub    $0x1,%esi
0x0000000000589dc7 <+70927>:	mov    0x20(%rbp),%rdi
0x0000000000589dcb <+70931>:	lea    0x84(%rsp),%r8
0x0000000000589dd3 <+70939>:	lea    0x80(%rsp),%rcx
0x0000000000589ddb <+70947>:	lea    0x7c(%rsp),%rdx
0x0000000000589de0 <+70952>:	call   0x573503 <get_exception_handler>
0x0000000000589de5 <+70957>:	test   %eax,%eax
0x0000000000589de7 <+70959>:	je     0x589c35 <_PyEval_EvalFrameDefault+70525>
0x0000000000589ded <+70965>:	lea    0x48(%rbp),%r12
0x0000000000589df1 <+70969>:	mov    0x20(%rbp),%rax
0x0000000000589df5 <+70973>:	movslq 0x4c(%rax),%rcx
0x0000000000589df9 <+70977>:	lea    (%r12,%rcx,8),%rax
0x0000000000589dfd <+70981>:	mov    %rbx,%rdx
0x0000000000589e00 <+70984>:	sub    %rax,%rdx
0x0000000000589e03 <+70987>:	sar    $0x3,%rdx
0x0000000000589e07 <+70991>:	mov    0x7c(%rsp),%eax
0x0000000000589e0b <+70995>:	cmp    %eax,%edx
0x0000000000589e0d <+70997>:	jl     0x589d2f <_PyEval_EvalFrameDefault+70775>
0x0000000000589e13 <+71003>:	cltq
0x0000000000589e15 <+71005>:	add    %rcx,%rax
0x0000000000589e18 <+71008>:	lea    (%r12,%rax,8),%r13
0x0000000000589e1c <+71012>:	jmp    0x589d54 <_PyEval_EvalFrameDefault+70812>
0x0000000000589e21 <+71017>:	lea    0x8(%rbx),%rdx
0x0000000000589e25 <+71021>:	mov    %rax,(%rbx)
0x0000000000589e28 <+71024>:	mov    0x20(%rbp),%rcx
0x0000000000589e2c <+71028>:	movslq 0x4c(%rcx),%rax
0x0000000000589e30 <+71032>:	lea    (%r12,%rax,8),%rsi
0x0000000000589e34 <+71036>:	mov    %rdx,%rax
0x0000000000589e37 <+71039>:	sub    %rsi,%rax
0x0000000000589e3a <+71042>:	sar    $0x3,%rax
0x0000000000589e3e <+71046>:	cmp    %eax,0x44(%rcx)
0x0000000000589e41 <+71049>:	jl     0x589f66 <_PyEval_EvalFrameDefault+71342>
0x0000000000589e47 <+71055>:	mov    %rdx,%rbx
0x0000000000589e4a <+71058>:	lea    0xb8(%rsp),%rcx
0x0000000000589e52 <+71066>:	lea    0xb0(%rsp),%rdx
0x0000000000589e5a <+71074>:	lea    0xa8(%rsp),%rsi
0x0000000000589e62 <+71082>:	mov    0x18(%rsp),%r15
0x0000000000589e67 <+71087>:	mov    %r15,%rdi
0x0000000000589e6a <+71090>:	call   0x5a26f4 <_PyErr_Fetch>
0x0000000000589e6f <+71095>:	lea    0xb8(%rsp),%rcx
0x0000000000589e77 <+71103>:	lea    0xb0(%rsp),%rdx
0x0000000000589e7f <+71111>:	lea    0xa8(%rsp),%rsi
0x0000000000589e87 <+71119>:	mov    %r15,%rdi
0x0000000000589e8a <+71122>:	call   0x5a396c <_PyErr_NormalizeException>
0x0000000000589e8f <+71127>:	mov    0xb8(%rsp),%rsi
0x0000000000589e97 <+71135>:	test   %rsi,%rsi
0x0000000000589e9a <+71138>:	je     0x589f7f <_PyEval_EvalFrameDefault+71367>
0x0000000000589ea0 <+71144>:	mov    0xb0(%rsp),%rdi
0x0000000000589ea8 <+71152>:	call   0x4ba48a <PyException_SetTraceback>
0x0000000000589ead <+71157>:	mov    0xb8(%rsp),%rdi
0x0000000000589eb5 <+71165>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589eba <+71170>:	mov    0xa8(%rsp),%rdi
0x0000000000589ec2 <+71178>:	call   0x573cb3 <Py_XDECREF>
0x0000000000589ec7 <+71183>:	lea    0x8(%rbx),%r14
0x0000000000589ecb <+71187>:	mov    0xb0(%rsp),%rax
0x0000000000589ed3 <+71195>:	mov    %rax,(%rbx)
0x0000000000589ed6 <+71198>:	mov    0x20(%rbp),%rdx
0x0000000000589eda <+71202>:	movslq 0x4c(%rdx),%rax
0x0000000000589ede <+71206>:	lea    (%r12,%rax,8),%rcx
0x0000000000589ee2 <+71210>:	mov    %r14,%rax
0x0000000000589ee5 <+71213>:	sub    %rcx,%rax
0x0000000000589ee8 <+71216>:	sar    $0x3,%rax
0x0000000000589eec <+71220>:	cmp    %eax,0x44(%rdx)
0x0000000000589eef <+71223>:	jl     0x589f96 <_PyEval_EvalFrameDefault+71390>
0x0000000000589ef5 <+71229>:	movslq 0x80(%rsp),%rax
0x0000000000589efd <+71237>:	mov    0x38(%rsp),%rcx
0x0000000000589f02 <+71242>:	lea    (%rcx,%rax,2),%r13
0x0000000000589f06 <+71246>:	movzwl 0x0(%r13),%ebx
0x0000000000589f0b <+71251>:	mov    %ebx,%eax
0x0000000000589f0d <+71253>:	shr    $0x8,%ax
0x0000000000589f11 <+71257>:	movzwl %ax,%eax
0x0000000000589f14 <+71260>:	mov    %eax,0x8(%rsp)
0x0000000000589f18 <+71264>:	cmpl   $0x0,0x14(%rsp)
0x0000000000589f1d <+71269>:	jne    0x589faf <_PyEval_EvalFrameDefault+71415>
0x0000000000589f23 <+71275>:	movzbl 0xc0(%rsp),%r12d
0x0000000000589f2c <+71284>:	lea    -0x1(%r12),%eax
0x0000000000589f31 <+71289>:	cmp    $0xfd,%al
0x0000000000589f33 <+71291>:	jbe    0x589fc2 <_PyEval_EvalFrameDefault+71434>
0x0000000000589f39 <+71297>:	cmpw   $0x0,0x53550b(%rip)        # 0xabf44c <python_line_semaphore>
0x0000000000589f41 <+71305>:	jne    0x589fdb <_PyEval_EvalFrameDefault+71459>
0x0000000000589f47 <+71311>:	mov    $0x0,%eax
0x0000000000589f4c <+71316>:	or     %eax,%r12d
0x0000000000589f4f <+71319>:	or     %ebx,%r12d
0x0000000000589f52 <+71322>:	movzbl %r12b,%eax
0x0000000000589f56 <+71326>:	mov    0x743ce0(,%rax,8),%rax
0x0000000000589f5e <+71334>:	mov    %r14,%rbx
0x0000000000589f61 <+71337>:	jmp    0x57d609 <_PyEval_EvalFrameDefault+19793>
0x0000000000589f66 <+71342>:	mov    $0x7444e0,%ecx
0x0000000000589f6b <+71347>:	mov    $0x16a8,%edx
0x0000000000589f70 <+71352>:	mov    $0x74045c,%esi
0x0000000000589f75 <+71357>:	mov    $0x7408bc,%edi
0x0000000000589f7a <+71362>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589f7f <+71367>:	mov    $0x997120,%esi
0x0000000000589f84 <+71372>:	mov    0xb0(%rsp),%rdi
0x0000000000589f8c <+71380>:	call   0x4ba48a <PyException_SetTraceback>
0x0000000000589f91 <+71385>:	jmp    0x589ead <_PyEval_EvalFrameDefault+71157>
0x0000000000589f96 <+71390>:	mov    $0x7444e0,%ecx
0x0000000000589f9b <+71395>:	mov    $0x16b6,%edx
0x0000000000589fa0 <+71400>:	mov    $0x74045c,%esi
0x0000000000589fa5 <+71405>:	mov    $0x7408bc,%edi
0x0000000000589faa <+71410>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589faf <+71415>:	mov    %r13,%rdx
0x0000000000589fb2 <+71418>:	mov    %r14,%rsi
0x0000000000589fb5 <+71421>:	mov    %rbp,%rdi
0x0000000000589fb8 <+71424>:	call   0x573f7b <lltrace_instruction>
0x0000000000589fbd <+71429>:	jmp    0x589f23 <_PyEval_EvalFrameDefault+71275>
0x0000000000589fc2 <+71434>:	mov    $0x7444e0,%ecx
0x0000000000589fc7 <+71439>:	mov    $0x16b9,%edx
0x0000000000589fcc <+71444>:	mov    $0x74045c,%esi
0x0000000000589fd1 <+71449>:	mov    $0x742a50,%edi
0x0000000000589fd6 <+71454>:	call   0x41f4f0 <__assert_fail@plt>
0x0000000000589fdb <+71459>:	mov    $0xffffffff,%eax
0x0000000000589fe0 <+71464>:	jmp    0x589f4c <_PyEval_EvalFrameDefault+71316>
0x0000000000589fe5 <+71469>:	mov    %r14d,0x14(%rsp)
0x0000000000589fea <+71474>:	jmp    0x578a7e <_PyEval_EvalFrameDefault+454>
0x0000000000589fef <+71479>:	mov    $0x7444e0,%ecx
0x0000000000589ff4 <+71484>:	mov    $0x16be,%edx
0x0000000000589ff9 <+71489>:	mov    $0x74045c,%esi
0x0000000000589ffe <+71494>:	mov    $0x6dba3c,%edi
0x000000000058a003 <+71499>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058a008 <+71504>:	mov    $0x7444e0,%ecx
0x000000000058a00d <+71509>:	mov    $0x16c4,%edx
0x000000000058a012 <+71514>:	mov    $0x74045c,%esi
0x000000000058a017 <+71519>:	mov    $0x6e2990,%edi
0x000000000058a01c <+71524>:	call   0x41f4f0 <__assert_fail@plt>
0x000000000058a021 <+71529>:	mov    0x30(%rbp),%rbx
0x000000000058a025 <+71533>:	mov    %rbx,0xc8(%rsp)
0x000000000058a02d <+71541>:	mov    %rbp,%rsi
0x000000000058a030 <+71544>:	mov    0x18(%rsp),%rdi
0x000000000058a035 <+71549>:	call   0x576fbf <_PyEvalFrameClearAndPop>
0x000000000058a03a <+71554>:	mov    %rbx,%rbp
0x000000000058a03d <+71557>:	jmp    0x578980 <_PyEval_EvalFrameDefault+200>
0x000000000058a042 <+71562>:	mov    $0x7444e0,%ecx
0x000000000058a047 <+71567>:	mov    $0x16cd,%edx
0x000000000058a04c <+71572>:	mov    $0x74045c,%esi
0x000000000058a051 <+71577>:	mov    $0x742a28,%edi
0x000000000058a056 <+71582>:	call   0x41f4f0 <__assert_fail@plt>
